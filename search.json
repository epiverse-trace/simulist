[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 readepi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/age-strat-rates.html","id":"population-wide-rates","dir":"Articles","previous_headings":"","what":"Population-wide rates","title":"Age-stratified hospitalisation and death rates","text":"Simulate line list population-wide default rates: hospitalisation rate: 0.2 death rate hospitals 0.5 death rate outside hospitals 0.05 can run another simulation change rates. Still rates applied entire population. scenario probability hospitalised infected higher, mortality rate hospitalised non-hospitalised groups lower.","code":"linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death )  # first 6 rows of linelist head(linelist) #>   id       case_name case_type gender age onset_date hospitalisation_date #> 1  1  Ashley Johnson confirmed      f  28 2023-01-01                 <NA> #> 2  2   Bryant Barman confirmed      m  78 2023-01-01                 <NA> #> 3  3    Olivia Clark  probable      f  31 2023-01-02                 <NA> #> 4  4 Alexis Asuncion  probable      f  12 2023-01-02           2023-01-06 #> 5  5     Lucas Suder suspected      m  80 2023-01-02                 <NA> #> 6  6   Claire Barnes confirmed      f  44 2023-01-02                 <NA> #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2023-01-04        2023-01-07 #> 3         2022-12-30        2023-01-02 #> 4         2023-01-02        2023-01-05 #> 5         2023-01-06        2023-01-07 #> 6         2023-01-05        2023-01-07 linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_rate = 0.4,   hosp_death_rate = 0.2,   non_hosp_death_rate = 0.01 )  head(linelist) #>   id        case_name case_type gender age onset_date hospitalisation_date #> 1  1  Aaida el-Hariri suspected      f  19 2023-01-01           2023-01-01 #> 2  2    Shane Valadez confirmed      m  77 2023-01-01           2023-01-02 #> 3  3  Kristhel Chavez confirmed      f  37 2023-01-01           2023-01-14 #> 4  4  Tashena Vincent suspected      f  27 2023-01-07           2023-01-09 #> 5  5    Gregory Aofia confirmed      m  73 2023-01-01           2023-01-01 #> 6  6 Nyein Nyein Iese suspected      f  52 2023-01-07           2023-01-13 #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2023-01-04        2023-01-07 #> 3         2022-12-31        2023-01-01 #> 4         2022-12-31        2023-01-01 #> 5         2023-01-01        2023-01-02 #> 6         2023-01-08        2023-01-10"},{"path":"/articles/age-strat-rates.html","id":"age-stratified-rates","dir":"Articles","previous_headings":"","what":"Age-stratified rates","title":"Age-stratified hospitalisation and death rates","text":"Now can run age-stratified rates creating table (<data.frame>) contains lower upper limits age groups respective rates. example hospitalisation rate : 0.2 (20%) 80s 0.1 (10%) 5s 0.05 (5%) rest minimum age age group inclusive, maximum age age group exclusive, except oldest age group inclusive minimum maximum age. age groups formed position input vectors. example first age group first element vector, minimum age 1, maximum age five hospitalisation rate group 0.1. age group forms row table. minimum age youngest age group maximum age oldest age group must match age range specified age_range argument sim_linelist(). function error. age-stratified rate table match default (c(1, 90)), age_range argument need set match. example, default age range population 1 90 (inclusive). example , lowest age group started 1 oldest age group stopped 90. matches default age_range = c(1, 90). However, see oldest age bracket 95 function run. order make code run age-stratified hospitalisation rate given, age_range can adjusted. Exactly method age-stratified rates applies death rates. First create <date.frame> age groups respective, case, death rates, supply either hosp_death_rate non_hosp_death_rate arguments, . couple examples: now age-stratified tables supplied one rate. However, can supplied simulation. case hospitalisation rate, death rates inside outside hospital, specified.","code":"age_dep_hosp_rate <- data.frame(   min_age = c(1, 5, 80),   max_age = c(5, 80, 90),   rate = c(0.1, 0.05, 0.2) ) age_dep_hosp_rate #>   min_age max_age rate #> 1       1       5 0.10 #> 2       5      80 0.05 #> 3      80      90 0.20 linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_rate = age_dep_hosp_rate )  head(linelist) #>   id       case_name case_type gender age onset_date hospitalisation_date #> 1  1   Jennifer Chea confirmed      f  75 2023-01-01                 <NA> #> 2  2 Kelly Deardeuff confirmed      f  89 2023-01-01           2023-01-02 #> 3  3  Suhaib el-Kaba  probable      m  56 2023-01-01                 <NA> #> 4  4   Dustin Segall confirmed      m  35 2023-01-01                 <NA> #> 5  5  Kyle Patterson confirmed      m  15 2023-01-02                 <NA> #> 6  6  Nicolas Barker  probable      m  58 2023-01-01                 <NA> #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2023-01-02        2023-01-02 #> 3         2022-12-31        2023-01-03 #> 4         2023-01-02        2023-01-04 #> 5         2022-12-28        2023-01-02 #> 6         2023-01-04        2023-01-04 age_dep_hosp_rate <- data.frame(   min_age = c(1, 5, 80),   max_age = c(5, 80, 95),   rate = c(0.1, 0.05, 0.2) ) age_dep_hosp_rate #>   min_age max_age rate #> 1       1       5 0.10 #> 2       5      80 0.05 #> 3      80      95 0.20  linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_rate = age_dep_hosp_rate ) #> Error in .check_rate_df(hosp_rate, age_range = age_range): maximum age of the highest age group should match upper age range age_dep_hosp_rate <- data.frame(   min_age = c(1, 5, 80),   max_age = c(5, 80, 95),   rate = c(0.1, 0.05, 0.2) )  linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_rate = age_dep_hosp_rate,   age_range = c(1, 95) )  head(linelist) #>   id            case_name case_type gender age onset_date hospitalisation_date #> 1  1         Alexander Ng confirmed      m  24 2023-01-01                 <NA> #> 2  2     Elizabeth Benson confirmed      f  94 2023-01-01                 <NA> #> 3  3      Akram al-Hosein suspected      m  74 2023-01-02                 <NA> #> 4  4         Treyvon Hall confirmed      m  62 2023-01-02                 <NA> #> 5  5    Hamaama al-Habeeb confirmed      f  41 2023-01-02                 <NA> #> 6  6 Christopher Martinez confirmed      m  58 2023-01-03                 <NA> #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2023-01-05        2023-01-08 #> 3         2023-01-03        2023-01-06 #> 4         2023-01-01        2023-01-04 #> 5         2023-01-05        2023-01-05 #> 6         2023-01-01        2023-01-07 age_dep_hosp_death_rate <- data.frame(   min_age = c(1, 5, 80),   max_age = c(5, 80, 90),   rate = c(0.3, 0.1, 0.6) ) age_dep_hosp_death_rate #>   min_age max_age rate #> 1       1       5  0.3 #> 2       5      80  0.1 #> 3      80      90  0.6  linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_death_rate = age_dep_hosp_death_rate ) age_dep_non_hosp_death_rate <- data.frame(   min_age = c(1, 5, 80),   max_age = c(5, 80, 90),   rate = c(0.1, 0.05, 0.1) ) age_dep_non_hosp_death_rate #>   min_age max_age rate #> 1       1       5 0.10 #> 2       5      80 0.05 #> 3      80      90 0.10  linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   non_hosp_death_rate = age_dep_non_hosp_death_rate ) age_dep_hosp_rate <- data.frame(   min_age = c(1, 5, 80),   max_age = c(5, 80, 90),   rate = c(0.1, 0.05, 0.2) ) age_dep_hosp_death_rate <- data.frame(   min_age = c(1, 5, 80),   max_age = c(5, 80, 90),   rate = c(0.3, 0.1, 0.6) ) age_dep_non_hosp_death_rate <- data.frame(   min_age = c(1, 5, 80),   max_age = c(5, 80, 90),   rate = c(0.1, 0.05, 0.1) )  linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_rate = age_dep_hosp_rate,   hosp_death_rate = age_dep_hosp_death_rate,   non_hosp_death_rate = age_dep_non_hosp_death_rate )  head(linelist) #>   id             case_name case_type gender age onset_date hospitalisation_date #> 1  1          Darius Grant  probable      m  27 2023-01-01                 <NA> #> 2  2 Alexandria Wooldridge confirmed      f  56 2023-01-03                 <NA> #> 3  3        Ashay Callbeck confirmed      m  55 2023-01-01                 <NA> #> 4  4          Shane Ockert suspected      m  33 2023-01-04                 <NA> #> 5  5     Briana Quick Bear suspected      f  48 2023-01-02                 <NA> #> 6  6         Brady Conolty confirmed      m  53 2023-01-07                 <NA> #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2023-01-04        2023-01-07 #> 3         2022-12-29        2023-01-01 #> 4         2023-01-02        2023-01-04 #> 5         2023-01-01        2023-01-04 #> 6         2023-01-06        2023-01-07"},{"path":"/articles/simulist.html","id":"case-type","dir":"Articles","previous_headings":"","what":"Case type","title":"Getting Started with {simulist}","text":"midst infectious disease outbreak may possible confirm every case. confirmed case usually done via diagnostic test may may need carried laboratory. several reasons case may confirmed, one example limited testing capacity, especially fast growing epidemics. categories cases : probable suspected. Probable cases show clinical evidence disease , , confirmed diagnostic test. Suspected cases possibly infected show clear clinical epidemiological evidence, diagnostic test performed. line list output {simulist} simulation contains column (case_type) type case. {simulist} can simulate varying probabilities case suspected, probable confirmed. default sim_linelist() function uses probabilities suspected = 0.2, probable = 0.3 confirmed = 0.5. alter probabilities, supply named vector sim_linelist() argument case_type_probs. vector contain three numbers, names suspected, probable confirmed, numbers summing one. change values simulate outbreak proportion cases confirmed laboratory testing high. also possible set one categories 1, case every case type. way {simulist} assigns case types pasting case types onto existing case data. Thus, viewed true underlying data cases simulation confirmed, lack information cases. cases output line list incorrectly attributed probable suspected infected. say, individuals line list, whatever case type, infected outbreak.","code":"linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death ) head(linelist) #>   id            case_name case_type gender age onset_date hospitalisation_date #> 1  1       Asad el-Salehi confirmed      m  63 2023-01-01           2023-01-05 #> 2  2       Courtney Adams suspected      f  45 2023-01-02           2023-01-03 #> 3  3        Knoa Springer  probable      m  22 2023-01-02                 <NA> #> 4  4 Angelo Medina Gamboa  probable      m  56 2023-01-02                 <NA> #> 5  5       Alyssa Morales confirmed      f  50 2023-01-02                 <NA> #> 6  6    Lorenzo Mccloskey suspected      m  31 2023-01-02                 <NA> #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2022-12-25        2023-01-03 #> 3         2022-12-30        2023-01-02 #> 4         2023-01-02        2023-01-05 #> 5         2022-12-30        2023-01-03 #> 6         2023-01-07        2023-01-08 linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   case_type_probs = c(suspected = 0.05, probable = 0.05, confirmed = 0.9) ) head(linelist) #>   id          case_name case_type gender age onset_date hospitalisation_date #> 1  1         Ngan Xiong confirmed      f  61 2023-01-01                 <NA> #> 2  2 Bandar el-Hosseini confirmed      m  38 2023-01-04                 <NA> #> 3  3    Michael Shimizu confirmed      m  45 2023-01-01                 <NA> #> 4  4   Numair al-Ghazal confirmed      m  34 2023-01-05           2023-01-07 #> 5  5   Jasmine Guerette confirmed      f  81 2023-01-02                 <NA> #> 6  6 Fernando Gutierrez confirmed      m  64 2023-01-03                 <NA> #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2022-12-31        2023-01-03 #> 3         2022-12-30        2023-01-03 #> 4         2022-12-28        2023-01-02 #> 5         2023-01-05        2023-01-05 #> 6         2023-01-03        2023-01-05"},{"path":"/articles/simulist.html","id":"conditioning-simulation-on-outbreak-size","dir":"Articles","previous_headings":"","what":"Conditioning simulation on outbreak size","title":"Getting Started with {simulist}","text":"reproduction number strong influence size outbreak. However, {simulist} package generates line list data using stochastic algorithm, even \\(R < 1\\) can produce substantial outbreak chance, \\(R >> 1\\) sometimes produce vast epidemic one simulation (.e. one replicate) due stochasticity. requiring minimum outbreak size can specify min_chain_size argument sim_linelist(). default set 10. means simulation return line list conditioning met. words, simulation resimulate branching process model outbreak infects least 10 people. requiring line list represents large outbreak, COVID-19 outbreak, setting min_chain_size larger number guarantees line list least size. simulate line list requiring least 250 cases. amount time simulation takes can determined reproduction number (R) minimum outbreak size (min_chain_size). min_outbreak_size large, example hundreds thousands cases, reproduction number one, take many branching process simulations finding one produces sufficiently large epidemic.","code":"linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   min_chain_size = 250 ) head(linelist) #>   id        case_name case_type gender age onset_date hospitalisation_date #> 1  1   Breaja Mathews  probable      f  80 2023-01-01                 <NA> #> 2  2   Dominick Scott  probable      m  57 2023-01-01                 <NA> #> 3  3     Marilu Watts confirmed      f   9 2023-01-01                 <NA> #> 4  4   Patricia Matta suspected      f  19 2023-01-01                 <NA> #> 5  5     Dayon Person confirmed      m  10 2023-01-01                 <NA> #> 6  6 Naaji al-Zakaria  probable      m  18 2023-01-01                 <NA> #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2022-12-30        2023-01-02 #> 3         2022-12-30        2023-01-04 #> 4         2022-12-31        2023-01-03 #> 5         2023-01-01        2023-01-04 #> 6         2022-12-30        2023-01-04"},{"path":"/articles/simulist.html","id":"anonymous-line-list","dir":"Articles","previous_headings":"","what":"Anonymous line list","title":"Getting Started with {simulist}","text":"default sim_linelist() provides name individual line list. anonymised line list required add_names argument sim_linelist() can set FALSE. names used line list produced random {randomNames} R package. Therefore, even add_names = TRUE personal data real individuals produced shared.","code":"linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   add_names = FALSE ) head(linelist) #>   id case_type gender age onset_date hospitalisation_date date_first_contact #> 1  1  probable      f  12 2023-01-01                 <NA>               <NA> #> 2  2 confirmed      f  84 2023-01-02                 <NA>         2023-01-01 #> 3  3  probable      f  84 2023-01-03                 <NA>         2023-01-05 #> 4  4  probable      m   9 2023-01-03                 <NA>         2023-01-01 #> 5  5 confirmed      f  29 2023-01-05           2023-01-08         2023-01-02 #> 6  6 confirmed      m  21 2023-01-06                 <NA>         2023-01-07 #>   date_last_contact #> 1              <NA> #> 2        2023-01-05 #> 3        2023-01-09 #> 4        2023-01-04 #> 5        2023-01-06 #> 6        2023-01-11"},{"path":"/articles/simulist.html","id":"population-age","dir":"Articles","previous_headings":"","what":"Population age","title":"Getting Started with {simulist}","text":"default sim_linelist() simulates individuals ages assuming uniform distribution 1 90. change age range, vector two numbers can supplied age_range argument. simulated outbreak population population ranging 5 75. currently possible simulate non-uniform population age structure {simulist}.","code":"linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   age_range = c(5, 75) ) head(linelist) #>   id        case_name case_type gender age onset_date hospitalisation_date #> 1  1      Joao Miller confirmed      m  60 2023-01-01                 <NA> #> 2  2  Alaura Thompson confirmed      f  10 2023-01-01                 <NA> #> 3  3  Austyn Nostrant  probable      f  53 2023-01-01           2023-01-05 #> 4  4   Sarah Banaszak confirmed      f  35 2023-01-02                 <NA> #> 5  5 Katherine Zaelit  probable      f  73 2023-01-02           2023-01-17 #> 6  6    Karen Mandakh confirmed      f  41 2023-01-01                 <NA> #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2022-12-30        2023-01-03 #> 3         2023-01-03        2023-01-04 #> 4         2023-01-03        2023-01-04 #> 5         2022-12-31        2023-01-03 #> 6         2023-01-01        2023-01-03"},{"path":"/articles/simulist.html","id":"age-stratified-hospitalisation-and-death-rates","dir":"Articles","previous_headings":"","what":"Age-stratified hospitalisation and death rates","title":"Getting Started with {simulist}","text":"overview line list can simulated age-stratified (age-dependent) hospitalisation death rates see vignette dedicated topic.","code":""},{"path":"/articles/simulist.html","id":"simulate-contacts-table","dir":"Articles","previous_headings":"","what":"Simulate contacts table","title":"Getting Started with {simulist}","text":"simulate contacts table, sim_contacts() function can used. requires contacts distribution (.e. distribution describing variability number contacts different individuals within population).","code":"contact_distribution <- epiparameter::epidist(   disease = \"COVID-19\",   epi_dist = \"contact_distribution\",   prob_distribution = \"pois\",   prob_distribution_params = c(l = 5) ) #> Citation cannot be created as author, year, journal or title is missing  contacts <- sim_contacts(   R = 1.1,   serial_interval = serial_interval,   contact_distribution = contact_distribution ) head(contacts) #>            part_name     contact_name cnt_age cnt_gender date_first_contact #> 1 Jhonatan Archuleta     Aaron Garcia      57          m         2023-01-01 #> 2 Jhonatan Archuleta   Samantha Adams      82          f         2022-12-30 #> 3 Jhonatan Archuleta         Toby Kee      51          m         2023-01-02 #> 4 Jhonatan Archuleta     Stephen Boyd      44          m         2023-01-02 #> 5 Jhonatan Archuleta Kaitlin Hedgcoxe      76          f         2022-12-31 #> 6 Jhonatan Archuleta     Arianna Lyon       4          f         2022-12-29 #>   date_last_contact was_case         status #> 1        2023-01-02        Y           case #> 2        2023-01-02        Y           case #> 3        2023-01-03        N under_followup #> 4        2023-01-06        N under_followup #> 5        2023-01-06        N        unknown #> 6        2023-01-05        N under_followup"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joshua W. Lambert. Author, maintainer, copyright holder. Carmen Tamayo. Author. Hugo Gruson. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lambert J, Tamayo C (2023). simulist: Tools Simulated Line list Data. https://github.com/epiverse-trace/simulist, https://epiverse-trace.github.io/simulist/.","code":"@Manual{,   title = {simulist: Tools to Simulated Line list Data},   author = {Joshua W. Lambert and Carmen Tamayo},   year = {2023},   note = {https://github.com/epiverse-trace/simulist, https://epiverse-trace.github.io/simulist/}, }"},{"path":"/index.html","id":"simulist-simulate-line-list-data-","dir":"","previous_headings":"","what":"Tools to Simulated Line list Data","title":"Tools to Simulated Line list Data","text":"simulist R package simulate infectious disease outbreak data, including line lists contacts. simulist developed Centre Mathematical Modelling Infectious Diseases London School Hygiene Tropical Medicine part Epiverse-TRACE.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools to Simulated Line list Data","text":"can install development version simulist GitHub :","code":"# check whether {pak} is installed if(!require(\"pak\")) install.packages(\"pak\") pak::pak(\"epiverse-trace/simulist\")"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Tools to Simulated Line list Data","text":"line list simulation requires serial interval, onset--hospitalisation delay, onset--death delay. can load load library epidemiological parameters epiparameter R package, available, serial interval COVID-19 can create . simulate line list COVID-19 assumed reproduction number (R) 1.1 use sim_linelist() function. example, line list simulated using default values (see ?sim_linelist). default hospitalisation rate 0.2 (20% individual infected become hospitalised) start date outbreak 1st January 2023. modify either make realistic can specify . simulate table contacts can reuse serial interval example , additionally need contact distribution. distribution represents variability number contacts person population .","code":"library(simulist) library(epiparameter) # create COVID-19 serial interval serial_interval <- epiparameter::epidist(   disease = \"COVID-19\",   epi_dist = \"serial interval\",   prob_distribution = \"gamma\",   prob_distribution_params = c(shape = 1, scale = 1) ) #> Citation cannot be created as author, year, journal or title is missing  # get onset to hospital admission from {epiparameter} database onset_to_hosp <- epiparameter::epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset to hospitalisation\",   single_epidist = TRUE ) #> Using Linton NM, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov AR, Jung S, #> Yuan B, Kinoshita R, Nishiura H (2020). \"Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.\" _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the short citation use the 'get_citation' function  # get onset to death from {epiparameter} database onset_to_death <- epiparameter::epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset to death\",   single_epidist = TRUE ) #> Using Linton NM, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov AR, Jung S, #> Yuan B, Kinoshita R, Nishiura H (2020). \"Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.\" _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the short citation use the 'get_citation' function linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death ) head(linelist) #>   id            case_name case_type gender age onset_date hospitalisation_date #> 1  1        Qais al-Wahab confirmed      m   1 2023-01-01                 <NA> #> 2  2    Hasana al-Baddour  probable      f  44 2023-01-01                 <NA> #> 3  3      Jasmine Masters  probable      f  34 2023-01-01                 <NA> #> 4  4 Joseph Fleischman Jr suspected      m  18 2023-01-01                 <NA> #> 5  5       Kirsten Nortey  probable      f  11 2023-01-03                 <NA> #> 6  6         Eulogio Lepe suspected      m   1 2023-01-01           2023-01-02 #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2023-01-03        2023-01-04 #> 3         2022-12-31        2023-01-03 #> 4         2023-01-04        2023-01-07 #> 5         2023-01-03        2023-01-03 #> 6         2023-01-01        2023-01-04 linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_rate = 0.01,   outbreak_start_date = as.Date(\"2019-12-01\") ) head(linelist) #>   id            case_name case_type gender age onset_date hospitalisation_date #> 1  1 Kyle-Michael Maltese  probable      m  48 2019-12-01                 <NA> #> 2  2           Lynn Tzeng confirmed      f  60 2019-12-01           2019-12-05 #> 3  3             Dylan Vo confirmed      m  87 2019-12-01                 <NA> #> 4  4        Colton Elfvin  probable      m  30 2019-12-03                 <NA> #> 5  5      Waleed Thompson suspected      m  25 2019-12-02                 <NA> #> 6  6         Michael Moss confirmed      m  46 2019-12-02                 <NA> #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2019-12-01        2019-12-03 #> 3         2019-11-27        2019-12-03 #> 4         2019-12-01        2019-12-04 #> 5         2019-12-01        2019-12-02 #> 6         2019-11-30        2019-12-03 contact_distribution <- epiparameter::epidist(   disease = \"COVID-19\",   epi_dist = \"contact_distribution\",   prob_distribution = \"pois\",   prob_distribution_params = c(l = 5) ) #> Citation cannot be created as author, year, journal or title is missing  contacts <- sim_contacts(   R = 1.1,   serial_interval = serial_interval,   contact_distribution = contact_distribution ) head(contacts) #>        part_name        contact_name cnt_age cnt_gender date_first_contact #> 1   Tina Kennedy      Amber Carrillo       4          f         2023-01-02 #> 2   Tina Kennedy    Alayna Weingardt      51          f         2023-01-03 #> 3   Tina Kennedy Elizabeth Slovonsky      59          f         2023-01-05 #> 4   Tina Kennedy   Nehemiah Franklin      59          m         2023-01-01 #> 5   Tina Kennedy        Kiet Bennett      70          m         2023-01-05 #> 6 Amber Carrillo         Kylie Enzer      27          f         2023-01-04 #>   date_last_contact was_case         status #> 1        2023-01-02        Y           case #> 2        2023-01-03        Y           case #> 3        2023-01-06        Y           case #> 4        2023-01-03        N        unknown #> 5        2023-01-06        N under_followup #> 6        2023-01-06        Y           case"},{"path":"/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"Tools to Simulated Line list Data","text":"report bug please open issue.","code":""},{"path":"/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Tools to Simulated Line list Data","text":"Contributions simulist welcomed. Please follow package contributing guide.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Tools to Simulated Line list Data","text":"Please note simulist project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/index.html","id":"citing-this-package","dir":"","previous_headings":"","what":"Citing this package","title":"Tools to Simulated Line list Data","text":"","code":"citation(\"simulist\") #> To cite package 'simulist' in publications use: #>  #>   Lambert J, Tamayo C (2023). _simulist: Tools to Simulated Line list #>   Data_. https://github.com/epiverse-trace/simulist, #>   https://epiverse-trace.github.io/simulist/. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {simulist: Tools to Simulated Line list Data}, #>     author = {Joshua W. Lambert and Carmen Tamayo}, #>     year = {2023}, #>     note = {https://github.com/epiverse-trace/simulist, #> https://epiverse-trace.github.io/simulist/}, #>   }"},{"path":"/reference/create_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of configuration settings for some details of sim_linelist() — create_config","title":"Create a list of configuration settings for some details of sim_linelist() — create_config","text":"Create list configuration settings details sim_linelist()","code":""},{"path":"/reference/create_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of configuration settings for some details of sim_linelist() — create_config","text":"","code":"create_config(...)"},{"path":"/reference/create_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of configuration settings for some details of sim_linelist() — create_config","text":"... dots Named elements replace default settings. names match exactly elements replaced.","code":""},{"path":"/reference/create_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of configuration settings for some details of sim_linelist() — create_config","text":"list settings sim_linelist()","code":""},{"path":"/reference/create_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a list of configuration settings for some details of sim_linelist() — create_config","text":"config argument sim_linelist() controls small details around time windows around infections (time first contact last contact infector), distribution Ct value confirmed cases. Accepted arguments defaults : last_contact_distribution = \"pois\" last_contact_distribution_params = c(lambda = 3) first_contact_distribution = \"pois\" first_contact_distribution_params = c(lambda = 3) ct_distribution = \"norm\" ct_distribution_params = c(mean = 25, sd = 2) parameters warrant arguments sim_linelist() rarely need changed default setting. Therefore worth increasing number sim_linelist() arguments accommodate config argument keeps function signature simpler readable.","code":""},{"path":"/reference/dot-add_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Add event date as column to infectious history <data.frame> — .add_date","title":"Add event date as column to infectious history <data.frame> — .add_date","text":"event date first contact, last contact .","code":""},{"path":"/reference/dot-add_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add event date as column to infectious history <data.frame> — .add_date","text":"","code":".add_date_first_contact(.data, distribution = c(\"pois\", \"geom\"), ...)  .add_date_last_contact(   .data,   outbreak_start_date,   distribution = c(\"pois\", \"geom\"),   ... )  .add_hospitalisation(.data, onset_to_hosp, hosp_rate)  .add_deaths(.data, onset_to_death, hosp_death_rate, non_hosp_death_rate)"},{"path":"/reference/dot-add_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add event date as column to infectious history <data.frame> — .add_date","text":".data <data.frame> containing infectious history branching process simulation distribution character name distribution, following base R convention distribution naming (e.g. Poisson pois). ... dots Extra arguments passed distribution function given distribution argument. outbreak_start_date date start outbreak. onset_to_hosp <epidist> object onset hospitalisation delay distribution. hosp_rate Either single numeric hospitalisation rate everyone population, <data.frame> age specific hospitalisation rates. Default 20% hospitalisation (0.2) entire population. See details examples information. onset_to_death <epidist> object onset death delay distribution. hosp_death_rate Either single numeric death rate hospitalised individuals across population, <data.frame> age specific hospitalised death rates. Default 50% death rate hospitals (0.5) entire population. See details examples information. non_hosp_death_rate Either single numeric death rate outside hospitals across population, <data.frame> age specific death rates outside hospitals. Default 5% death rate outside hospitals  (0.05) entire population. See details examples information.","code":""},{"path":"/reference/dot-add_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add event date as column to infectious history <data.frame> — .add_date","text":"<data.frame> one column input .data. Unless column heading already present data overwritten.","code":""},{"path":"/reference/dot-add_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Add line list information as column to infectious history <data.frame> — .add_info","title":"Add line list information as column to infectious history <data.frame> — .add_info","text":"Add line list information column infectious history <data.frame>","code":""},{"path":"/reference/dot-add_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add line list information as column to infectious history <data.frame> — .add_info","text":"","code":".add_names(.data)  .add_ct(.data, distribution = c(\"norm\", \"lnorm\"), ...)"},{"path":"/reference/dot-add_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add line list information as column to infectious history <data.frame> — .add_info","text":".data <data.frame> containing infectious history branching process simulation distribution character name distribution, following base R convention distribution naming (e.g. Poisson pois). ... dots Extra arguments passed distribution function given distribution argument. onset_to_hosp <epidist> object onset hospitalisation delay distribution. onset_to_death <epidist> object onset death delay distribution.","code":""},{"path":"/reference/dot-add_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add line list information as column to infectious history <data.frame> — .add_info","text":"<data.frame> one column input .data. Unless column heading already present data overwritten.","code":""},{"path":"/reference/dot-check_rate_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if <data.frame> defining age-stratified hospitalisation or death rate\nis correct — .check_rate_df","title":"Check if <data.frame> defining age-stratified hospitalisation or death rate\nis correct — .check_rate_df","text":"Check <data.frame> defining age-stratified hospitalisation death rate correct","code":""},{"path":"/reference/dot-check_rate_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if <data.frame> defining age-stratified hospitalisation or death rate\nis correct — .check_rate_df","text":"","code":".check_rate_df(x, age_range)"},{"path":"/reference/dot-check_rate_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if <data.frame> defining age-stratified hospitalisation or death rate\nis correct — .check_rate_df","text":"x <data.frame>.","code":""},{"path":"/reference/dot-check_rate_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if <data.frame> defining age-stratified hospitalisation or death rate\nis correct — .check_rate_df","text":"<data.frame>, also called error side-effects input invalid.","code":""},{"path":"/reference/dot-create_contacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create contacts table — .create_contacts","title":"Create contacts table — .create_contacts","text":"Create contacts table","code":""},{"path":"/reference/dot-create_contacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create contacts table — .create_contacts","text":"","code":".create_contacts(   .data,   outbreak_start_date,   contact_distribution,   age_range,   contact_tracing_status_probs,   config )"},{"path":"/reference/dot-create_contacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create contacts table — .create_contacts","text":".data <data.frame> containing infectious history branching process simulation outbreak_start_date date start outbreak. contact_distribution <epidist> object contact distribution. similar offspring distribution, describes heterogeneity contact patterns, including contacts go infected infected. age_range numeric vector two elements. first lower bound age range, second upper bound age range (inclusive, .e. [lower, upper]). contact_tracing_status_probs named numeric vector probability contact tracing status. names vector must \"under_followup\", \"lost_to_followup\", \"unknown\". Values contact tracing status must sum one. config list settings adjust randomly sampled delays Ct values (add_ct = TRUE). See create_config() information.","code":""},{"path":"/reference/dot-create_contacts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create contacts table — .create_contacts","text":"contacts <data.frame>","code":""},{"path":"/reference/dot-create_linelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a mock line list without simulating to test internal functions that\nrequire line list data — .create_linelist","title":"Create a mock line list without simulating to test internal functions that\nrequire line list data — .create_linelist","text":"Create mock line list without simulating test internal functions require line list data","code":""},{"path":"/reference/dot-create_linelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a mock line list without simulating to test internal functions that\nrequire line list data — .create_linelist","text":"","code":".create_linelist(scenario)"},{"path":"/reference/dot-create_linelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a mock line list without simulating to test internal functions that\nrequire line list data — .create_linelist","text":"scenario character string state line list. Options : \"pre_date_last_contact\" \"pre_date_first_contact\" \"pre_hospitalisation\" \"pre_deaths\" \"pre_names\" \"pre_ct\"","code":""},{"path":"/reference/dot-create_linelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a mock line list without simulating to test internal functions that\nrequire line list data — .create_linelist","text":"<data.frame>.","code":""},{"path":"/reference/dot-create_linelist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a mock line list without simulating to test internal functions that\nrequire line list data — .create_linelist","text":"scenarios created taking snapshot (.e copy)  line list <data.frame> stage simulation (sim_linelist()) setting seed 1 (set.seed(1)). scenarios function call, example, \"pre_date_last_contact\" state line list prior calling .add_date_last_contact(), \"pre_names\" state line list prior calling .add_names().","code":""},{"path":"/reference/dot-create_linelist.html","id":"script-to-reproduce-data-","dir":"Reference","previous_headings":"","what":"Script to reproduce data:","title":"Create a mock line list without simulating to test internal functions that\nrequire line list data — .create_linelist","text":"set.seed(1) linelist <- sim_linelist( R = 1.1, serial_interval = serial_interval, onset_to_hosp = onset_to_hosp, onset_to_death = onset_to_death, hosp_rate = 0.5, add_ct = TRUE )","code":""},{"path":"/reference/sim_contacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate contacts for an infectious disease outbreak — sim_contacts","title":"Simulate contacts for an infectious disease outbreak — sim_contacts","text":"Simulate contacts infectious disease outbreak","code":""},{"path":"/reference/sim_contacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate contacts for an infectious disease outbreak — sim_contacts","text":"","code":"sim_contacts(   R,   serial_interval,   contact_distribution,   outbreak_start_date = as.Date(\"2023-01-01\"),   min_chain_size = 10,   age_range = c(1, 90),   contact_tracing_status_probs = c(under_followup = 0.7, lost_to_followup = 0.2, unknown     = 0.1),   config = create_config(),   ... )"},{"path":"/reference/sim_contacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate contacts for an infectious disease outbreak — sim_contacts","text":"R single numeric reproduction number. serial_interval <epidist> object serial interval. contact_distribution <epidist> object contact distribution. similar offspring distribution, describes heterogeneity contact patterns, including contacts go infected infected. outbreak_start_date date start outbreak. min_chain_size single numeric defining minimum chain size simulated outbreak. Default 10. can increased function simulate larger outbreak. age_range numeric vector two elements. first lower bound age range, second upper bound age range (inclusive, .e. [lower, upper]). contact_tracing_status_probs named numeric vector probability contact tracing status. names vector must \"under_followup\", \"lost_to_followup\", \"unknown\". Values contact tracing status must sum one. config list settings adjust randomly sampled delays Ct values (add_ct = TRUE). See create_config() information. ... dots Extra arguments passed functions. Currently used return warning extra arguments supplied.","code":""},{"path":"/reference/sim_contacts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate contacts for an infectious disease outbreak — sim_contacts","text":"contacts <data.frame>","code":""},{"path":"/reference/sim_contacts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate contacts for an infectious disease outbreak — sim_contacts","text":"Joshua W. Lambert, Carmen Tamayo","code":""},{"path":"/reference/sim_contacts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate contacts for an infectious disease outbreak — sim_contacts","text":"","code":"# load data required to simulate contacts serial_interval <- epiparameter::epidist(   disease = \"COVID-19\",   epi_dist = \"serial interval\",   prob_distribution = \"gamma\",   prob_distribution_params = c(shape = 1, scale = 1) ) #> Citation cannot be created as author, year, journal or title is missing  contact_distribution <- epiparameter::epidist(   disease = \"COVID-19\",   epi_dist = \"contact_distribution\",   prob_distribution = \"pois\",   prob_distribution_params = c(l = 5) ) #> Citation cannot be created as author, year, journal or title is missing  contacts <- sim_contacts(   R = 1.1,   serial_interval = serial_interval,   contact_distribution = contact_distribution )"},{"path":"/reference/sim_linelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a line list — sim_linelist","title":"Simulate a line list — sim_linelist","text":"line list simulated using branching process parameterised previously published epidemiological parameters.","code":""},{"path":"/reference/sim_linelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a line list — sim_linelist","text":"","code":"sim_linelist(   R,   serial_interval,   onset_to_hosp,   onset_to_death,   hosp_rate = 0.2,   hosp_death_rate = 0.5,   non_hosp_death_rate = 0.05,   outbreak_start_date = as.Date(\"2023-01-01\"),   add_names = TRUE,   add_ct = FALSE,   min_chain_size = 10,   age_range = c(1, 90),   case_type_probs = c(suspected = 0.2, probable = 0.3, confirmed = 0.5),   config = create_config(),   ... )"},{"path":"/reference/sim_linelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a line list — sim_linelist","text":"R single numeric reproduction number. serial_interval <epidist> object serial interval. onset_to_hosp <epidist> object onset hospitalisation delay distribution. onset_to_death <epidist> object onset death delay distribution. hosp_rate Either single numeric hospitalisation rate everyone population, <data.frame> age specific hospitalisation rates. Default 20% hospitalisation (0.2) entire population. See details examples information. hosp_death_rate Either single numeric death rate hospitalised individuals across population, <data.frame> age specific hospitalised death rates. Default 50% death rate hospitals (0.5) entire population. See details examples information. non_hosp_death_rate Either single numeric death rate outside hospitals across population, <data.frame> age specific death rates outside hospitals. Default 5% death rate outside hospitals  (0.05) entire population. See details examples information. outbreak_start_date date start outbreak. add_names logical boolean whether add names row line list. Default TRUE. add_ct logical boolean whether add Ct values row line list. Default FALSE. min_chain_size single numeric defining minimum chain size simulated outbreak. Default 10. can increased function simulate larger outbreak. age_range numeric vector two elements. first lower bound age range, second upper bound age range (inclusive, .e. [lower, upper]). case_type_probs named numeric vector probability case type. names vector must \"suspected\", \"probable\", \"confirmed\". Values case type must sum one. config list settings adjust randomly sampled delays Ct values (add_ct = TRUE). See create_config() information. ... dots Extra arguments passed functions. Currently used return warning extra arguments supplied.","code":""},{"path":"/reference/sim_linelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a line list — sim_linelist","text":"line list <data.frame>","code":""},{"path":"/reference/sim_linelist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate a line list — sim_linelist","text":"age-stratified hospitalised death rates <data.frame> need passed hosp_rate /hosp_death_rate arguments. <data.frame> three columns: min_age: column one numeric per cell minimum age age group (inclusive). max_age: column one numeric per cell maximum age age group (exclusive). rate: column one numeric per cell proportion (probability) hospitalisation age group. 0 1.","code":""},{"path":"/reference/sim_linelist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate a line list — sim_linelist","text":"Joshua W. Lambert, Carmen Tamayo","code":""},{"path":"/reference/sim_linelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a line list — sim_linelist","text":"","code":"# load data required to simulate line list serial_interval <- epiparameter::epidist(   disease = \"COVID-19\",   epi_dist = \"serial interval\",   prob_distribution = \"gamma\",   prob_distribution_params = c(shape = 1, scale = 1) ) #> Citation cannot be created as author, year, journal or title is missing  # get onset to hospital admission from {epiparameter} database onset_to_hosp <- epiparameter::epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset to hospitalisation\",   single_epidist = TRUE ) #> Using Linton NM, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov AR, Jung S, #> Yuan B, Kinoshita R, Nishiura H (2020). “Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.” _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the short citation use the 'get_citation' function  # get onset to death from {epiparameter} database onset_to_death <- epiparameter::epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset to death\",   single_epidist = TRUE ) #> Using Linton NM, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov AR, Jung S, #> Yuan B, Kinoshita R, Nishiura H (2020). “Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.” _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the short citation use the 'get_citation' function # example with single hospitalisation rate for entire population linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_rate = 0.5 )  # example with age-stratified hospitalisation rate # 20% for over 80s # 10% for under 5s # 5% for the rest age_dep_hosp_rate <- data.frame(   min_age = c(1, 5, 80),   max_age = c(5, 80, 90),   rate = c(0.1, 0.05, 0.2) ) linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_rate = age_dep_hosp_rate )"}]
