[{"path":"https://epiverse-trace.github.io/simulist/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 simulist authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epiverse-trace.github.io/simulist/articles/age-strat-risks.html","id":"population-wide-risks","dir":"Articles","previous_headings":"","what":"Population-wide risks","title":"Age-stratified hospitalisation and death risks","text":"Simulate line list population-wide default risks: hospitalisation risk: 0.2 death risk hospitals 0.5 death risk outside hospitals 0.05 can run another simulation change hospitalisation death risks, inside outside hospital, still applied entire population. scenario probability hospitalised infected higher, mortality risk hospitalised non-hospitalised groups lower.","code":"linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death )  # first 6 rows of linelist head(linelist) #>   id       case_name case_type sex age date_onset date_admission   outcome #> 1  1 Wajdi al-Demian  probable   m  35 2023-01-01           <NA> recovered #> 2  2   Raaid el-Diab confirmed   m  43 2023-01-01     2023-01-07 recovered #> 3  3  Nickolas Nault suspected   m   1 2023-01-01           <NA> recovered #> 4  5     Hee Kennedy confirmed   m  78 2023-01-01     2023-01-03      died #> 5  6     Hope Arshad suspected   f  22 2023-01-01     2023-01-28      died #> 6  8  Shanta Holiday  probable   f  28 2023-01-01           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2022-12-30        2023-01-05     23.2 #> 3         <NA>         2022-12-30        2023-01-02       NA #> 4   2023-01-21         2022-12-29        2023-01-02     25.2 #> 5   2023-01-10         2023-01-01        2023-01-03       NA #> 6         <NA>         2023-01-03        2023-01-04       NA linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_risk = 0.4,   hosp_death_risk = 0.2,   non_hosp_death_risk = 0.01 )  head(linelist) #>   id          case_name case_type sex age date_onset date_admission   outcome #> 1  1      Robert Wanzek suspected   m  80 2023-01-01     2023-01-08 recovered #> 2  2           Kacy Kim  probable   f  85 2023-01-01           <NA> recovered #> 3  4    Jade Goldsberry  probable   f  76 2023-01-01           <NA> recovered #> 4  8    Brittany Brooks confirmed   f  12 2023-01-01     2023-01-01      died #> 5 11 Fat'hiyaa al-Zafar suspected   f  50 2023-01-01           <NA> recovered #> 6 14   Desirae Carranza  probable   f  54 2023-01-01     2023-01-03 recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2023-01-04        2023-01-06       NA #> 3         <NA>         2022-12-30        2023-01-03       NA #> 4   2023-01-18         2023-01-05        2023-01-05     26.4 #> 5         <NA>         2023-01-03        2023-01-05       NA #> 6         <NA>         2022-12-31        2023-01-02       NA"},{"path":"https://epiverse-trace.github.io/simulist/articles/age-strat-risks.html","id":"age-stratified-hospitalisation-and-death-risks","dir":"Articles","previous_headings":"","what":"Age-stratified hospitalisation and death risks","title":"Age-stratified hospitalisation and death risks","text":"define age-stratified risks, must create table (<data.frame>) contains lower limits age groups respective risks. example hospitalisation risk : 0.2 (20%) aged 80 years older 0.1 (10%) younger 5 years 0.05 (5%) remaining age group oldest age group stops upper age range given population_age argument. default upper age range 90, example oldest age bracket 80-90 (inclusive). minimum age age group inclusive, maximum age age group exclusive, except oldest age group inclusive minimum maximum age. example first age group first element vector, minimum age 1, maximum age four (next age group starts five), hospitalisation risk group 0.1. age group forms row table. minimum age youngest age group must match age range specified population_age argument sim_linelist(), largest age limit risk <data.frame> must older upper age range. conditions met function error. age-stratified risk table match default (c(1, 90)), population_age argument need set match. example, default age range population 1 90 (inclusive). example , lowest age group started 1 oldest age group stopped 90. matches default population_age = c(1, 90). However, see lower age limit exceeds age range function run. order make code run age-stratified hospitalisation risk given, population_age can adjusted. oldest age bracket now 95 100 ([95, 100]). Exactly method age-stratified risks applies death risks. First create <data.frame> age groups respective, case, death risks, supply either hosp_death_risk non_hosp_death_risk arguments, define death risks outside hospital, respectively, . couple examples: now age-stratified tables supplied one risk. However, can supplied simulation. case hospitalisation risk, death risks inside outside hospital, specified.","code":"age_dep_hosp_risk <- data.frame(   age_limit = c(1, 5, 80),   risk = c(0.1, 0.05, 0.2) ) age_dep_hosp_risk #>   age_limit risk #> 1         1 0.10 #> 2         5 0.05 #> 3        80 0.20 linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_risk = age_dep_hosp_risk )  head(linelist) #>   id        case_name case_type sex age date_onset date_admission   outcome #> 1  1     Ignacio Albo  probable   m  88 2023-01-01           <NA> recovered #> 2  2    Desire Aguayo confirmed   f  90 2023-01-01           <NA> recovered #> 3  4 Miska al-Ramadan confirmed   f  30 2023-01-01           <NA> recovered #> 4  5   Frankie Garcia confirmed   f  37 2023-01-01           <NA> recovered #> 5  6   Tahma Mitchell  probable   m  88 2023-01-01           <NA> recovered #> 6  7      Tan Antonio  probable   m  56 2023-01-02           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2023-01-02        2023-01-04     23.5 #> 3         <NA>         2023-01-05        2023-01-07     22.9 #> 4         <NA>         2023-01-05        2023-01-06     24.9 #> 5         <NA>         2022-12-29        2023-01-03       NA #> 6         <NA>         2023-01-01        2023-01-05       NA age_dep_hosp_risk <- data.frame(   age_limit = c(1, 5, 95),   risk = c(0.1, 0.05, 0.2) ) age_dep_hosp_risk #>   age_limit risk #> 1         1 0.10 #> 2         5 0.05 #> 3        95 0.20  linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_risk = age_dep_hosp_risk ) #> Error in .check_risk_df(hosp_risk, age_range = age_range): Lower bound of oldest age group must be lower than highest age range age_dep_hosp_risk <- data.frame(   age_limit = c(1, 5, 95),   risk = c(0.1, 0.05, 0.2) )  linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_risk = age_dep_hosp_risk,   population_age = c(1, 100) )  head(linelist) #>   id         case_name case_type sex age date_onset date_admission   outcome #> 1  1     Devin Soloman  probable   m  80 2023-01-01           <NA> recovered #> 2  2    Hazm el-Vaziri confirmed   m  28 2023-01-01           <NA> recovered #> 3  3         Grace Vue  probable   f  83 2023-01-01           <NA> recovered #> 4  4 Shajee'a al-Sadek suspected   f  16 2023-01-01           <NA> recovered #> 5  5   Azzaam el-Yusuf confirmed   m  36 2023-01-01           <NA> recovered #> 6  7 Cordero Manheimer confirmed   m   5 2023-01-01           <NA>      died #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2022-12-29        2023-01-04     27.2 #> 3         <NA>         2023-01-03        2023-01-05       NA #> 4         <NA>         2022-12-31        2023-01-03       NA #> 5         <NA>         2022-12-30        2023-01-03     29.8 #> 6   2023-01-19         2023-01-03        2023-01-08     24.2 age_dep_hosp_death_risk <- data.frame(   age_limit = c(1, 5, 80),   risk = c(0.3, 0.1, 0.6) ) age_dep_hosp_death_risk #>   age_limit risk #> 1         1  0.3 #> 2         5  0.1 #> 3        80  0.6  linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_death_risk = age_dep_hosp_death_risk ) age_dep_non_hosp_death_risk <- data.frame(   age_limit = c(1, 5, 80),   risk = c(0.1, 0.05, 0.1) ) age_dep_non_hosp_death_risk #>   age_limit risk #> 1         1 0.10 #> 2         5 0.05 #> 3        80 0.10  linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   non_hosp_death_risk = age_dep_non_hosp_death_risk ) age_dep_hosp_risk <- data.frame(   age_limit = c(1, 5, 80),   risk = c(0.1, 0.05, 0.2) ) age_dep_hosp_death_risk <- data.frame(   age_limit = c(1, 5, 80),   risk = c(0.3, 0.1, 0.6) ) age_dep_non_hosp_death_risk <- data.frame(   age_limit = c(1, 5, 80),   risk = c(0.1, 0.05, 0.1) )  linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_risk = age_dep_hosp_risk,   hosp_death_risk = age_dep_hosp_death_risk,   non_hosp_death_risk = age_dep_non_hosp_death_risk )  head(linelist) #>   id        case_name case_type sex age date_onset date_admission   outcome #> 1  1   Afeef al-Saber suspected   m  54 2023-01-01           <NA> recovered #> 2  3  Duncan Kleinman suspected   m  39 2023-01-02     2023-01-03 recovered #> 3  4 Montica Gallegos  probable   f  37 2023-01-01           <NA> recovered #> 4  5        Son Ahuna suspected   m  25 2023-01-03           <NA> recovered #> 5  6  Alyssa Gonzalez confirmed   f  10 2023-01-02           <NA> recovered #> 6  7    Ashley Palomo confirmed   f  13 2023-01-02           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2022-12-27        2023-01-01       NA #> 3         <NA>         2022-12-31        2023-01-06       NA #> 4         <NA>         2023-01-02        2023-01-06       NA #> 5         <NA>         2023-01-02        2023-01-06     25.8 #> 6         <NA>         2023-01-02        2023-01-03     27.3"},{"path":"https://epiverse-trace.github.io/simulist/articles/age-struct-pop.html","id":"uniform-population-age","dir":"Articles","previous_headings":"","what":"Uniform population age","title":"Age structured population","text":"default sim_linelist() simulates individuals ages assuming uniform distribution 1 90. change age range, vector two numbers can supplied population_age argument. simulate outbreak population population ranging 5 75 (inclusive, [5,75]). Note: ages assumed unit years need integers (least “integerish” stored double). simulations vignette condition simulation minimum outbreak size 100 cases (outbreak_size, maximum outbreak size left 1e4) clearly visualise distribution ages. can plot age distribution individuals line list, binned 5 year categories. Age distribution individuals simulated line list sampled uniform distribution 5 75. population_age argument left unspecified, assumed default age range 1 90 (c(1, 90)).","code":"linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.45,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   population_age = c(5, 75),   outbreak_size = c(100, 1e4) ) head(linelist) #>   id           case_name case_type sex age date_onset date_admission   outcome #> 1  1 George Smith-Dawson confirmed   m  63 2023-01-01           <NA> recovered #> 2  2    Lataylha Ephraim confirmed   f  56 2023-01-01           <NA> recovered #> 3  3          Emma Smith confirmed   f   7 2023-01-01           <NA> recovered #> 4  5     Elizabeth Smith confirmed   f  35 2023-01-02     2023-01-06      died #> 5  6  Brandon Van Bemden  probable   m  60 2023-01-02           <NA> recovered #> 6  8   Riyaal el-Khalili confirmed   m  38 2023-01-01           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>     22.6 #> 2         <NA>         2023-01-02        2023-01-03     21.6 #> 3         <NA>         2023-01-04        2023-01-05     26.4 #> 4   2023-01-15         2022-12-30        2023-01-04     26.0 #> 5         <NA>         2023-01-01        2023-01-04       NA #> 6         <NA>         2023-01-05        2023-01-07     24.9 ggplot(linelist[, c(\"sex\", \"age\")]) +   geom_histogram(     mapping = aes(x = age),     fill = \"#10BED2\",     colour = \"black\",     binwidth = 5   ) +   scale_y_continuous(name = \"Number of Individuals\") +   scale_x_continuous(name = \"Age\", breaks = seq(0, 75, 5)) +   theme_bw()"},{"path":"https://epiverse-trace.github.io/simulist/articles/age-struct-pop.html","id":"structured-population-age","dir":"Articles","previous_headings":"","what":"Structured population age","title":"Age structured population","text":"simulate non-uniform age structure create table (<data.frame>) containing age range age bracket population proportion population made age group. example simulate population 30% population 1 19, 40% population 20 59, 30% 60 90. age groups inclusive age brackets overlap. individuals population younger 1 older 90. can plot age distribution see age structure individuals line list. Given relative uniformity age structure specified greatly different uniform age structure plotted , higher upper age limit. data binned 5 year categories facetted sex. Age distribution line list cases facetted sex age groups specified <data.frame> must non-overlapping contiguous minimum age youngest age group maximum age oldest age group. order words, missing age groups (e.g. 20-40 year olds) without specified proportion. case function error informative error message. example much younger population instead specify: 0.4 (40%) 1-9 years old 0.3 (30%) 10-29 years old 0.2 (20%) 30-59 years old 0.1 (10%) 60-75 years old common useful method plotting age data form age pyramids. partition data sex plot age distribution. Age pyramid simulated line list age structured population. used {ggplot2} package construct age pyramid, however {apyramid} R package R4Epi can assist making plots; can Applied Epidemiology Handbook chapter age pyramids. blog post “Population Pyramid Plots ggplot2” also contains useful tips constructing pyramid plots. shown two age structured examples, number age groups flexible. Therefore coarse population structure two three age groups can specified, precise census demographic data available, several age groups can specified.","code":"age_struct <- data.frame(   age_range = c(\"1-19\", \"20-59\", \"60-90\"),   proportion = c(0.3, 0.4, 0.3),   stringsAsFactors = FALSE ) age_struct #>   age_range proportion #> 1      1-19        0.3 #> 2     20-59        0.4 #> 3     60-90        0.3 linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.45,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   population_age = age_struct,   outbreak_size = c(100, 1e4) )  head(linelist) #>   id                  case_name case_type sex age date_onset date_admission #> 1  1 Cassandra Portillo-Sanchez  probable   f  82 2023-01-01           <NA> #> 2  3              Sean Mcdaniel confirmed   m  41 2023-01-01           <NA> #> 3  4              Lonnie Forbes suspected   m  17 2023-01-01           <NA> #> 4  6               Matthew Tang confirmed   m  59 2023-01-01           <NA> #> 5  7            Jonathan Eggert confirmed   m  31 2023-01-01           <NA> #> 6  8              James Briseno suspected   m  49 2023-01-01           <NA> #>     outcome date_outcome date_first_contact date_last_contact ct_value #> 1 recovered         <NA>               <NA>              <NA>       NA #> 2 recovered         <NA>         2023-01-01        2023-01-05     20.7 #> 3 recovered         <NA>         2022-12-31        2023-01-04       NA #> 4 recovered         <NA>         2023-01-01        2023-01-02     21.6 #> 5 recovered         <NA>         2023-01-05        2023-01-05     25.9 #> 6 recovered         <NA>         2023-01-01        2023-01-03       NA ggplot(linelist[, c(\"sex\", \"age\")]) +   geom_histogram(     mapping = aes(x = age),     fill = \"#10BED2\",     colour = \"black\",     binwidth = 5   ) +   scale_y_continuous(name = \"Number of Individuals\") +   scale_x_continuous(name = \"Age\", breaks = seq(0, 90, 5)) +   theme_bw() +   facet_wrap(vars(sex)) age_struct <- data.frame(   age_range = c(\"1-9\", \"10-29\", \"30-59\", \"60-75\"),   proportion = c(0.4, 0.3, 0.2, 0.1),   stringsAsFactors = FALSE ) age_struct #>   age_range proportion #> 1       1-9        0.4 #> 2     10-29        0.3 #> 3     30-59        0.2 #> 4     60-75        0.1 linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.45,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   population_age = age_struct,   outbreak_size = c(100, 1e4) )  head(linelist) #>   id         case_name case_type sex age date_onset date_admission   outcome #> 1  1 Saaliha el-Yousef confirmed   f   5 2023-01-01           <NA> recovered #> 2  2       Drew Tharpe suspected   m  43 2023-01-01     2023-01-19      died #> 3  4    Marquise Maunu confirmed   m  52 2023-01-01           <NA> recovered #> 4  5     Keenan Steele  probable   m   1 2023-01-01     2023-01-10 recovered #> 5  6     Julia Spencer  probable   f  12 2023-01-04           <NA> recovered #> 6  8 Hasana el-Mahfouz confirmed   f  19 2023-01-01           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>     25.9 #> 2   2023-01-19         2022-12-28        2023-01-02       NA #> 3         <NA>         2023-01-02        2023-01-04     27.6 #> 4         <NA>         2022-12-31        2023-01-06       NA #> 5         <NA>         2023-01-05        2023-01-06       NA #> 6         <NA>         2023-01-02        2023-01-05     22.6 linelist_m <- subset(linelist, subset = sex == \"m\") age_cats_m <- as.data.frame(table(floor(linelist_m$age / 5) * 5)) colnames(age_cats_m) <- c(\"AgeCat\", \"Population\") age_cats_m <- cbind(age_cats_m, sex = \"m\") linelist_f <- subset(linelist, subset = sex == \"f\") age_cats_f <- as.data.frame(table(floor(linelist_f$age / 5) * 5)) colnames(age_cats_f) <- c(\"AgeCat\", \"Population\") age_cats_f$Population <- -age_cats_f$Population age_cats_f <- cbind(age_cats_f, sex = \"f\") age_cats <- rbind(age_cats_m, age_cats_f)  breaks <- pretty(range(age_cats$Population), n = 10) labels <- abs(breaks)  ggplot(age_cats) +   geom_col(mapping = aes(x = Population, y = factor(AgeCat), fill = sex)) +   scale_y_discrete(name = \"Lower bound of Age Category\") +   scale_x_continuous(name = \"Population\", breaks = breaks, labels = labels) +   scale_fill_manual(values = c(\"#F04A4C\", \"#106BA0\")) +   theme_bw()"},{"path":"https://epiverse-trace.github.io/simulist/articles/design-principles.html","id":"scope","dir":"Articles","previous_headings":"","what":"Scope","title":"Design Principles for {simulist}","text":"{simulist} package aims simulate data infectious disease outbreaks, primarily line list data, also contacts data. output types associated exported function: sim_linelist() sim_contacts(). also function simulate output data types, sim_outbreak(). latter function useful interoperability {epicontacts} R package (see visualisation vignette), provides linked line list contacts datasets, common outbreaks, MERS dataset within {outbreaks} R package.","code":""},{"path":"https://epiverse-trace.github.io/simulist/articles/design-principles.html","id":"output","dir":"Articles","previous_headings":"","what":"Output","title":"Design Principles for {simulist}","text":"simulation functions either return <data.frame> list <data.frame>s. consistency across functions well-known data structure makes easy understand users.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/simulist/articles/design-principles.html","id":"design-decisions","dir":"Articles","previous_headings":"","what":"Design decisions","title":"Design Principles for {simulist}","text":"using age-stratified risks hospitalisation deaths (see Age-stratified hospitalisation death risks vignette details) interaction function arguments. <data.frame> defines age-stratification hosp_risk, hosp_death_risk non_hosp_death_risk arguments gives lower bound age groups. upper bound age groups derived next lower bound, upper bound oldest age group defined upper age given population_age argument. interaction arguments ideal, can difficult understand users (outlined Tidy Design book), however, interaction change interpretation argument convoluted. design decision taken changed structure <data.frame> accepted input *_risk arguments two columns lower upper age limit, single column lower age bounds. change made pull request #14 follows design {socialmixr} defining age bounds. newer structure judged preferred prevents input errors user age bounds overlapping non-contiguous (.e. missing age groups). column names contact relationships (edges network) called . Names contacts table match {epicontacts} <epicontacts> objects. column names two contacts provided epicontacts::make_epicontacts() arguments silently renamed resulting <epicontacts> object. making column names output sim_contacts() sim_outbreak() prevents confusion used {epicontacts}. naming also preferred usefully descriptive. Exported functions simulate data use naming convention sim_*() (* placeholder). Internal functions simulate dot (.) prefix (e.g. .sim_internal()). Functions create fixed data structures (.e. data factory functions) naming convention (create_*() .create_*()). use config argument simulation function reduce number arguments exported functions provide simple user-interface possible. choice gets argument function body confined config list based preconceived frequency use, importance technical detail. say, settings unlikely changed user changed require advanced understanding simulation model placed within config, given default values create_config(). Input checking config list takes place within call stack exported sim_*() functions certain elements config list used, create_config() function. Therefore, possible create invalid config list create_config(). example throwing error internal function simulation config$network \"adjusted\" \"unadjusted\", NULL error .sim_network_bp(). column names line list data produced sim_linelist() sim_outbreak() matches tag names used {linelist} R package (Epiverse-TRACE R package). continuity design functional reason. line list data {simulist} functions tagged sensu {linelist} tagging. inconsistent use hospitalisation admission; simulated line list date_admission, internally package uses hospitalisation (e.g. .add_hospitalisation()). think hospitalisation descriptive date_admission used {linelist}. {simulist} implements branching process model (.sim_network_bp()) tracks contacts infectious individuals. simple random network model, future versions {simulist} make code modular order accept simulations models. remove burden {simulist} simulate range model types. sim_linelist(), sim_contacts() sim_outbreak() arguments change dimensions <data.frame> returned functions (case sim_outbreak() list two <data.frame>s). Instead, recommend modifying line list contact tracing data simulation, provide vignette guide users common data wrangling tasks wrangling-linelist.Rmd. including arguments can remove add columns output <data.frame>s reduces complexity functions; limiting simulation function arguments parameterise, change dimensionality , simulated data, package robust used pipelines automated approaches, data needs predictably formatted. Several parts {simulist} codebase use indices determining individual infected, allocation vectors, uses. R’s subsetting ([) can use logical vectors numeric vectors, {simulist} differentiated names *_idx variables holding numeric vector indices, *_lgl_idx logical vector indices. makes safer readable call functions like sum() () index vectors.","code":""},{"path":"https://epiverse-trace.github.io/simulist/articles/design-principles.html","id":"dependencies","dir":"Articles","previous_headings":"","what":"Dependencies","title":"Design Principles for {simulist}","text":"aim restrict number dependencies minimal required set ease maintenance. current hard dependencies : {stats} {checkmate} {epiparameter} {randomNames} {stats} distributed R language viewed lightweight dependency, already installed user’s machine R. {checkmate} input checking package widely used across Epiverse-TRACE packages. {epiparameter} used easily access epidemiological parameters package’s library, package currently unstable actively developed, however, using another package can inform development path {epiparameter}. {randomNames} provides utility function generating random names case contact data. functionality replicated {simulist}, however {randomNames} package maintained contains range name generation settings warrants use dependency. soft dependencies (minimum version requirements) : {incidence2} (>= 2.1.0) {epicontacts} (>= 1.1.3) {knitr} {ggplot2} {rmarkdown} {spelling} {testthat} (>= 3.0.0) {knitr}, {rmarkdown}, used generating documentation. {spelling} {testthat} used testing code base. {ggplot2} used plotting within vignettes. {incidence2} {epicontacts} used vignettes demonstrate interoperability downstream packages, focus data visualisation.","code":""},{"path":"https://epiverse-trace.github.io/simulist/articles/design-principles.html","id":"contribute","dir":"Articles","previous_headings":"","what":"Contribute","title":"Design Principles for {simulist}","text":"special requirements contributing {simulist}, please follow package contributing guide.","code":""},{"path":"https://epiverse-trace.github.io/simulist/articles/simulist.html","id":"controlling-outbreak-size","dir":"Articles","previous_headings":"","what":"Controlling outbreak size","title":"Getting Started with {simulist}","text":"reproduction number (RR) strong influence size outbreak. {simulist}, reproduction number , provided directly, rather determined mean number contacts probability infection. However, {simulist} package generates line list data using stochastic algorithm, even R<1R < 1 can produce substantial outbreak chance, R>>1R >> 1 sometimes produce vast epidemic one simulation (.e. one replicate) due stochasticity. Alert reproduction number (RR) simulation results contact distribution (contact_distribution) probability infection (prob_infection); number infections binomial sample number contacts case probability infection (.e. sampled) given prob_infect. average number secondary infections primary case greater 1 (R>1R > 1) can lead outbreak becoming extremely large. currently depletion susceptible individuals simulation model (.e. infinite population size), maximum outbreak size (second element vector supplied outbreak_size argument) can used return line list early without producing excessively large data set. R>1R > 1, simulation may return early reaching maximum outbreak size. scenarios R>1R > 1, RR value controlling rate maximum outbreak size reached rather size outbreak (simulations R>1R > 1 reach maximum outbreak size due stochasticity). simulation therefore sensitive contact distribution probability infection resulting RR just 1. requiring minimum maximum outbreak size can specify outbreak_size argument sim_linelist(). default set 10 10,000 minimum maximum, respectively. case minimum outbreak size, means simulation return line list conditioning met. words, simulation resimulate branching process model outbreak infects least 10 people. case maximum outbreak size, number infected individuals exceeds maximum simulation end, even still infectious individuals capable continuing transmission, function return data early warning number infections data reached maximum stating many cases contacts data output. requiring line list represents large outbreak, COVID-19 outbreak, setting outbreak_size larger number guarantees line list least size. simulate line list requiring least 250 cases (fewer 10,000 cases). maximum number cases can also increased simulating outbreaks global pandemics. amount time simulation takes can determined mean contact distribution (contact_distribution), probability infection (prob_infection) conditioning outbreak size (outbreak_size). minimum outbreak_size large, example hundreds thousands cases, mean number contacts probability infection mean reproduction number one, take many branching process simulations finding one produces sufficiently large epidemic.","code":"linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   outbreak_size = c(250, 1e4) ) head(linelist) #>   id        case_name case_type sex age date_onset date_admission   outcome #> 1  1 Justin Affricano confirmed   m  87 2023-01-01           <NA> recovered #> 2  2  Megan Mccormick  probable   f  61 2023-01-01           <NA> recovered #> 3  3    Samuel Griego confirmed   m  29 2023-01-01           <NA> recovered #> 4  4  Trevon Mitchell  probable   m  71 2023-01-01     2023-02-04      died #> 5  5     Cheyenne Tom confirmed   f  23 2023-01-01     2023-02-07 recovered #> 6  6     Daejha Buggs confirmed   f   7 2023-01-01           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>     22.7 #> 2         <NA>         2023-01-03        2023-01-03       NA #> 3         <NA>         2022-12-31        2023-01-07     24.4 #> 4   2023-01-14         2022-12-25        2023-01-02       NA #> 5         <NA>         2023-01-04        2023-01-05     24.2 #> 6         <NA>         2023-01-01        2023-01-04     27.0"},{"path":"https://epiverse-trace.github.io/simulist/articles/simulist.html","id":"case-type","dir":"Articles","previous_headings":"","what":"Case type","title":"Getting Started with {simulist}","text":"infectious disease outbreak may possible confirm every infection case. confirmed case typically defined via diagnostic test. several reasons case may confirmed, including limited testing capacity mild non-specific early symptoms, especially fast growing epidemics. therefore include two categories cases: probable suspected. example, probable cases may show clinical evidence disease , , confirmed diagnostic test. Suspected cases possibly infected show clear clinical epidemiological evidence, diagnostic test performed. Hence distribution suspected/probable/confirmed depend pathogen characteristics, outbreak-specific definitions, resources available. line list output {simulist} simulation contains column (case_type) type case. {simulist} can simulate varying probabilities case suspected, probable confirmed. default sim_linelist() function uses probabilities suspected = 0.2, probable = 0.3 confirmed = 0.5. alter probabilities, supply named vector sim_linelist() argument case_type_probs. vector contain three numbers, names suspected, probable confirmed, numbers summing one. change values simulate outbreak proportion cases confirmed laboratory testing high. also possible set one categories 1, case every case type. way {simulist} assigns case types pasting case types onto existing case data. Thus, viewed true underlying data cases simulation confirmed, lack information cases. cases output line list incorrectly attributed probable suspected infected. say, individuals line list, whatever case type, infected outbreak.","code":"linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death ) head(linelist) #>   id           case_name case_type sex age date_onset date_admission   outcome #> 1  1       Muslim el-Rad  probable   m  40 2023-01-01           <NA>      died #> 2  3         Lindsay Daw confirmed   f  41 2023-01-01     2023-01-04      died #> 3  4   Margaret Vanovski confirmed   f  15 2023-01-01           <NA> recovered #> 4  5       Billy Vasquez confirmed   m   9 2023-01-01           <NA> recovered #> 5  7      Michaela Olson confirmed   f  53 2023-01-02           <NA> recovered #> 6  9 Julio Gonzalez Mora suspected   m  58 2023-01-01           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1   2023-01-10               <NA>              <NA>       NA #> 2   2023-01-17         2023-01-02        2023-01-04     21.6 #> 3         <NA>         2022-12-31        2023-01-06     24.6 #> 4         <NA>         2022-12-31        2023-01-05     24.0 #> 5         <NA>         2022-12-29        2023-01-02     26.3 #> 6         <NA>         2023-01-01        2023-01-03       NA linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   case_type_probs = c(suspected = 0.05, probable = 0.05, confirmed = 0.9) ) head(linelist) #>   id          case_name case_type sex age date_onset date_admission   outcome #> 1  1    Margarita Perry confirmed   f  43 2023-01-01           <NA>      died #> 2  2         Tyler Lowe  probable   m   8 2023-01-01           <NA> recovered #> 3  6     Hannah Wilmore confirmed   f  90 2023-01-01     2023-01-05 recovered #> 4  7     Vanessa Harris confirmed   f  45 2023-01-01           <NA> recovered #> 5  8       Malik Fuller confirmed   m  85 2023-01-01           <NA> recovered #> 6  9 Charmaine Mitchell confirmed   f  18 2023-01-01           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1   2023-01-07               <NA>              <NA>     24.8 #> 2         <NA>         2022-12-31        2023-01-03       NA #> 3         <NA>         2023-01-01        2023-01-04     22.8 #> 4         <NA>         2022-12-31        2023-01-04     23.6 #> 5         <NA>         2022-12-31        2023-01-02     26.4 #> 6         <NA>         2023-01-05        2023-01-05     26.3"},{"path":"https://epiverse-trace.github.io/simulist/articles/simulist.html","id":"anonymous-line-list","dir":"Articles","previous_headings":"","what":"Anonymous line list","title":"Getting Started with {simulist}","text":"default sim_linelist() provides name individual line list. anonymised line list required anonymise argument sim_linelist() can set TRUE. names used line list produced random {randomNames} R package. Therefore, even anonymise = FALSE personal data real individuals produced shared. anonymise argument changes $case_name column line list, deemed personally identifiable information (PII) line list data.","code":"linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   anonymise = TRUE ) head(linelist) #>   id  case_name case_type sex age date_onset date_admission   outcome #> 1  1 cClWJSQgqZ confirmed   m  46 2023-01-01           <NA> recovered #> 2  3 zmepWU7Zuu confirmed   f  25 2023-01-02     2023-01-13 recovered #> 3  4 BqNMpEC7MY confirmed   m  28 2023-01-02           <NA> recovered #> 4  6 I5bc1CGQvs confirmed   m   6 2023-01-03           <NA> recovered #> 5  8 EZ3IlginCk confirmed   m  26 2023-01-02           <NA> recovered #> 6 12 S2bqfFpMmt  probable   f  72 2023-01-05           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>     23.8 #> 2         <NA>         2023-01-01        2023-01-02     25.8 #> 3         <NA>         2023-01-01        2023-01-04     20.8 #> 4         <NA>         2023-01-01        2023-01-05     26.6 #> 5         <NA>         2023-01-02        2023-01-03     26.4 #> 6         <NA>         2023-01-04        2023-01-07       NA"},{"path":"https://epiverse-trace.github.io/simulist/articles/simulist.html","id":"population-age","dir":"Articles","previous_headings":"","what":"Population age","title":"Getting Started with {simulist}","text":"overview line list can simulated uniform structured population age distribution see vignette dedicated topic.","code":""},{"path":"https://epiverse-trace.github.io/simulist/articles/simulist.html","id":"age-stratified-hospitalisation-and-death-risks","dir":"Articles","previous_headings":"","what":"Age-stratified hospitalisation and death risks","title":"Getting Started with {simulist}","text":"overview line list can simulated age-stratified (age-dependent) hospitalisation death risks see vignette dedicated topic.","code":""},{"path":"https://epiverse-trace.github.io/simulist/articles/simulist.html","id":"simulate-contacts-table","dir":"Articles","previous_headings":"","what":"Simulate contacts table","title":"Getting Started with {simulist}","text":"simulate contacts table, sim_contacts() function can used. requires arguments sim_linelist(), require onset--hospitalisation delay onset--death delays.","code":"contacts <- sim_contacts(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5) head(contacts) #>               from               to age sex date_first_contact #> 1  Mariah Williams       Aric Verde  49   m         2023-01-01 #> 2       Aric Verde Muammar el-Rayes  22   m         2023-01-06 #> 3       Aric Verde  Alexis Martinez  88   f         2023-01-04 #> 4 Muammar el-Rayes   Deangelo Moody  32   m         2023-01-02 #> 5 Muammar el-Rayes  Jamison Bennett  38   m         2023-01-05 #> 6 Muammar el-Rayes Brittanny Owston  63   f         2023-01-04 #>   date_last_contact was_case           status #> 1        2023-01-04        Y             case #> 2        2023-01-07        Y             case #> 3        2023-01-04        Y             case #> 4        2023-01-05        N   under_followup #> 5        2023-01-07        N lost_to_followup #> 6        2023-01-05        Y             case"},{"path":"https://epiverse-trace.github.io/simulist/articles/simulist.html","id":"simulate-both-line-list-and-contacts-table","dir":"Articles","previous_headings":"","what":"Simulate both line list and contacts table","title":"Getting Started with {simulist}","text":"produce line list contacts table outbreak, sim_linelist() sim_contacts() used separately due stochastic algorithm, meaning data line list discordant contacts table. order simulate line list contacts table outbreak sim_outbreak() function required. simulate single outbreak return line list contacts table. inputs sim_outbreak() inputs required sim_linelist(). sim_outbreak() features sim_linelist() sim_contacts(), includes simulating age-stratified risks hospitalisation death, probability case types contact tracing status can modified. Advanced sim_*() functions, default, use excess degree distribution account network effect sampling number contacts simulation model (q(n)∼(n+1)p(n+1)q(n) \\sim (n + 1)p(n + 1) p(n)p(n) probability density function distribution, e.g., Poisson Negative binomial, within .sim_network_bp() internal function). network effect can turned using config argument sim_*() function setting network = \"unadjusted\" (create_config(network = \"unadjusted\")) instead sample probability distribution p(n)p(n).","code":"outbreak <- sim_outbreak(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death ) head(outbreak$linelist) #>   id            case_name case_type sex age date_onset date_admission   outcome #> 1  1        Alyssa Morgan suspected   f  51 2023-01-01           <NA> recovered #> 2  2           Ryan Cline  probable   f  15 2023-01-01           <NA> recovered #> 3  4 Brittany Fleddermann confirmed   f  47 2023-01-02           <NA> recovered #> 4  6       Urian Arechiga suspected   m  60 2023-01-01     2023-02-24 recovered #> 5  7        Marwa el-Riaz  probable   f  43 2023-01-01           <NA> recovered #> 6  8           Marie Cira suspected   f  34 2023-01-02           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2022-12-30        2023-01-02       NA #> 3         <NA>         2023-01-01        2023-01-04     24.2 #> 4         <NA>         2022-12-28        2023-01-01       NA #> 5         <NA>         2023-01-05        2023-01-07       NA #> 6         <NA>         2023-01-04        2023-01-05       NA head(outbreak$contacts) #>            from                   to age sex date_first_contact #> 1 Alyssa Morgan           Ryan Cline  15   f         2022-12-30 #> 2    Ryan Cline      Naadir al-Yamin  60   m         2022-12-28 #> 3    Ryan Cline Brittany Fleddermann  47   f         2023-01-01 #> 4    Ryan Cline        Brendan Dizon  47   m         2023-01-03 #> 5    Ryan Cline       Urian Arechiga  60   m         2022-12-28 #> 6    Ryan Cline        Marwa el-Riaz  43   f         2023-01-05 #>   date_last_contact was_case         status #> 1        2023-01-02        Y           case #> 2        2023-01-02        N under_followup #> 3        2023-01-04        Y           case #> 4        2023-01-04        N under_followup #> 5        2023-01-01        Y           case #> 6        2023-01-07        Y           case"},{"path":"https://epiverse-trace.github.io/simulist/articles/simulist.html","id":"using-functions-for-distributions-instead-of-epiparameter","dir":"Articles","previous_headings":"","what":"Using functions for distributions instead of <epiparameter>","title":"Getting Started with {simulist}","text":"contact_distribution, infectious_period, onset_to_hosp, onset_to_death onset_to_recovery arguments can accept either <epiparameter> object (shown ), can accept function. possible use predefined function anonymous function. ’ll demonstrate use .","code":""},{"path":"https://epiverse-trace.github.io/simulist/articles/simulist.html","id":"predefined-functions","dir":"Articles","previous_headings":"Using functions for distributions instead of <epiparameter>","what":"Predefined functions","title":"Getting Started with {simulist}","text":"","code":"contact_distribution <- function(x) dpois(x = x, lambda = 2) infectious_period <- function(x) rgamma(n = x, shape = 2, scale = 2) onset_to_hosp <- function(x) rlnorm(n = x, meanlog = 1.5, sdlog = 0.5) onset_to_death <- function(x) rweibull(n = x, shape = 0.5, scale = 0.2)  outbreak <- sim_outbreak(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death ) head(outbreak$linelist) #>   id               case_name case_type sex age date_onset date_admission #> 1  1           Marco Barrios  probable   m  84 2023-01-01     2023-01-06 #> 2  3        Nicholas Roberts confirmed   m  44 2023-01-01           <NA> #> 3  4           Alec Gonzalez  probable   m  19 2023-01-01           <NA> #> 4  5                Kyle Her suspected   m  47 2023-01-04     2023-01-10 #> 5  6 Taylor Vazquez-Corrales  probable   f  13 2023-01-03           <NA> #> 6  8       Saahira el-Demian confirmed   f  66 2023-01-04           <NA> #>     outcome date_outcome date_first_contact date_last_contact ct_value #> 1 recovered         <NA>               <NA>              <NA>       NA #> 2 recovered         <NA>         2022-12-29        2023-01-02     23.4 #> 3 recovered         <NA>         2023-01-03        2023-01-05       NA #> 4      died   2023-01-04         2022-12-29        2023-01-02       NA #> 5 recovered         <NA>         2023-01-01        2023-01-03       NA #> 6 recovered         <NA>         2023-01-01        2023-01-03     24.8 head(outbreak$contacts) #>               from                      to age sex date_first_contact #> 1    Marco Barrios          Huda al-Younan  67   f         2023-01-03 #> 2    Marco Barrios        Nicholas Roberts  44   m         2022-12-29 #> 3    Marco Barrios           Alec Gonzalez  19   m         2023-01-03 #> 4 Nicholas Roberts                Kyle Her  47   m         2022-12-29 #> 5 Nicholas Roberts Taylor Vazquez-Corrales  13   f         2023-01-01 #> 6    Alec Gonzalez        Zahraaa el-Salam  45   f         2023-01-03 #>   date_last_contact was_case           status #> 1        2023-01-05        N lost_to_followup #> 2        2023-01-02        Y             case #> 3        2023-01-05        Y             case #> 4        2023-01-02        Y             case #> 5        2023-01-03        Y             case #> 6        2023-01-06        N   under_followup"},{"path":"https://epiverse-trace.github.io/simulist/articles/simulist.html","id":"anonymous-functions","dir":"Articles","previous_headings":"Using functions for distributions instead of <epiparameter>","what":"Anonymous functions","title":"Getting Started with {simulist}","text":"contact_distribution requires density function instead random number generation function (.e. dpois() dnbinom() instead rpois() rnbinom()). due branching process simulation adjusting sampling contacts take account random network effect. approach using anonymous functions can used sim_linelist() sim_contacts().","code":"outbreak <- sim_outbreak(   contact_distribution = function(x) dpois(x = x, lambda = 2),   infectious_period = function(x) rgamma(n = x, shape = 2, scale = 2),   prob_infection = 0.5,   onset_to_hosp = function(x) rlnorm(n = x, meanlog = 1.5, sdlog = 0.5),   onset_to_death = function(x) rweibull(n = x, shape = 0.5, scale = 0.2) ) head(outbreak$linelist) #>   id         case_name case_type sex age date_onset date_admission   outcome #> 1  1       Trae Gurule suspected   m  12 2023-01-01     2023-01-11      died #> 2  3   Quinton Doublin confirmed   m  46 2023-01-01           <NA> recovered #> 3  4     Andres Jacket  probable   m  35 2023-01-06           <NA> recovered #> 4  6 Alexander Wartman confirmed   m   9 2023-01-02           <NA> recovered #> 5  7  Miranda Preciado  probable   f  21 2023-01-05     2023-01-08      died #> 6  8     Jordon Barnes confirmed   m  36 2023-01-05           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1   2023-01-01               <NA>              <NA>       NA #> 2         <NA>         2023-01-04        2023-01-06     26.3 #> 3         <NA>         2022-12-31        2023-01-02       NA #> 4         <NA>         2023-01-02        2023-01-04     23.0 #> 5   2023-01-05         2023-01-02        2023-01-06       NA #> 6         <NA>         2023-01-01        2023-01-07     29.2 head(outbreak$contacts) #>                from                to age sex date_first_contact #> 1       Trae Gurule    Dillon Peebles  43   m         2023-01-04 #> 2       Trae Gurule   Quinton Doublin  46   m         2023-01-04 #> 3   Quinton Doublin     Andres Jacket  35   m         2022-12-31 #> 4   Quinton Doublin         Paige Guo  73   f         2022-12-28 #> 5   Quinton Doublin Alexander Wartman   9   m         2023-01-02 #> 6 Alexander Wartman  Miranda Preciado  21   f         2023-01-02 #>   date_last_contact was_case         status #> 1        2023-01-04        N under_followup #> 2        2023-01-06        Y           case #> 3        2023-01-02        Y           case #> 4        2023-01-02        N under_followup #> 5        2023-01-04        Y           case #> 6        2023-01-06        Y           case"},{"path":"https://epiverse-trace.github.io/simulist/articles/simulist.html","id":"simulating-without-hospitalisations-andor-deaths","dir":"Articles","previous_headings":"","what":"Simulating without hospitalisations and/or deaths","title":"Getting Started with {simulist}","text":"onset--hospitalisation (onset_to_hosp) onset--death (onset_to_death) arguments can also set NULL case date admission ($date_admission) date death ($date_death) column line list contains NAs. functionality also applies sim_outbreak(). example, hosp_risk, hosp_death_risk non_hosp_death_risk set NULL. risk (*_risk) arguments left numeric inputs corresponding onset--event distribution (.e. hosp_risk onset_to_hosp hosp_death_risk non_hosp_death_risk onset_to_death) set NULL warning produced. example simulates neither hospitalisation deaths, need turned together, one can set NULL corresponding risk arguments.","code":"linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = NULL,   onset_to_death = NULL,   hosp_risk = NULL,   hosp_death_risk = NULL,   non_hosp_death_risk = NULL ) head(linelist) #>   id       case_name case_type sex age date_onset date_admission   outcome #> 1  1    Nicolas Xiao  probable   m  20 2023-01-01           <NA> recovered #> 2  2  Ashlyn Desalvo confirmed   f  90 2023-01-07           <NA> recovered #> 3  3 Caitlin Gardner confirmed   f  45 2023-01-02           <NA> recovered #> 4  4     Dwayne Cole confirmed   m  77 2023-01-08           <NA> recovered #> 5  6  Brandon Sisson confirmed   m  48 2023-01-08           <NA> recovered #> 6  7 Danielle Linnon confirmed   f   4 2023-01-02           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2023-01-02        2023-01-02     23.4 #> 3         <NA>         2022-12-31        2023-01-03     30.4 #> 4         <NA>         2023-01-08        2023-01-09     23.9 #> 5         <NA>         2023-01-06        2023-01-08     24.2 #> 6         <NA>         2022-12-31        2023-01-04     27.8"},{"path":"https://epiverse-trace.github.io/simulist/articles/time-varying-cfr.html","id":"constant-case-fatality-risk","dir":"Articles","previous_headings":"","what":"Constant case fatality risk","title":"Time-varying case fatality risk","text":"calling create_config() function default output contains list element named time_varying_death_risk set NULL. corresponds constant case fatality risk time, controlled hosp_death_risk non_hosp_death_risk arguments. defaults two arguments : death risk hospitalised (hosp_death_risk): 0.5 (50%) death risk outside hospitals (non_hosp_death_risk): 0.05 (5%) example set explicitly clear risks ’re using, otherwise hosp_death_risk, non_hosp_death_risk config need specified can use default values. examples vignette set epidemic size 500 1,000 cases, ensure can clearly see case fatality patterns data. See Get Started vignette section Controlling Outbreak Size information . visualise incidence cases deaths time use {incidence2} R package. information using {incidence2} plot line list data see Visualising simulated data vignette. converting line list <data.frame> <incidence> object need ungroup outcome columns columns using {tidyr} {dplyr} R packages Tidyverse. Daily incidence cases symptom onset incidence deaths. Case fatality risk hospitalised individuals 0.5 risk non-hospitalised individuals 0.05, risks constant time.","code":"linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_death_risk = 0.5,   non_hosp_death_risk = 0.05,   outbreak_size = c(500, 1000),   config = create_config() )  # first 6 rows of linelist head(linelist) #>   id        case_name case_type sex age date_onset date_admission   outcome #> 1  1       Mark Allen suspected   m  60 2023-01-01           <NA> recovered #> 2  2    Emma Kirscher  probable   f  54 2023-01-04           <NA> recovered #> 3  4     James Coyote confirmed   m  12 2023-01-05           <NA> recovered #> 4  6 Dagoberto Medina  probable   m  45 2023-01-07           <NA> recovered #> 5  7  Sundus al-Malek confirmed   f  11 2023-01-09           <NA> recovered #> 6  8  Andrew Billings  probable   m  36 2023-01-08           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2023-01-03        2023-01-06       NA #> 3         <NA>         2022-12-30        2023-01-02     25.6 #> 4         <NA>         2023-01-03        2023-01-06       NA #> 5         <NA>         2023-01-01        2023-01-05     26.3 #> 6         <NA>         2023-01-01        2023-01-05       NA linelist <- linelist %>%   pivot_wider(     names_from = outcome,     values_from = date_outcome   ) %>%   rename(     date_death = died,     date_recovery = recovered   ) daily <- incidence(   linelist,   date_index = c(     onset = \"date_onset\",     death = \"date_death\"   ),   interval = \"daily\" ) daily <- complete_dates(daily) plot(daily)"},{"path":"https://epiverse-trace.github.io/simulist/articles/time-varying-cfr.html","id":"higher-risk-of-case-fatality","dir":"Articles","previous_headings":"","what":"Higher risk of case fatality","title":"Time-varying case fatality risk","text":"repeat simulation increase risk case fatality hospitalised (hosp_death_risk) non-hospitalised (non_hosp_death_risk) individuals infected. Daily incidence cases symptom onset incidence deaths. Case fatality risk hospitalised individuals 0.9 risk non-hospitalised individuals 0.75, risks constant time.","code":"linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_death_risk = 0.9,   non_hosp_death_risk = 0.75,   outbreak_size = c(500, 1000),   config = create_config() ) #> Warning: Number of cases exceeds maximum outbreak size.  #> Returning data early with 1026 cases and 1994 total contacts (including cases).  head(linelist) #>   id        case_name case_type sex age date_onset date_admission   outcome #> 1  1     Brian Cabral suspected   m  42 2023-01-01     2023-01-10 recovered #> 2  2         Noah Han confirmed   m  25 2023-01-06     2023-01-12      died #> 3  4 Jessenia Bechtel confirmed   f  64 2023-01-07           <NA>      died #> 4  6   Ilhaam al-Azam confirmed   f  46 2023-01-09           <NA> recovered #> 5  8   Yasmine Turner  probable   f  78 2023-01-08           <NA>      died #> 6 10 Amaani al-Akbari  probable   f  13 2023-01-15           <NA>      died #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2   2023-02-26         2022-12-29        2023-01-03     23.9 #> 3   2023-02-04         2023-01-05        2023-01-07     28.3 #> 4         <NA>         2023-01-09        2023-01-11     22.5 #> 5   2023-02-07         2023-01-08        2023-01-09       NA #> 6   2023-02-17         2023-01-07        2023-01-11       NA linelist <- linelist %>%   pivot_wider(     names_from = outcome,     values_from = date_outcome   ) %>%   rename(     date_death = died,     date_recovery = recovered   ) daily <- incidence(   linelist,   date_index = c(     onset = \"date_onset\",     death = \"date_death\"   ),   interval = \"daily\" ) daily <- complete_dates(daily) plot(daily)"},{"path":"https://epiverse-trace.github.io/simulist/articles/time-varying-cfr.html","id":"continuous-time-varying-case-fatality-risk","dir":"Articles","previous_headings":"","what":"Continuous time-varying case fatality risk","title":"Time-varying case fatality risk","text":"Now ’ve seen constant case fatality risk simulations look like, can simulate time-varying function risk. setup calling create_config() function, providing anonymous function two arguments, risk time, time_varying_death_risk. function use relevant risk (e.g. hosp_death_risk) time individual infected calculates probability (risk) death. create_config() function named arguments, argument modifying needs matched name exactly (case sensitive). See ?create_config() documentation. set case fatality risk exponentially decrease time. provide shallow (monotonic) decline case fatality simulated epidemic. time-varying hospitalised case fatality risk function (config$time_varying_death_risk) throughout epidemic. case hospitalised risks (hosp_death_risk) maximum value day 0 decline time, risk approaching zero around day 100. Advanced time-varying case fatality risk function modifies death risk specified hosp_death_risk non_hosp_death_risk. example, user-supplied hosp_death_risk non_hosp_death_risk maximum values, user-supplied time-varying function declining time, however, user-supplied function may also increase time, fluctuate. requirements time-varying case fatality risk hospitalised non-hospitalised infections must 0 1, otherwise function error. example hosp_death_risk 0.9 non_hosp_death_risk 0.75, time-varying case fatality risk function exponential decline. means day 0 epidemic (.e. first infection seeds outbreak) risks 0.9 0.75. time start epidemic (t0+Δtt_0 + \\Delta t) risks lower, exponential function approaches zero risk case dying also go zero. Simulating time-varying case fatality risk: Daily incidence cases symptom onset incidence deaths. baseline case fatality risk hospitalised individuals 0.9 non-hospitalised individuals 0.75, decline exponentially time.","code":"config <- create_config(   time_varying_death_risk = function(risk, time) risk * exp(-0.05 * time) ) exp_df <- data.frame(   time = 1:150,   value = config$time_varying_death_risk(risk = 0.9, time = 1:150) ) ggplot(exp_df) +   geom_point(mapping = aes(x = time, y = value)) +   scale_y_continuous(name = \"Value\") +   scale_x_continuous(name = \"Time (Days)\") +   theme_bw() linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_death_risk = 0.9,   non_hosp_death_risk = 0.75,   outbreak_size = c(500, 1000),   config = config )  head(linelist) #>   id       case_name case_type sex age date_onset date_admission   outcome #> 1  1       Katy Doan confirmed   f  66 2023-01-01           <NA>      died #> 2  2  Sultan el-Sani confirmed   m  52 2023-01-01           <NA> recovered #> 3  3  Ramzi al-Abdoo confirmed   m  22 2023-01-02           <NA> recovered #> 4  4    Marco Valdez confirmed   m   7 2023-01-03     2023-02-13      died #> 5  7 Emoree Williams  probable   f   4 2023-01-07           <NA> recovered #> 6  8 Sultan el-Emami suspected   m  83 2023-01-08     2023-01-14      died #>   date_outcome date_first_contact date_last_contact ct_value #> 1   2023-01-10               <NA>              <NA>     24.9 #> 2         <NA>         2023-01-02        2023-01-03     28.0 #> 3         <NA>         2022-12-29        2023-01-02     24.8 #> 4   2023-01-17         2023-01-04        2023-01-05     24.0 #> 5         <NA>         2023-01-01        2023-01-04       NA #> 6   2023-01-25         2023-01-05        2023-01-05       NA linelist <- linelist %>%   pivot_wider(     names_from = outcome,     values_from = date_outcome   ) %>%   rename(     date_death = died,     date_recovery = recovered   ) daily <- incidence(   linelist,   date_index = c(     onset = \"date_onset\",     death = \"date_death\"   ),   interval = \"daily\" ) daily <- complete_dates(daily) plot(daily)"},{"path":"https://epiverse-trace.github.io/simulist/articles/time-varying-cfr.html","id":"stepwise-time-varying-case-fatality-risk","dir":"Articles","previous_headings":"","what":"Stepwise time-varying case fatality risk","title":"Time-varying case fatality risk","text":"addition continuously varying case fatality risk function, simulation can also work stepwise (piecewise) functions. risk instantaneously change given point time another risk level. achieve , specify anonymous function create_config(), risk case dying set baseline hosp_death_risk non_hosp_death_risk first 60 days outbreak become zero (.e. individual infected day 60 definitely recover). time-varying case fatality risk function (config$time_varying_death_risk) hospitalised death risk (hosp_death_risk) non-hospitalised death risk (non_hosp_death_risk) throughout epidemic. case risks user-supplied values day 0 day 60, become 0 onwards. Simulating stepwise time-varying case fatality risk: Daily incidence cases symptom onset incidence deaths. maximum case fatality risk hospitalised individuals 0.9 non-hospitalised individuals 0.75, rates remain constant days 0 60, go 0 day 60 onwards. stepwise function can also used specify time windows risk death reduced. specify hosp_death_risk non_hosp_death_risk first 50 days epidemic, day 50 day 100 risk reduced half, day 100 onwards risk goes back rates specified hosp_death_risk non_hosp_death_risk. time-varying case fatality risk function (config$time_varying_death_risk) scales hospitalised death risk (hosp_death_risk) non-hospitalised death risk (non_hosp_death_risk) throughout epidemic. case risks maximum, user-supplied, values day 0 day 50, half risks day 50 day 100, return maximum value day 100 onwards. Simulating stepwise time-varying case fatality risk: Daily incidence cases symptom onset incidence deaths. maximum case fatality risk hospitalised individuals 0.9 non-hospitalised individuals 0.75, rates remain constant days 0 50, days 50 100 case fatality risk halved (.e hosp_death_risk = 0.45 non_hosp_death_risk = 0.375), going back original risks day 100 onwards. vignette explore applying time-varying case fatality risk age-stratified fatality risks, possible sim_linelist() sim_outbreak() functions. See Age-stratified hospitalisation death risks vignette combine instructions vignette setting time-varying function using create_config(). implementation time-varying case fatality rate simulation functions (sim_linelist() sim_outbreak()) flexible many functional forms. ways time-varying case fatality risk currently possible please make issue pull request. Currently hospitalisation risk assumed constant time can adjusted time-varying like death risk, feature like included {simulist} R package please make request issue.","code":"config <- create_config(   time_varying_death_risk = function(risk, time) ifelse(test = time < 60, yes = risk, no = 0) ) stepwise_df <- data.frame(   time = 1:150,   value = config$time_varying_death_risk(risk = 0.9, time = 1:150) ) ggplot(stepwise_df) +   geom_point(mapping = aes(x = time, y = value)) +   scale_y_continuous(name = \"Value\") +   scale_x_continuous(name = \"Time (Days)\") +   theme_bw() linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_death_risk = 0.9,   non_hosp_death_risk = 0.75,   outbreak_size = c(500, 1000),   config = config )  head(linelist) #>   id       case_name case_type sex age date_onset date_admission outcome #> 1  1  Sabrina Nguyen suspected   f  81 2023-01-01           <NA>    died #> 2  2 Manuelito Silva confirmed   m  70 2023-01-04           <NA>    died #> 3  5   Ashley Todman confirmed   f  63 2023-01-11           <NA>    died #> 4  6     Ryan Rincon confirmed   m  11 2023-01-10           <NA>    died #> 5 10  Jessica Rogers  probable   f  15 2023-01-12           <NA>    died #> 6 11 Carly Henderson  probable   f  65 2023-01-12           <NA>    died #>   date_outcome date_first_contact date_last_contact ct_value #> 1   2023-01-13               <NA>              <NA>       NA #> 2   2023-01-16         2023-01-03        2023-01-04     24.4 #> 3   2023-02-11         2023-01-01        2023-01-05     26.6 #> 4   2023-02-18         2023-01-02        2023-01-04     24.1 #> 5   2023-02-22         2023-01-09        2023-01-12       NA #> 6   2023-01-30         2023-01-13        2023-01-17       NA linelist <- linelist %>%   pivot_wider(     names_from = outcome,     values_from = date_outcome   ) %>%   rename(     date_death = died,     date_recovery = recovered   ) daily <- incidence(   linelist,   date_index = c(     onset = \"date_onset\",     death = \"date_death\"   ),   interval = \"daily\" ) daily <- complete_dates(daily) plot(daily) config <- create_config(   time_varying_death_risk = function(risk, time) {    ifelse(test = time > 50 & time < 100, yes = risk * 0.5, no = risk)   } ) stepwise_df <- data.frame(   time = 1:150,   value = config$time_varying_death_risk(risk = 0.9, time = 1:150) ) ggplot(stepwise_df) +   geom_point(mapping = aes(x = time, y = value)) +   scale_y_continuous(name = \"Value\", limits = c(0, 1)) +   scale_x_continuous(name = \"Time (Days)\") +   theme_bw() linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_death_risk = 0.9,   non_hosp_death_risk = 0.75,   outbreak_size = c(500, 1000),   config = config ) #> Warning: Number of cases exceeds maximum outbreak size.  #> Returning data early with 1001 cases and 2013 total contacts (including cases).  head(linelist) #>   id        case_name case_type sex age date_onset date_admission   outcome #> 1  1 Richard Martinez  probable   m  30 2023-01-01     2023-01-30      died #> 2  2          Nhi Cha  probable   f  60 2023-01-01     2023-01-08      died #> 3  3   Kathleen Xiong  probable   f  80 2023-01-02           <NA>      died #> 4  4  Cheyenne Bryant confirmed   f   6 2023-01-20           <NA> recovered #> 5  5      Vanessa Box  probable   f  41 2023-01-05     2023-02-27      died #> 6  6     Dallas Quiel suspected   m  87 2023-01-15           <NA>      died #>   date_outcome date_first_contact date_last_contact ct_value #> 1   2023-01-10               <NA>              <NA>       NA #> 2   2023-01-28         2023-01-03        2023-01-04       NA #> 3   2023-01-13         2022-12-31        2023-01-05       NA #> 4         <NA>         2022-12-29        2023-01-03     29.1 #> 5   2023-01-16         2022-12-30        2023-01-02       NA #> 6   2023-02-05         2022-12-30        2023-01-04       NA linelist <- linelist %>%   pivot_wider(     names_from = outcome,     values_from = date_outcome   ) %>%   rename(     date_death = died,     date_recovery = recovered   ) daily <- incidence(   linelist,   date_index = c(     onset = \"date_onset\",     death = \"date_death\"   ),   interval = \"daily\" ) daily <- complete_dates(daily) plot(daily)"},{"path":"https://epiverse-trace.github.io/simulist/articles/vis-linelist.html","id":"visualising-incidence-of-onset-hospitalisation-and-death","dir":"Articles","previous_headings":"","what":"Visualising incidence of onset, hospitalisation and death","title":"Visualising simulated data","text":"section vignette heavily based upon examples given Get Started vignette {incidence2} package. highly recommended read documentation supplied {incidence2} package explore full range functionality. visualise number cases onset particular day, {incidence2} package, dedicated class (<incidence2>) used handling plotting data. Currently {simulist} outputs dates rounded nearest day, .e. can half way day. obvious R prints dates nearest day default, removing date class (using unclass()) can see decimals (R stores dates internally number days since 1970-01-01). Note storing dates precise doubles integer days may change near future. interval = \"daily\" required {incidence2} requires rounded dates aggregate cases per unit time specifying interval automatically us. possible every date onset symptoms, resulting dates missing entries. taken care complete_dates() function {incidence2}. Daily incidence cases symptom onset including days zero cases. Alternatively, incidence can plotting weekly: Weekly incidence cases symptom onset order check differences group line list data, example sex, <incidence2> data object can recreated, specifying columns group . Weekly incidence cases symptom onset facetted sex visualise onset, hospitalisation death incidence plot can jointly specified date_index argument incidence2::incidence(). First outcome data needs pivoted long data wide data input incidence2::incidence().","code":"# create incidence object daily <- incidence(x = linelist, date_index = \"date_onset\", interval = \"daily\") # impute for days without cases daily <- complete_dates(daily) plot(daily) weekly <- incidence(linelist, date_index = \"date_onset\", interval = \"isoweek\") plot(weekly) weekly <- incidence(   linelist,   date_index = \"date_onset\",   interval = \"isoweek\",   groups = \"sex\" ) plot(weekly)"},{"path":"https://epiverse-trace.github.io/simulist/articles/vis-linelist.html","id":"reshape-line-list-data","dir":"Articles","previous_headings":"Visualising incidence of onset, hospitalisation and death","what":"Reshape line list data","title":"Visualising simulated data","text":"Base R Tidyverse","code":"# this can also be achieved with the reshape() function but the user interface # for that function is complicated so here we just create the columns manually linelist$date_death <- linelist$date_outcome linelist$date_death[linelist$outcome == \"recovered\"] <- NA linelist$date_recovery <- linelist$date_outcome linelist$date_recovery[linelist$outcome == \"died\"] <- NA library(tidyr) library(dplyr) linelist <- linelist %>%   tidyr::pivot_wider(     names_from = outcome,     values_from = date_outcome   ) linelist <- linelist %>%   dplyr::rename(     date_death = died,     date_recovery = recovered   )"},{"path":"https://epiverse-trace.github.io/simulist/articles/vis-linelist.html","id":"section","dir":"Articles","previous_headings":"","what":"Visualising simulated data","title":"Visualising simulated data","text":"Daily incidence cases symptom onset incidence hospitalisations deaths.","code":"daily <- incidence(   linelist,   date_index = c(     onset = \"date_onset\",     hospitalisation = \"date_admission\",     death = \"date_death\"   ),   interval = \"daily\",   groups = \"sex\" ) daily <- complete_dates(daily) plot(daily)"},{"path":"https://epiverse-trace.github.io/simulist/articles/vis-linelist.html","id":"demographic-data","dir":"Articles","previous_headings":"","what":"Demographic data","title":"Visualising simulated data","text":"Please see Age structured population vignette examples plot distribution ages within line list data set, including age pyramids. plotting code vignettes hidden default, click Code button arrow reveal plotting code.","code":""},{"path":"https://epiverse-trace.github.io/simulist/articles/vis-linelist.html","id":"visualising-contact-data","dir":"Articles","previous_headings":"","what":"Visualising contact data","title":"Visualising simulated data","text":"section vignette based upon examples {epicontacts} R package documentation examples provided Epidemiological R Handbook chapter transmission chains. recommend going documentation {epicontacts} R package see plotting data wrangling functionality. Just utilised <incidence2> class {incidence2} package handle plot incidence data, going use <epicontacts> class {epicontacts} R package handle plot epidemiological contact data. benefit using {epicontacts} {incidence2}, fact default plotting method supplied package. Advanced Additionally, {epicontacts} provides access network plotting JavaScript libraries via {visNetwork} {threejs} R packages. {epicontacts} function make_epicontacts() requires line list contacts table, run sim_outbreak() function produce . use epidemiological delay distributions used simulate line list , reduce mean number contacts contact distribution 2. Using line list contacts data simulated can create <epicontacts> object. <epicontacts> object comes custom printing feature see data. plot contact network can use plotting method supplied {epicontacts} automatically recognised {epicontacts} package loaded (done library(epicontacts)). viewing vignette web (web browser) graph interactive allow highlight individuals network using drop-menu, zoom plot scrolling, move network using mouse drag drop. Contact network infectious disease outbreak. includes contacts, .e. individuals infected infected also option plot contacts network 3D using epicontacts::graph3D(). default outbreak simulated sim_outbreak() contains contacts cases infected. shown previous network plot terminal nodes pass infection individuals (note terminal nodes can also infected individuals infect anybody else, either due contacts due probabilistic nature infection transmission). show subset contacts table order plot transmission network cases outbreak.","code":"contact_distribution <- epiparameter(   disease = \"COVID-19\",   epi_name = \"contact distribution\",   prob_distribution = create_prob_distribution(     prob_distribution = \"pois\",     prob_distribution_params = c(mean = 2)   ) ) #> Citation cannot be created as author, year, journal or title is missing set.seed(1) outbreak <- sim_outbreak(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death ) head(outbreak$linelist) #>   id           case_name case_type sex age date_onset date_admission   outcome #> 1  1    Munsif al-Demian suspected   m  35 2023-01-01           <NA> recovered #> 2  2       Zachary Nault confirmed   m  43 2023-01-01     2023-01-08 recovered #> 3  3      Tae Woo Ralpho confirmed   m   1 2023-01-02           <NA> recovered #> 4  5 Abdul Kader el-Diab suspected   m  78 2023-01-05     2023-01-06      died #> 5  6      Katelyn Catlin confirmed   f  22 2023-01-02     2023-01-29      died #> 6  8        Lynsey Duron confirmed   f  28 2023-01-04           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2022-12-30        2023-01-05     25.3 #> 3         <NA>         2022-12-30        2023-01-02     25.8 #> 4   2023-01-25         2022-12-29        2023-01-02       NA #> 5   2023-01-11         2023-01-02        2023-01-04     24.9 #> 6         <NA>         2023-01-04        2023-01-05     24.5 head(outbreak$contacts) #>               from                     to age sex date_first_contact #> 1 Munsif al-Demian          Zachary Nault  43   m         2022-12-30 #> 2 Munsif al-Demian         Tae Woo Ralpho   1   m         2022-12-30 #> 3    Zachary Nault Carisa Flores-Gonzalez  29   f         2022-12-27 #> 4    Zachary Nault    Abdul Kader el-Diab  78   m         2022-12-29 #> 5   Tae Woo Ralpho         Katelyn Catlin  22   f         2023-01-02 #> 6   Tae Woo Ralpho       Azzaam el-Vaziri  70   m         2022-12-31 #>   date_last_contact was_case         status #> 1        2023-01-05        Y           case #> 2        2023-01-02        Y           case #> 3        2023-01-03        N under_followup #> 4        2023-01-02        Y           case #> 5        2023-01-04        Y           case #> 6        2023-01-03        N under_followup epicontacts <- make_epicontacts(   linelist = outbreak$linelist,   contacts = outbreak$contacts,   id = \"case_name\",   from = \"from\",   to = \"to\",   directed = TRUE ) epicontacts #>  #> /// Epidemiological Contacts // #>  #>   // class: epicontacts #>   // 12 cases in linelist; 21 contacts;  directed  #>  #>   // linelist #>  #> # A tibble: 12 × 12 #>    id               id.1 case_type sex     age date_onset date_admission outcome #>    <chr>           <int> <chr>     <chr> <int> <date>     <date>         <chr>   #>  1 Munsif al-Demi…     1 suspected m        35 2023-01-01 NA             recove… #>  2 Zachary Nault       2 confirmed m        43 2023-01-01 2023-01-08     recove… #>  3 Tae Woo Ralpho      3 confirmed m         1 2023-01-02 NA             recove… #>  4 Abdul Kader el…     5 suspected m        78 2023-01-05 2023-01-06     died    #>  5 Katelyn Catlin      6 confirmed f        22 2023-01-02 2023-01-29     died    #>  6 Lynsey Duron        8 confirmed f        28 2023-01-04 NA             recove… #>  7 Vladimir Sanch…    11 confirmed m        46 2023-01-04 NA             recove… #>  8 Jacy Cousins       12 confirmed f        67 2023-01-06 NA             recove… #>  9 Anushkaran Ken…    13 confirmed m        86 2023-01-07 NA             recove… #> 10 Katja Muetz        19 probable  f        56 2023-01-09 NA             recove… #> 11 Benito Redding     21 suspected m        50 2023-01-11 2023-01-13     died    #> 12 Erin Payson        22 confirmed f         7 2023-01-11 NA             recove… #> # ℹ 4 more variables: date_outcome <date>, date_first_contact <date>, #> #   date_last_contact <date>, ct_value <dbl> #>  #>   // contacts #>  #> # A tibble: 21 × 8 #>    from   to      age sex   date_first_contact date_last_contact was_case status #>    <chr>  <chr> <int> <chr> <date>             <date>            <chr>    <chr>  #>  1 Munsi… Zach…    43 m     2022-12-30         2023-01-05        Y        case   #>  2 Munsi… Tae …     1 m     2022-12-30         2023-01-02        Y        case   #>  3 Zacha… Cari…    29 f     2022-12-27         2023-01-03        N        under… #>  4 Zacha… Abdu…    78 m     2022-12-29         2023-01-02        Y        case   #>  5 Tae W… Kate…    22 f     2023-01-02         2023-01-04        Y        case   #>  6 Tae W… Azza…    70 m     2022-12-31         2023-01-03        N        under… #>  7 Tae W… Lyns…    28 f     2023-01-04         2023-01-05        Y        case   #>  8 Abdul… Amaa…    37 f     2023-01-10         2023-01-10        N        under… #>  9 Katel… Lili…    61 f     2023-01-02         2023-01-06        N        under… #> 10 Lynse… Vlad…    46 m     2023-01-07         2023-01-08        Y        case   #> # ℹ 11 more rows plot(epicontacts)"},{"path":"https://epiverse-trace.github.io/simulist/articles/vis-linelist.html","id":"subset-contact-network-to-transmission-network","dir":"Articles","previous_headings":"Visualising contact data","what":"Subset contact network to transmission network","title":"Visualising simulated data","text":"Base R Tidyverse","code":"outbreak$contacts <- outbreak$contacts[outbreak$contacts$was_case == \"Y\", ] library(dplyr) outbreak$contacts <- outbreak$contacts %>%   dplyr::filter(was_case == \"Y\")"},{"path":"https://epiverse-trace.github.io/simulist/articles/vis-linelist.html","id":"section-1","dir":"Articles","previous_headings":"","what":"Visualising simulated data","title":"Visualising simulated data","text":"Transmission chain infectious disease outbreak. includes individuals infected, including confirmed, probable suspected cases.","code":"head(outbreak$linelist) #>   id           case_name case_type sex age date_onset date_admission   outcome #> 1  1    Munsif al-Demian suspected   m  35 2023-01-01           <NA> recovered #> 2  2       Zachary Nault confirmed   m  43 2023-01-01     2023-01-08 recovered #> 3  3      Tae Woo Ralpho confirmed   m   1 2023-01-02           <NA> recovered #> 4  5 Abdul Kader el-Diab suspected   m  78 2023-01-05     2023-01-06      died #> 5  6      Katelyn Catlin confirmed   f  22 2023-01-02     2023-01-29      died #> 6  8        Lynsey Duron confirmed   f  28 2023-01-04           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2022-12-30        2023-01-05     25.3 #> 3         <NA>         2022-12-30        2023-01-02     25.8 #> 4   2023-01-25         2022-12-29        2023-01-02       NA #> 5   2023-01-11         2023-01-02        2023-01-04     24.9 #> 6         <NA>         2023-01-04        2023-01-05     24.5 head(outbreak$contacts) #>               from                  to age sex date_first_contact #> 1 Munsif al-Demian       Zachary Nault  43   m         2022-12-30 #> 2 Munsif al-Demian      Tae Woo Ralpho   1   m         2022-12-30 #> 3    Zachary Nault Abdul Kader el-Diab  78   m         2022-12-29 #> 4   Tae Woo Ralpho      Katelyn Catlin  22   f         2023-01-02 #> 5   Tae Woo Ralpho        Lynsey Duron  28   f         2023-01-04 #> 6     Lynsey Duron    Vladimir Sanchez  46   m         2023-01-07 #>   date_last_contact was_case status #> 1        2023-01-05        Y   case #> 2        2023-01-02        Y   case #> 3        2023-01-02        Y   case #> 4        2023-01-04        Y   case #> 5        2023-01-05        Y   case #> 6        2023-01-08        Y   case epicontacts <- make_epicontacts(   linelist = outbreak$linelist,   contacts = outbreak$contacts,   id = \"case_name\",   from = \"from\",   to = \"to\",   directed = TRUE ) epicontacts #>  #> /// Epidemiological Contacts // #>  #>   // class: epicontacts #>   // 12 cases in linelist; 11 contacts;  directed  #>  #>   // linelist #>  #> # A tibble: 12 × 12 #>    id               id.1 case_type sex     age date_onset date_admission outcome #>    <chr>           <int> <chr>     <chr> <int> <date>     <date>         <chr>   #>  1 Munsif al-Demi…     1 suspected m        35 2023-01-01 NA             recove… #>  2 Zachary Nault       2 confirmed m        43 2023-01-01 2023-01-08     recove… #>  3 Tae Woo Ralpho      3 confirmed m         1 2023-01-02 NA             recove… #>  4 Abdul Kader el…     5 suspected m        78 2023-01-05 2023-01-06     died    #>  5 Katelyn Catlin      6 confirmed f        22 2023-01-02 2023-01-29     died    #>  6 Lynsey Duron        8 confirmed f        28 2023-01-04 NA             recove… #>  7 Vladimir Sanch…    11 confirmed m        46 2023-01-04 NA             recove… #>  8 Jacy Cousins       12 confirmed f        67 2023-01-06 NA             recove… #>  9 Anushkaran Ken…    13 confirmed m        86 2023-01-07 NA             recove… #> 10 Katja Muetz        19 probable  f        56 2023-01-09 NA             recove… #> 11 Benito Redding     21 suspected m        50 2023-01-11 2023-01-13     died    #> 12 Erin Payson        22 confirmed f         7 2023-01-11 NA             recove… #> # ℹ 4 more variables: date_outcome <date>, date_first_contact <date>, #> #   date_last_contact <date>, ct_value <dbl> #>  #>   // contacts #>  #> # A tibble: 11 × 8 #>    from   to      age sex   date_first_contact date_last_contact was_case status #>    <chr>  <chr> <int> <chr> <date>             <date>            <chr>    <chr>  #>  1 Munsi… Zach…    43 m     2022-12-30         2023-01-05        Y        case   #>  2 Munsi… Tae …     1 m     2022-12-30         2023-01-02        Y        case   #>  3 Zacha… Abdu…    78 m     2022-12-29         2023-01-02        Y        case   #>  4 Tae W… Kate…    22 f     2023-01-02         2023-01-04        Y        case   #>  5 Tae W… Lyns…    28 f     2023-01-04         2023-01-05        Y        case   #>  6 Lynse… Vlad…    46 m     2023-01-07         2023-01-08        Y        case   #>  7 Lynse… Jacy…    67 f     2023-01-04         2023-01-07        Y        case   #>  8 Lynse… Anus…    86 m     2023-01-03         2023-01-06        Y        case   #>  9 Anush… Katj…    56 f     2023-01-12         2023-01-15        Y        case   #> 10 Anush… Beni…    50 m     2023-01-07         2023-01-09        Y        case   #> 11 Katja… Erin…     7 f     2023-01-08         2023-01-10        Y        case plot(epicontacts)"},{"path":"https://epiverse-trace.github.io/simulist/articles/vis-linelist.html","id":"visualising-other-line-list-information","dir":"Articles","previous_headings":"","what":"Visualising other line list information","title":"Visualising simulated data","text":"aspects line list data can plotted like added vignette please make issue pull request.","code":""},{"path":"https://epiverse-trace.github.io/simulist/articles/wrangling-linelist.html","id":"simulate-an-outbreak","dir":"Articles","previous_headings":"","what":"Simulate an outbreak","title":"Wrangling simulated outbreak data","text":"simulate outbreak use sim_outbreak() function {simulist} R package. unfamiliar {simulist} package sim_outbreak() function Get Started vignette great place start. First load data required outbreak simulation. Data epidemiological parameters distributions read {epiparameter} R package. seed set ensure output vignette consistent. using {simulist}, setting seed required unless need simulate line list multiple times.","code":"# create contact distribution (not available from {epiparameter} database) contact_distribution <- epiparameter(   disease = \"COVID-19\",   epi_name = \"contact distribution\",   prob_distribution = create_prob_distribution(     prob_distribution = \"pois\",     prob_distribution_params = c(mean = 2)   ) ) #> Citation cannot be created as author, year, journal or title is missing  # create infectious period (not available from {epiparameter} database) infectious_period <- epiparameter(   disease = \"COVID-19\",   epi_name = \"infectious period\",   prob_distribution = create_prob_distribution(     prob_distribution = \"gamma\",     prob_distribution_params = c(shape = 1, scale = 1)   ) ) #> Citation cannot be created as author, year, journal or title is missing  # get onset to hospital admission from {epiparameter} database onset_to_hosp <- epiparameter_db(   disease = \"COVID-19\",   epi_name = \"onset to hospitalisation\",   single_epiparameter = TRUE ) #> Using Linton N, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov A, Jung S, Yuan #> B, Kinoshita R, Nishiura H (2020). \"Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.\" _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the citation use the 'get_citation' function  # get onset to death from {epiparameter} database onset_to_death <- epiparameter_db(   disease = \"COVID-19\",   epi_name = \"onset to death\",   single_epiparameter = TRUE ) #> Using Linton N, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov A, Jung S, Yuan #> B, Kinoshita R, Nishiura H (2020). \"Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.\" _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the citation use the 'get_citation' function set.seed(123) outbreak <- sim_outbreak(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death ) linelist <- outbreak$linelist contacts <- outbreak$contacts"},{"path":"https://epiverse-trace.github.io/simulist/articles/wrangling-linelist.html","id":"removing-a-line-list-column","dir":"Articles","previous_headings":"","what":"Removing a line list column","title":"Wrangling simulated outbreak data","text":"every column simulated line list may required use case hand. example remove $ct_value column. instance, wanted simulate outbreak laboratory testing (e.g Polymerase chain reaction, PCR, testing) available thus Cycle threshold (Ct) value known confirmed cases. Tidyverse Base R","code":"# remove column by name linelist %>%   select(!ct_value) #>    id         case_name case_type sex age date_onset date_admission   outcome #> 1   1       Rafael Diaz confirmed   m  39 2023-01-01           <NA> recovered #> 2   3   Fabian Griffith confirmed   m  90 2023-01-01           <NA> recovered #> 3   4      Annabelle Vu  probable   f   9 2023-01-01     2023-01-07 recovered #> 4   5          Emily Fu confirmed   f  71 2023-01-01     2023-01-01      died #> 5   6     Kirsten Barna suspected   f  48 2023-01-02           <NA> recovered #> 6   7    Rajab el-Badie suspected   m  77 2023-01-01           <NA> recovered #> 7   8 Lorraina Hofbauer suspected   f  83 2023-01-01           <NA> recovered #> 8   9      Joseph Wells confirmed   m  56 2023-01-01           <NA> recovered #> 9  10     Kevin Lacsina suspected   m  39 2023-01-01           <NA> recovered #> 10 14     Lauren Herzog confirmed   f  30 2023-01-01           <NA> recovered #> 11 16   Aasima el-Latif confirmed   f  16 2023-01-02     2023-01-02 recovered #> 12 21         Sarah Abo  probable   f  20 2023-01-02           <NA> recovered #> 13 24    Christian Knox suspected   m  52 2023-01-02           <NA> recovered #>    date_outcome date_first_contact date_last_contact #> 1          <NA>               <NA>              <NA> #> 2          <NA>         2022-12-31        2023-01-03 #> 3          <NA>         2022-12-29        2023-01-02 #> 4    2023-02-24         2023-01-02        2023-01-07 #> 5          <NA>         2022-12-30        2023-01-03 #> 6          <NA>         2022-12-26        2023-01-02 #> 7          <NA>         2023-01-04        2023-01-07 #> 8          <NA>         2023-01-03        2023-01-05 #> 9          <NA>         2022-12-31        2023-01-02 #> 10         <NA>         2023-01-01        2023-01-03 #> 11         <NA>         2023-01-02        2023-01-03 #> 12         <NA>         2023-01-01        2023-01-03 #> 13         <NA>         2023-01-04        2023-01-06 # remove column by numeric column indexing # ct_value is column 12 (the last column) linelist[, -12] #>    id         case_name case_type sex age date_onset date_admission   outcome #> 1   1       Rafael Diaz confirmed   m  39 2023-01-01           <NA> recovered #> 2   3   Fabian Griffith confirmed   m  90 2023-01-01           <NA> recovered #> 3   4      Annabelle Vu  probable   f   9 2023-01-01     2023-01-07 recovered #> 4   5          Emily Fu confirmed   f  71 2023-01-01     2023-01-01      died #> 5   6     Kirsten Barna suspected   f  48 2023-01-02           <NA> recovered #> 6   7    Rajab el-Badie suspected   m  77 2023-01-01           <NA> recovered #> 7   8 Lorraina Hofbauer suspected   f  83 2023-01-01           <NA> recovered #> 8   9      Joseph Wells confirmed   m  56 2023-01-01           <NA> recovered #> 9  10     Kevin Lacsina suspected   m  39 2023-01-01           <NA> recovered #> 10 14     Lauren Herzog confirmed   f  30 2023-01-01           <NA> recovered #> 11 16   Aasima el-Latif confirmed   f  16 2023-01-02     2023-01-02 recovered #> 12 21         Sarah Abo  probable   f  20 2023-01-02           <NA> recovered #> 13 24    Christian Knox suspected   m  52 2023-01-02           <NA> recovered #>    date_outcome date_first_contact date_last_contact #> 1          <NA>               <NA>              <NA> #> 2          <NA>         2022-12-31        2023-01-03 #> 3          <NA>         2022-12-29        2023-01-02 #> 4    2023-02-24         2023-01-02        2023-01-07 #> 5          <NA>         2022-12-30        2023-01-03 #> 6          <NA>         2022-12-26        2023-01-02 #> 7          <NA>         2023-01-04        2023-01-07 #> 8          <NA>         2023-01-03        2023-01-05 #> 9          <NA>         2022-12-31        2023-01-02 #> 10         <NA>         2023-01-01        2023-01-03 #> 11         <NA>         2023-01-02        2023-01-03 #> 12         <NA>         2023-01-01        2023-01-03 #> 13         <NA>         2023-01-04        2023-01-06  # remove column by column name linelist[, colnames(linelist) != \"ct_value\"] #>    id         case_name case_type sex age date_onset date_admission   outcome #> 1   1       Rafael Diaz confirmed   m  39 2023-01-01           <NA> recovered #> 2   3   Fabian Griffith confirmed   m  90 2023-01-01           <NA> recovered #> 3   4      Annabelle Vu  probable   f   9 2023-01-01     2023-01-07 recovered #> 4   5          Emily Fu confirmed   f  71 2023-01-01     2023-01-01      died #> 5   6     Kirsten Barna suspected   f  48 2023-01-02           <NA> recovered #> 6   7    Rajab el-Badie suspected   m  77 2023-01-01           <NA> recovered #> 7   8 Lorraina Hofbauer suspected   f  83 2023-01-01           <NA> recovered #> 8   9      Joseph Wells confirmed   m  56 2023-01-01           <NA> recovered #> 9  10     Kevin Lacsina suspected   m  39 2023-01-01           <NA> recovered #> 10 14     Lauren Herzog confirmed   f  30 2023-01-01           <NA> recovered #> 11 16   Aasima el-Latif confirmed   f  16 2023-01-02     2023-01-02 recovered #> 12 21         Sarah Abo  probable   f  20 2023-01-02           <NA> recovered #> 13 24    Christian Knox suspected   m  52 2023-01-02           <NA> recovered #>    date_outcome date_first_contact date_last_contact #> 1          <NA>               <NA>              <NA> #> 2          <NA>         2022-12-31        2023-01-03 #> 3          <NA>         2022-12-29        2023-01-02 #> 4    2023-02-24         2023-01-02        2023-01-07 #> 5          <NA>         2022-12-30        2023-01-03 #> 6          <NA>         2022-12-26        2023-01-02 #> 7          <NA>         2023-01-04        2023-01-07 #> 8          <NA>         2023-01-03        2023-01-05 #> 9          <NA>         2022-12-31        2023-01-02 #> 10         <NA>         2023-01-01        2023-01-03 #> 11         <NA>         2023-01-02        2023-01-03 #> 12         <NA>         2023-01-01        2023-01-03 #> 13         <NA>         2023-01-04        2023-01-06  # remove column by assigning it to NULL linelist$ct_value <- NULL linelist #>    id         case_name case_type sex age date_onset date_admission   outcome #> 1   1       Rafael Diaz confirmed   m  39 2023-01-01           <NA> recovered #> 2   3   Fabian Griffith confirmed   m  90 2023-01-01           <NA> recovered #> 3   4      Annabelle Vu  probable   f   9 2023-01-01     2023-01-07 recovered #> 4   5          Emily Fu confirmed   f  71 2023-01-01     2023-01-01      died #> 5   6     Kirsten Barna suspected   f  48 2023-01-02           <NA> recovered #> 6   7    Rajab el-Badie suspected   m  77 2023-01-01           <NA> recovered #> 7   8 Lorraina Hofbauer suspected   f  83 2023-01-01           <NA> recovered #> 8   9      Joseph Wells confirmed   m  56 2023-01-01           <NA> recovered #> 9  10     Kevin Lacsina suspected   m  39 2023-01-01           <NA> recovered #> 10 14     Lauren Herzog confirmed   f  30 2023-01-01           <NA> recovered #> 11 16   Aasima el-Latif confirmed   f  16 2023-01-02     2023-01-02 recovered #> 12 21         Sarah Abo  probable   f  20 2023-01-02           <NA> recovered #> 13 24    Christian Knox suspected   m  52 2023-01-02           <NA> recovered #>    date_outcome date_first_contact date_last_contact #> 1          <NA>               <NA>              <NA> #> 2          <NA>         2022-12-31        2023-01-03 #> 3          <NA>         2022-12-29        2023-01-02 #> 4    2023-02-24         2023-01-02        2023-01-07 #> 5          <NA>         2022-12-30        2023-01-03 #> 6          <NA>         2022-12-26        2023-01-02 #> 7          <NA>         2023-01-04        2023-01-07 #> 8          <NA>         2023-01-03        2023-01-05 #> 9          <NA>         2022-12-31        2023-01-02 #> 10         <NA>         2023-01-01        2023-01-03 #> 11         <NA>         2023-01-02        2023-01-03 #> 12         <NA>         2023-01-01        2023-01-03 #> 13         <NA>         2023-01-04        2023-01-06"},{"path":[]},{"path":"https://epiverse-trace.github.io/simulist/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joshua W. Lambert. Author, maintainer, copyright holder. Carmen Tamayo. Author. Hugo Gruson. Contributor, reviewer. Pratik R. Gupte. Contributor, reviewer. Adam Kucharski. Reviewer. Chris Hartgerink. Reviewer.","code":""},{"path":"https://epiverse-trace.github.io/simulist/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lambert J, Tamayo C (2024). simulist: Simulate Disease Outbreak Line List Contacts Data. doi:10.5281/zenodo.10471458, https://epiverse-trace.github.io/simulist/.","code":"@Manual{,   title = {simulist: Simulate Disease Outbreak Line List and Contacts Data},   author = {Joshua W. Lambert and Carmen Tamayo},   year = {2024},   doi = {10.5281/zenodo.10471458},   url = {https://epiverse-trace.github.io/simulist/}, }"},{"path":"https://epiverse-trace.github.io/simulist/index.html","id":"simulist-simulate-line-list-data-","dir":"","previous_headings":"","what":"Simulate Disease Outbreak Line List and Contacts Data","title":"Simulate Disease Outbreak Line List and Contacts Data","text":"simulist R package simulate individual-level infectious disease outbreak data, including line lists contact tracing data. can often useful synthetic datasets like available demonstrating outbreak analytics techniques testing new analysis methods. simulist developed Centre Mathematical Modelling Infectious Diseases London School Hygiene Tropical Medicine part Epiverse-TRACE.","code":""},{"path":"https://epiverse-trace.github.io/simulist/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key features","title":"Simulate Disease Outbreak Line List and Contacts Data","text":"simulist allows simulate realistic line list contact tracing data, : ⏳ Parameterised epidemiological delay distributions 🏥 Population-wide age-stratified hospitalisation death risks 📊 Uniform age-structured populations 📈 Constant time-varying case fatality risk 📋 Customisable probability case types contact tracing follow-","code":""},{"path":"https://epiverse-trace.github.io/simulist/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simulate Disease Outbreak Line List and Contacts Data","text":"can install development version simulist GitHub :","code":"# check whether {pak} is installed if(!require(\"pak\")) install.packages(\"pak\") pak::pak(\"epiverse-trace/simulist\")"},{"path":"https://epiverse-trace.github.io/simulist/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Simulate Disease Outbreak Line List and Contacts Data","text":"line list can simulated calling sim_linelist(). function provides sensible defaults quickly generate epidemiologically valid data set. However, simulate realistic line list using epidemiological parameters estimated infectious disease outbreak can use previously estimated epidemiological parameters. can epiparameter R package available, epiparameter database yet (contact distribution COVID-19) can define . define contact distribution, period infectiousness, onset--hospitalisation delay, onset--death delay. simulate line list COVID-19 Poisson contact distribution mean number contacts 2 probability infection per contact 0.5, use sim_linelist() function. mean number contacts probability infection determine outbreak reproduction number, resulting reproduction number around one means likely get reasonably sized outbreak (10 - 1,000 cases, varying due stochastic simulation). Warning: reproduction number simulation results contact distribution (contact_distribution) probability infection (prob_infection); number infections binomial sample number contacts case probability infection (.e. sampled) given prob_infection. average number secondary infections primary case greater 1 can lead outbreak becoming extremely large. currently depletion susceptible individuals simulation model, maximum outbreak size (second element vector supplied outbreak_size argument) can used return line list early without producing excessively large data set. example, line list simulated using default values (see ?sim_linelist). default hospitalisation risk assumed 0.2 (.e. 20% probability infected individual becomes hospitalised) start date outbreak 1st January 2023. modify either , can specify function. simulate table contacts cases (.e. reflect contact tracing dataset) can use parameters defined example . line list contacts table required, can jointly simulated using sim_outbreak() function. uses inputs sim_linelist() sim_contacts() produce line list contacts table outbreak (arguments also default settings functions).","code":"library(simulist) set.seed(1) linelist <- sim_linelist() head(linelist) #>   id               case_name case_type sex age date_onset date_admission #> 1  1    Marquione Currington suspected   m  59 2023-01-01     2023-01-09 #> 2  2      Ghaaliba el-Hassen  probable   f  90 2023-01-01           <NA> #> 3  3 Leslie Morales-Gonzalez  probable   f   4 2023-01-02           <NA> #> 4  5        Labeeb el-Hariri confirmed   m  29 2023-01-04           <NA> #> 5  6             Carla Moore confirmed   f  14 2023-01-05     2023-01-09 #> 6  7      Saabiqa al-Hammoud  probable   f  85 2023-01-06     2023-01-08 #>     outcome date_outcome date_first_contact date_last_contact ct_value #> 1      died   2023-01-13               <NA>              <NA>       NA #> 2 recovered         <NA>         2022-12-31        2023-01-05       NA #> 3 recovered         <NA>         2022-12-30        2023-01-01       NA #> 4 recovered         <NA>         2023-01-05        2023-01-05     24.0 #> 5      died   2023-01-23         2023-01-07        2023-01-08     27.1 #> 6 recovered         <NA>         2023-01-03        2023-01-06       NA library(epiparameter) # create COVID-19 contact distribution contact_distribution <- epiparameter::epiparameter(   disease = \"COVID-19\",    epi_name = \"contact distribution\",    prob_distribution = create_prob_distribution(     prob_distribution = \"pois\",     prob_distribution_params = c(mean = 2)   ) ) #> Citation cannot be created as author, year, journal or title is missing  # create COVID-19 infectious period infectious_period <- epiparameter::epiparameter(   disease = \"COVID-19\",   epi_name = \"infectious period\",   prob_distribution = create_prob_distribution(     prob_distribution = \"gamma\",     prob_distribution_params = c(shape = 1, scale = 1)   ) ) #> Citation cannot be created as author, year, journal or title is missing  # get onset to hospital admission from {epiparameter} database onset_to_hosp <- epiparameter::epiparameter_db(   disease = \"COVID-19\",   epi_name = \"onset to hospitalisation\",   single_epiparameter = TRUE ) #> Using Linton N, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov A, Jung S, Yuan #> B, Kinoshita R, Nishiura H (2020). \"Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.\" _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the citation use the 'get_citation' function  # get onset to death from {epiparameter} database onset_to_death <- epiparameter::epiparameter_db(   disease = \"COVID-19\",   epi_name = \"onset to death\",   single_epiparameter = TRUE ) #> Using Linton N, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov A, Jung S, Yuan #> B, Kinoshita R, Nishiura H (2020). \"Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.\" _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the citation use the 'get_citation' function set.seed(1) linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death ) head(linelist) #>   id       case_name case_type sex age date_onset date_admission   outcome #> 1  1 Wajdi al-Demian  probable   m  35 2023-01-01           <NA> recovered #> 2  2   Raaid el-Diab confirmed   m  43 2023-01-01     2023-01-07 recovered #> 3  3  Nickolas Nault suspected   m   1 2023-01-01           <NA> recovered #> 4  5     Hee Kennedy confirmed   m  78 2023-01-01     2023-01-03      died #> 5  6     Hope Arshad suspected   f  22 2023-01-01     2023-01-28      died #> 6  8  Shanta Holiday  probable   f  28 2023-01-01           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2022-12-30        2023-01-05     23.2 #> 3         <NA>         2022-12-30        2023-01-02       NA #> 4   2023-01-21         2022-12-29        2023-01-02     25.2 #> 5   2023-01-10         2023-01-01        2023-01-03       NA #> 6         <NA>         2023-01-03        2023-01-04       NA linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_risk = 0.01,   outbreak_start_date = as.Date(\"2019-12-01\") ) head(linelist) #>   id          case_name case_type sex age date_onset date_admission   outcome #> 1  1      Robert Wanzek suspected   m  80 2019-12-01           <NA> recovered #> 2  2           Kacy Kim  probable   f  85 2019-12-01           <NA> recovered #> 3  4    Jade Goldsberry  probable   f  76 2019-12-01           <NA> recovered #> 4  8    Brittany Brooks confirmed   f  12 2019-12-01           <NA>      died #> 5 11 Fat'hiyaa al-Zafar suspected   f  50 2019-12-01           <NA> recovered #> 6 14   Desirae Carranza  probable   f  54 2019-12-01           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2019-12-04        2019-12-06       NA #> 3         <NA>         2019-11-29        2019-12-03       NA #> 4   2019-12-17         2019-12-05        2019-12-05     26.4 #> 5         <NA>         2019-12-03        2019-12-05       NA #> 6         <NA>         2019-11-30        2019-12-02       NA contacts <- sim_contacts(   contact_distribution = contact_distribution,   infectious_period = infectious_period,    prob_infection = 0.5 ) head(contacts) #>            from                 to age sex date_first_contact date_last_contact #> 1  Jada Cardona      Tyray Jackson  50   m         2023-01-03        2023-01-04 #> 2 Tyray Jackson        Karol Alcon   4   f         2023-01-02        2023-01-03 #> 3 Tyray Jackson Hishaam al-Khawaja  82   m         2022-12-31        2023-01-03 #> 4 Tyray Jackson Jessica Cunningham  64   f         2023-01-04        2023-01-05 #> 5 Tyray Jackson      Danyell Ricks  12   f         2023-01-03        2023-01-05 #> 6   Karol Alcon    Thalia Williams  22   f         2023-01-05        2023-01-07 #>   was_case         status #> 1        Y           case #> 2        Y           case #> 3        Y           case #> 4        N under_followup #> 5        Y           case #> 6        Y           case outbreak <- sim_outbreak(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death ) head(outbreak$linelist) #>   id          case_name case_type sex age date_onset date_admission   outcome #> 1  1   Nicholas Vasquez suspected   m  78 2023-01-01           <NA> recovered #> 2  3  Fawqiyya al-Hatem confirmed   f   7 2023-01-01           <NA> recovered #> 3  4  Eun Churelchuluun  probable   f  82 2023-01-01     2023-01-09      died #> 4  5 Haajara el-Bacchus  probable   f  34 2023-01-01           <NA> recovered #> 5 10     Andrew Gyorkos confirmed   m  57 2023-01-01           <NA> recovered #> 6 11    Maria Navarette confirmed   f  16 2023-01-01     2023-01-08 recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2022-12-31        2023-01-03     23.5 #> 3   2023-01-11         2023-01-01        2023-01-03       NA #> 4         <NA>         2022-12-30        2023-01-02       NA #> 5         <NA>         2022-12-30        2023-01-04     21.9 #> 6         <NA>         2023-01-01        2023-01-03     25.8 head(outbreak$contacts) #>                from                 to age sex date_first_contact #> 1  Nicholas Vasquez     Angelita Smith  50   f         2022-12-31 #> 2  Nicholas Vasquez  Fawqiyya al-Hatem   7   f         2022-12-31 #> 3  Nicholas Vasquez  Eun Churelchuluun  82   f         2023-01-01 #> 4  Nicholas Vasquez Haajara el-Bacchus  34   f         2022-12-30 #> 5  Nicholas Vasquez Aaron Bhattacharya  83   m         2023-01-03 #> 6 Fawqiyya al-Hatem         Anna Zhang  36   f         2022-12-29 #>   date_last_contact was_case           status #> 1        2023-01-04        N lost_to_followup #> 2        2023-01-03        Y             case #> 3        2023-01-03        Y             case #> 4        2023-01-02        Y             case #> 5        2023-01-05        N   under_followup #> 6        2023-01-02        N   under_followup"},{"path":"https://epiverse-trace.github.io/simulist/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"Simulate Disease Outbreak Line List and Contacts Data","text":"report bug please open issue.","code":""},{"path":"https://epiverse-trace.github.io/simulist/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Simulate Disease Outbreak Line List and Contacts Data","text":"Contributions simulist welcomed. Please follow package contributing guide.","code":""},{"path":"https://epiverse-trace.github.io/simulist/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Simulate Disease Outbreak Line List and Contacts Data","text":"Please note simulist project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://epiverse-trace.github.io/simulist/index.html","id":"citing-this-package","dir":"","previous_headings":"","what":"Citing this package","title":"Simulate Disease Outbreak Line List and Contacts Data","text":"","code":"citation(\"simulist\") #> To cite package 'simulist' in publications use: #>  #>   Lambert J, Tamayo C (2024). _simulist: Simulate Disease Outbreak Line #>   List and Contacts Data_. doi:10.5281/zenodo.10471458 #>   <https://doi.org/10.5281/zenodo.10471458>, #>   <https://epiverse-trace.github.io/simulist/>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {simulist: Simulate Disease Outbreak Line List and Contacts Data}, #>     author = {Joshua W. Lambert and Carmen Tamayo}, #>     year = {2024}, #>     doi = {10.5281/zenodo.10471458}, #>     url = {https://epiverse-trace.github.io/simulist/}, #>   }"},{"path":"https://epiverse-trace.github.io/simulist/index.html","id":"complimentary-r-packages","dir":"","previous_headings":"","what":"Complimentary R packages","title":"Simulate Disease Outbreak Line List and Contacts Data","text":"📦 ↔︎️ 📦 {epiparameter} 📦 ↔︎️ 📦 {epicontacts} 📦 ↔︎️ 📦 {incidence2}","code":""},{"path":"https://epiverse-trace.github.io/simulist/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related projects","title":"Simulate Disease Outbreak Line List and Contacts Data","text":"project overlap R packages. list packages provide table features attributes present package help decide package appropriate use-case. cases packages dedicated simulating line list epidemiological data (e.g. {simulist}), others line list simulation one part wider R package (e.g. {EpiNow}). {LLsim} simulates line list data using stochastic SIR model fixed population observation reporting delays. Line list data generated two steps, 1) SIR model simulates outbreak (simpleSim()), 2) outbreak data converted line list (createLineList()). {simulacr} uses branching process model simulate cases contacts outbreak. simulates transmission infections using epidemiological R packages (epicontacts distcrete) parameterise plot simulated data. {epidict} package can used simulate outbreak data, including line lists, DHIS2 format, survey data mimics format Kobo, using function gen_data(). addition, MSF outbreak data available package data dictionaries Acute Jaundice Syndrome, Cholera, Measles Meningitis, accessible function msf_dict(). {EpiNow} - now deprecated R package - includes simulate_cases() generate_pseudo_linelist() functions generating line list data. generative-nowcasting set R scripts functions perform epidemiological nowcasting. functions simulate line list data within repository, repository (contain) R package. Functions can sourced. Cases simulated renewal process simulation can incorporate epidemiological delays ascertainment. another package functionality missing list added, package included list updated table reflect please contribute making issue pull request. packages related {simulist} simulate line list data. include: {outbreaks} R package containing library outbreak data sets, including line list data, variety past simulated outbreaks, e.g. Ebola MERS. {ringbp} R package simulate cases using individual-level transmission model contact tracing. {epichains} R package functionality simulate transmission chains using branching process model. {outbreaks} package useful data past outbreak data generic line list data required. {ringbp} {epichains} packages can used generate case data time can converted line list manual post-processing.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/as_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert <epiparameter> or NULL to function — as_function","title":"Convert <epiparameter> or NULL to function — as_function","text":"extension .function(), particularly epiparameter .function S3 method, added feature NULLs converted functions generate vector NAs behave equivalently generator functions output .function(..., func_type = \"generate\"). function already passed as_function returned unchanged. also input checking error input <epiparameter>, function (closure), onset--event distributions NULL.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/as_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert <epiparameter> or NULL to function — as_function","text":"","code":"as_function(x)"},{"path":"https://epiverse-trace.github.io/simulist/reference/as_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert <epiparameter> or NULL to function — as_function","text":"x named list containing either <epiparameter>, function NULL. Named list elements : \"contact_distribution\", \"infectious_period\", \"onset_to_hosp\", \"onset_to_death\", \"onset_to_recovery\".","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/as_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert <epiparameter> or NULL to function — as_function","text":"list functions.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/create_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of configuration settings for some details of sim_linelist() — create_config","title":"Create a list of configuration settings for some details of sim_linelist() — create_config","text":"Create list configuration settings details sim_linelist()","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/create_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of configuration settings for some details of sim_linelist() — create_config","text":"","code":"create_config(...)"},{"path":"https://epiverse-trace.github.io/simulist/reference/create_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of configuration settings for some details of sim_linelist() — create_config","text":"... <dynamic-dots> Named elements replace default settings. names match exactly elements replaced, otherwise function errors.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/create_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of configuration settings for some details of sim_linelist() — create_config","text":"list settings sim_linelist()","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/create_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a list of configuration settings for some details of sim_linelist() — create_config","text":"config argument sim_linelist() controls small details around time windows around infections (time first contact last contact infector), distribution Cycle threshold (Ct) value Real-time PCR quantitative PCR (qPCR) confirmed cases, network effect simulation, time-varying death risk. Accepted arguments defaults : last_contact_distribution = \"pois\" last_contact_distribution_params = c(lambda = 3) first_contact_distribution = \"pois\" first_contact_distribution_params = c(lambda = 3) ct_distribution = \"norm\" ct_distribution_params = c(mean = 25, sd = 2) network = \"adjusted\" time_varying_death_risk = NULL parameters warrant arguments sim_linelist() rarely need changed default setting. Therefore worth increasing number sim_linelist() arguments accommodate config argument keeps function signature simpler readable. accepted distributions : last_contact_distribution = c(\"pois\", \"geom\") first_contact_distribution = c(\"pois\", \"geom\") ct_distribution = c(\"norm\", \"lnorm\") network option controls whether sample contacts adjusted unadjusted contact distribution. Adjusted (default) sampling uses \\(q(n) \\sim (n + 1)p(n + 1)\\) \\(p(n)\\) probability density function distribution, e.g., Poisson Negative binomial. Unadjusted (network = \"unadjusted\") instead samples contacts directly probability distribution \\(p(n)\\).","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/create_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a list of configuration settings for some details of sim_linelist() — create_config","text":"","code":"# example with default configuration create_config() #> $last_contact_distribution #> [1] \"pois\" #>  #> $last_contact_distribution_params #> lambda  #>      3  #>  #> $first_contact_distribution #> [1] \"pois\" #>  #> $first_contact_distribution_params #> lambda  #>      3  #>  #> $ct_distribution #> [1] \"norm\" #>  #> $ct_distribution_params #> mean   sd  #>   25    2  #>  #> $network #> [1] \"adjusted\" #>  #> $time_varying_death_risk #> NULL #>   # example with customised Ct distribution create_config(   ct_distribution = \"lnorm\",   ct_distribution_params = c(meanlog = 2, sdlog = 1) ) #> $last_contact_distribution #> [1] \"pois\" #>  #> $last_contact_distribution_params #> lambda  #>      3  #>  #> $first_contact_distribution #> [1] \"pois\" #>  #> $first_contact_distribution_params #> lambda  #>      3  #>  #> $ct_distribution #> [1] \"lnorm\" #>  #> $ct_distribution_params #> meanlog   sdlog  #>       2       1  #>  #> $network #> [1] \"adjusted\" #>  #> $time_varying_death_risk #> NULL #>"},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-add_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Add line list event dates and case information as columns to infectious history <data.frame> — .add_cols","title":"Add line list event dates and case information as columns to infectious history <data.frame> — .add_cols","text":".add_*() functions add columns <data.frame> output .sim_network_bp(). <data.frame> supplied .data different number columns depending function called (.e. <data.frame> supplied .add_hospitalisation() columns <data.frame> supplied .add_date_contact() former function called later simulation). event date first contact, last contact .","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-add_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add line list event dates and case information as columns to infectious history <data.frame> — .add_cols","text":"","code":".add_date_contact(   .data,   contact_type = c(\"first\", \"last\"),   distribution = c(\"pois\", \"geom\"),   ...,   outbreak_start_date = NULL )  .add_hospitalisation(.data, onset_to_hosp, hosp_risk)  .add_outcome(   .data,   onset_to_death,   onset_to_recovery,   hosp_death_risk,   non_hosp_death_risk,   config )  .add_names(.data, anonymise = FALSE)  .add_ct(.data, distribution = c(\"norm\", \"lnorm\"), ...)"},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-add_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add line list event dates and case information as columns to infectious history <data.frame> — .add_cols","text":".data <data.frame> containing infectious history branching process simulation (.sim_network_bp()). contact_type character type contact, either first contact (\"first\"), last contact (\"last\"). distribution character name distribution, following base R convention distribution naming (e.g. Poisson pois). ... dots Extra arguments passed distribution function given distribution argument. outbreak_start_date date start outbreak. onset_to_hosp function <epiparameter> object onset--hospitalisation delay distribution. onset_to_hosp can also set NULL simulate hospitalisation (admission) dates. function can defined anonymous. function must return vector numerics length onset--hospitalisation delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 1.5 sdlog = 0.5. onset_to_hosp set NULL hosp_risk hosp_death_risk automatically set NULL manually specified. hosp_risk Either single numeric hospitalisation risk everyone population, <data.frame> age specific hospitalisation risks. Default 20% hospitalisation (0.2) entire population. onset_to_hosp argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. onset_to_death function <epiparameter> object onset--death delay distribution. onset_to_death can also set NULL simulate dates individuals died. function can defined anonymous. function must return vector numerics length onset--death delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 2.5 sdlog = 0.5. onset_to_death set NULL non_hosp_death_risk hosp_death_risk automatically set NULL manually specified. onset_to_recovery function <epiparameter> object onset--recovery delay distribution. onset_to_recovery can also NULL simulate dates individuals recovered. function can defined anonymous. function must return vector numerics length onset--recovery delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default NULL default cases recover get NA $date_outcome line list column. hosp_death_risk Either single numeric death risk hospitalised individuals across population, <data.frame> age specific hospitalised death risks Default 50% death risk hospitals (0.5) entire population. onset_to_death argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. hosp_death_risk can vary time specified time_varying_death_risk element config, see vignette(\"time-varying-cfr\", package = \"simulist\") information. non_hosp_death_risk Either single numeric death risk outside hospitals across population, <data.frame> age specific death risks outside hospitals. Default 5% death risk outside hospitals  (0.05) entire population. onset_to_death argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. non_hosp_death_risk can vary time specified time_varying_death_risk element config, see vignette(\"time-varying-cfr\", package = \"simulist\") information. config list settings adjust randomly sampled delays Ct values. See create_config() information. anonymise logical boolean whether case names anonymised. Default FALSE.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-add_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add line list event dates and case information as columns to infectious history <data.frame> — .add_cols","text":"<data.frame> one column input .data. Unless column heading already present data overwritten.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-anonymise.html","id":null,"dir":"Reference","previous_headings":"","what":"Anonymise names — .anonymise","title":"Anonymise names — .anonymise","text":"simple algorithm replace names alphanumeric string fixed number characters (.e. nchar()) specified string_len.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-anonymise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anonymise names — .anonymise","text":"","code":".anonymise(x, string_len = 10)"},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-anonymise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anonymise names — .anonymise","text":"x vector character strings. string_len single numeric specifying number alphanumeric characters use anonymising character string. Default 10.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-anonymise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anonymise names — .anonymise","text":"vector character strings equal length input.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_age_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if <data.frame> defining age structure of population is correct — .check_age_df","title":"Check if <data.frame> defining age structure of population is correct — .check_age_df","text":"Check <data.frame> defining age structure population correct","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_age_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if <data.frame> defining age structure of population is correct — .check_age_df","text":"","code":".check_age_df(x)"},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_age_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if <data.frame> defining age structure of population is correct — .check_age_df","text":"x <data.frame>.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_age_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if <data.frame> defining age structure of population is correct — .check_age_df","text":"<data.frame>, also called error side-effects input invalid.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_risk_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if <data.frame> defining age-stratified hospitalisation or death risk is correct — .check_risk_df","title":"Check if <data.frame> defining age-stratified hospitalisation or death risk is correct — .check_risk_df","text":"Check <data.frame> defining age-stratified hospitalisation death risk correct","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_risk_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if <data.frame> defining age-stratified hospitalisation or death risk is correct — .check_risk_df","text":"","code":".check_risk_df(x, age_range)"},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_risk_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if <data.frame> defining age-stratified hospitalisation or death risk is correct — .check_risk_df","text":"x <data.frame>.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_risk_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if <data.frame> defining age-stratified hospitalisation or death risk is correct — .check_risk_df","text":"<data.frame>, also called error side-effects input invalid.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_sim_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if arguments input to simulation function are valid — .check_sim_input","title":"Check if arguments input to simulation function are valid — .check_sim_input","text":"Check arguments input simulation function valid","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_sim_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if arguments input to simulation function are valid — .check_sim_input","text":"","code":".check_sim_input(   sim_type = c(\"linelist\", \"contacts\", \"outbreak\"),   contact_distribution,   infectious_period,   prob_infection,   outbreak_start_date,   outbreak_size,   onset_to_hosp = NULL,   onset_to_death = NULL,   onset_to_recovery = NULL,   anonymise = NULL,   case_type_probs = NULL,   contact_tracing_status_probs = NULL,   hosp_risk = NULL,   hosp_death_risk = NULL,   non_hosp_death_risk = NULL,   population_age = NULL )"},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_sim_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if arguments input to simulation function are valid — .check_sim_input","text":"sim_type character string specifying simulation function function called within. contact_distribution function <epiparameter> object generate number contacts per infection. function can defined anonymous. function must single argument form integer vector elements representing number contacts, return numeric vector element corresponds probability observing number contacts vector passed function. index numeric vector returned offset one corresponding probability observing number contacts, .e. first element output vector probability observing zero contacts, second element probability observing one contact, etc. <epiparameter> can provided. converted probability mass function internally. default anonymous function Poisson probability mass function (dpois()) mean (\\(\\lambda\\)) 2 contacts per infection. infectious_period function <epiparameter> object infectious period. defines duration becoming infectious longer infectious. simulation, individuals assumed become infectious immediately infected (latency period assumed zero). time intervals infected individual contacts assumed uniformly distributed within infectious period. Infectious periods must strictly positive. function can defined anonymous. function must return vector randomly generated real numbers representing sampled infectious periods. function must single argument, number random infectious periods generate. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 2 sdlog = 0.5. prob_infection single numeric probability secondary contact infected infected primary contact. outbreak_start_date date start outbreak. outbreak_size numeric vector length 2 defining minimum maximum number infected individuals simulated outbreak. Default c(10, 1e4), minimum outbreak size 10 infected individuals, maximum outbreak size 10,000 infected individuals. Either number can changed increase decrease maximum minimum outbreak size allow simulating larger smaller outbreaks. minimum outbreak size reached running simulation many iterations (internally) function errors, whereas maximum outbreak size exceeded function returns data early warning stating many cases contacts returned. onset_to_hosp function <epiparameter> object onset--hospitalisation delay distribution. onset_to_hosp can also set NULL simulate hospitalisation (admission) dates. function can defined anonymous. function must return vector numerics length onset--hospitalisation delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 1.5 sdlog = 0.5. onset_to_hosp set NULL hosp_risk hosp_death_risk automatically set NULL manually specified. onset_to_death function <epiparameter> object onset--death delay distribution. onset_to_death can also set NULL simulate dates individuals died. function can defined anonymous. function must return vector numerics length onset--death delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 2.5 sdlog = 0.5. onset_to_death set NULL non_hosp_death_risk hosp_death_risk automatically set NULL manually specified. onset_to_recovery function <epiparameter> object onset--recovery delay distribution. onset_to_recovery can also NULL simulate dates individuals recovered. function can defined anonymous. function must return vector numerics length onset--recovery delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default NULL default cases recover get NA $date_outcome line list column. anonymise logical boolean whether case names anonymised. Default FALSE. case_type_probs named numeric vector probability case type. names vector must \"suspected\", \"probable\", \"confirmed\". Values case type must sum one. contact_tracing_status_probs named numeric vector probability contact tracing status. names vector must \"under_followup\", \"lost_to_followup\", \"unknown\". Values contact tracing status must sum one. hosp_risk Either single numeric hospitalisation risk everyone population, <data.frame> age specific hospitalisation risks. Default 20% hospitalisation (0.2) entire population. onset_to_hosp argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. hosp_death_risk Either single numeric death risk hospitalised individuals across population, <data.frame> age specific hospitalised death risks Default 50% death risk hospitals (0.5) entire population. onset_to_death argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. hosp_death_risk can vary time specified time_varying_death_risk element config, see vignette(\"time-varying-cfr\", package = \"simulist\") information. non_hosp_death_risk Either single numeric death risk outside hospitals across population, <data.frame> age specific death risks outside hospitals. Default 5% death risk outside hospitals  (0.05) entire population. onset_to_death argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. non_hosp_death_risk can vary time specified time_varying_death_risk element config, see vignette(\"time-varying-cfr\", package = \"simulist\") information. population_age Either numeric vector two elements <data.frame> age structure population. Use numeric vector specific age range population, first element lower bound age range, second upper bound age range (inclusive, .e. [lower, upper]). <data.frame> age groups proportion population group. See details examples information.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_sim_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if arguments input to simulation function are valid — .check_sim_input","text":"Invisibly return sim_type character string. function called side-effects, error input invalid.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-check_sim_input.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if arguments input to simulation function are valid — .check_sim_input","text":"Arguments used simulation functions required given default value, arguments inputs simulation functions default NULL used. Defaults mentioned argument documentation default exported simulation function default checking function. function either default NULL.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-cross_check_sim_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross check the onset-to-hospitalisation or -death arguments are compatible with hospitalisation and death risks — .cross_check_sim_input","title":"Cross check the onset-to-hospitalisation or -death arguments are compatible with hospitalisation and death risks — .cross_check_sim_input","text":"two types cross-checking: onset--event distribution specified corresponding risk specified (.e. NULL) function error (stop()). onset--event distribution specified (.e. NULL) corresponding risk specified function throw warning (warning()). difference condition handling case onset--event NULL simulation can safely ignore corresponding risk, throwing warning, events. words, onset--hospitalisation specified, infected individuals go hospital date_admission column line list NAs. However, onset--event specified corresponding risk NULL proportion individuals infected hospitalised die calculated therefore simulation run. latter case cross-checking throws error.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-cross_check_sim_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross check the onset-to-hospitalisation or -death arguments are compatible with hospitalisation and death risks — .cross_check_sim_input","text":"","code":".cross_check_sim_input(   onset_to_hosp,   onset_to_death,   hosp_risk,   hosp_death_risk,   non_hosp_death_risk )"},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-cross_check_sim_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross check the onset-to-hospitalisation or -death arguments are compatible with hospitalisation and death risks — .cross_check_sim_input","text":"onset_to_hosp function <epiparameter> object onset--hospitalisation delay distribution. onset_to_hosp can also set NULL simulate hospitalisation (admission) dates. function can defined anonymous. function must return vector numerics length onset--hospitalisation delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 1.5 sdlog = 0.5. onset_to_hosp set NULL hosp_risk hosp_death_risk automatically set NULL manually specified. onset_to_death function <epiparameter> object onset--death delay distribution. onset_to_death can also set NULL simulate dates individuals died. function can defined anonymous. function must return vector numerics length onset--death delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 2.5 sdlog = 0.5. onset_to_death set NULL non_hosp_death_risk hosp_death_risk automatically set NULL manually specified. hosp_risk Either single numeric hospitalisation risk everyone population, <data.frame> age specific hospitalisation risks. Default 20% hospitalisation (0.2) entire population. onset_to_hosp argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. hosp_death_risk Either single numeric death risk hospitalised individuals across population, <data.frame> age specific hospitalised death risks Default 50% death risk hospitals (0.5) entire population. onset_to_death argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. hosp_death_risk can vary time specified time_varying_death_risk element config, see vignette(\"time-varying-cfr\", package = \"simulist\") information. non_hosp_death_risk Either single numeric death risk outside hospitals across population, <data.frame> age specific death risks outside hospitals. Default 5% death risk outside hospitals  (0.05) entire population. onset_to_death argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. non_hosp_death_risk can vary time specified time_varying_death_risk element config, see vignette(\"time-varying-cfr\", package = \"simulist\") information.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-cross_check_sim_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross check the onset-to-hospitalisation or -death arguments are compatible with hospitalisation and death risks — .cross_check_sim_input","text":"Invisibly return onset_to_hosp argument. function called side-effects, error warn input invalid.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sample_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample names using randomNames::randomNames() — .sample_names","title":"Sample names using randomNames::randomNames() — .sample_names","text":"Sample names specified sexes sampling replacement avoid exhausting number name sample..replacement = FALSE. duplicated names sampling need removed ensure individual unique name. order enough unique names, names required sampled randomNames(), level oversampling determined buffer_factor argument. buffer_factor high names sampled takes longer, buffer_factor low enough unique names sampled .sample_names() function need loop enough unique names.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sample_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample names using randomNames::randomNames() — .sample_names","text":"","code":".sample_names(.data, buffer_factor = 1.5)"},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sample_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample names using randomNames::randomNames() — .sample_names","text":".data <data.frame> containing infectious history branching process simulation (.sim_network_bp()). buffer_factor single numeric determining level oversampling (buffer) creating vector unique names randomNames().","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sample_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample names using randomNames::randomNames() — .sample_names","text":"character vector.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sim_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal simulation function called by the exported simulation functions within simulist — .sim_internal","title":"Internal simulation function called by the exported simulation functions within simulist — .sim_internal","text":"internal function simulates line list, sim_type \"contacts\" \"outbreak\" contacts table well.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sim_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal simulation function called by the exported simulation functions within simulist — .sim_internal","text":"","code":".sim_internal(   sim_type = c(\"linelist\", \"contacts\", \"outbreak\"),   contact_distribution,   infectious_period,   prob_infection,   onset_to_hosp = NULL,   onset_to_death = NULL,   onset_to_recovery = NULL,   hosp_risk = NULL,   hosp_death_risk = NULL,   non_hosp_death_risk = NULL,   outbreak_start_date,   anonymise = NULL,   outbreak_size,   population_age,   case_type_probs = NULL,   contact_tracing_status_probs = NULL,   config )"},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sim_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal simulation function called by the exported simulation functions within simulist — .sim_internal","text":"sim_type character string specifying simulation function function called within. contact_distribution function <epiparameter> object generate number contacts per infection. function can defined anonymous. function must single argument form integer vector elements representing number contacts, return numeric vector element corresponds probability observing number contacts vector passed function. index numeric vector returned offset one corresponding probability observing number contacts, .e. first element output vector probability observing zero contacts, second element probability observing one contact, etc. <epiparameter> can provided. converted probability mass function internally. default anonymous function Poisson probability mass function (dpois()) mean (\\(\\lambda\\)) 2 contacts per infection. infectious_period function <epiparameter> object infectious period. defines duration becoming infectious longer infectious. simulation, individuals assumed become infectious immediately infected (latency period assumed zero). time intervals infected individual contacts assumed uniformly distributed within infectious period. Infectious periods must strictly positive. function can defined anonymous. function must return vector randomly generated real numbers representing sampled infectious periods. function must single argument, number random infectious periods generate. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 2 sdlog = 0.5. prob_infection single numeric probability secondary contact infected infected primary contact. onset_to_hosp function <epiparameter> object onset--hospitalisation delay distribution. onset_to_hosp can also set NULL simulate hospitalisation (admission) dates. function can defined anonymous. function must return vector numerics length onset--hospitalisation delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 1.5 sdlog = 0.5. onset_to_hosp set NULL hosp_risk hosp_death_risk automatically set NULL manually specified. onset_to_death function <epiparameter> object onset--death delay distribution. onset_to_death can also set NULL simulate dates individuals died. function can defined anonymous. function must return vector numerics length onset--death delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 2.5 sdlog = 0.5. onset_to_death set NULL non_hosp_death_risk hosp_death_risk automatically set NULL manually specified. onset_to_recovery function <epiparameter> object onset--recovery delay distribution. onset_to_recovery can also NULL simulate dates individuals recovered. function can defined anonymous. function must return vector numerics length onset--recovery delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default NULL default cases recover get NA $date_outcome line list column. hosp_risk Either single numeric hospitalisation risk everyone population, <data.frame> age specific hospitalisation risks. Default 20% hospitalisation (0.2) entire population. onset_to_hosp argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. hosp_death_risk Either single numeric death risk hospitalised individuals across population, <data.frame> age specific hospitalised death risks Default 50% death risk hospitals (0.5) entire population. onset_to_death argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. hosp_death_risk can vary time specified time_varying_death_risk element config, see vignette(\"time-varying-cfr\", package = \"simulist\") information. non_hosp_death_risk Either single numeric death risk outside hospitals across population, <data.frame> age specific death risks outside hospitals. Default 5% death risk outside hospitals  (0.05) entire population. onset_to_death argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. non_hosp_death_risk can vary time specified time_varying_death_risk element config, see vignette(\"time-varying-cfr\", package = \"simulist\") information. outbreak_start_date date start outbreak. anonymise logical boolean whether case names anonymised. Default FALSE. outbreak_size numeric vector length 2 defining minimum maximum number infected individuals simulated outbreak. Default c(10, 1e4), minimum outbreak size 10 infected individuals, maximum outbreak size 10,000 infected individuals. Either number can changed increase decrease maximum minimum outbreak size allow simulating larger smaller outbreaks. minimum outbreak size reached running simulation many iterations (internally) function errors, whereas maximum outbreak size exceeded function returns data early warning stating many cases contacts returned. population_age Either numeric vector two elements <data.frame> age structure population. Use numeric vector specific age range population, first element lower bound age range, second upper bound age range (inclusive, .e. [lower, upper]). <data.frame> age groups proportion population group. See details examples information. case_type_probs named numeric vector probability case type. names vector must \"suspected\", \"probable\", \"confirmed\". Values case type must sum one. contact_tracing_status_probs named numeric vector probability contact tracing status. names vector must \"under_followup\", \"lost_to_followup\", \"unknown\". Values contact tracing status must sum one. config list settings adjust randomly sampled delays Ct values. See create_config() information.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sim_internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal simulation function called by the exported simulation functions within simulist — .sim_internal","text":"<data.frame> sim_type \"linelist\" \"contacts\", list two <data.frame>s sim_type \"outbreak\".","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sim_network_bp.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a random network branching process model with a probability of infection for each contact — .sim_network_bp","title":"Simulate a random network branching process model with a probability of infection for each contact — .sim_network_bp","text":"Simulate branching process infinite network contact distribution provides function sample number contacts individual simulation. contact infected probability infection. time contact assumed evenly distributed across infectious period infected individual, independent whether contact becomes infected.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sim_network_bp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a random network branching process model with a probability of infection for each contact — .sim_network_bp","text":"","code":".sim_network_bp(   contact_distribution,   infectious_period,   prob_infection,   max_outbreak_size,   config )"},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sim_network_bp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a random network branching process model with a probability of infection for each contact — .sim_network_bp","text":"contact_distribution function <epiparameter> object generate number contacts per infection. function can defined anonymous. function must single argument form integer vector elements representing number contacts, return numeric vector element corresponds probability observing number contacts vector passed function. index numeric vector returned offset one corresponding probability observing number contacts, .e. first element output vector probability observing zero contacts, second element probability observing one contact, etc. <epiparameter> can provided. converted probability mass function internally. default anonymous function Poisson probability mass function (dpois()) mean (\\(\\lambda\\)) 2 contacts per infection. infectious_period function <epiparameter> object infectious period. defines duration becoming infectious longer infectious. simulation, individuals assumed become infectious immediately infected (latency period assumed zero). time intervals infected individual contacts assumed uniformly distributed within infectious period. Infectious periods must strictly positive. function can defined anonymous. function must return vector randomly generated real numbers representing sampled infectious periods. function must single argument, number random infectious periods generate. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 2 sdlog = 0.5. prob_infection single numeric probability secondary contact infected infected primary contact. config list settings adjust randomly sampled delays Ct values. See create_config() information.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sim_network_bp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a random network branching process model with a probability of infection for each contact — .sim_network_bp","text":"<data.frame> contact transmission chain data.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/dot-sim_network_bp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate a random network branching process model with a probability of infection for each contact — .sim_network_bp","text":"contact distribution sampled takes network effect \\(q(n) \\sim (n + 1)p(n + 1)\\) \\(p(n)\\) probability density function distribution, e.g., Poisson Negative binomial. say, probability choosing contact random following contact chooses individuals probability proportional number contacts. plus one one contacts \"used\" infect person.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_contacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate contacts for an infectious disease outbreak — sim_contacts","title":"Simulate contacts for an infectious disease outbreak — sim_contacts","text":"Simulate contacts infectious disease outbreak","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_contacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate contacts for an infectious disease outbreak — sim_contacts","text":"","code":"sim_contacts(   contact_distribution = function(x) stats::dpois(x = x, lambda = 2),   infectious_period = function(x) stats::rlnorm(n = x, meanlog = 2, sdlog = 0.5),   prob_infection = 0.5,   outbreak_start_date = as.Date(\"2023-01-01\"),   anonymise = FALSE,   outbreak_size = c(10, 10000),   population_age = c(1, 90),   contact_tracing_status_probs = c(under_followup = 0.7, lost_to_followup = 0.2, unknown     = 0.1),   config = create_config() )"},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_contacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate contacts for an infectious disease outbreak — sim_contacts","text":"contact_distribution function <epiparameter> object generate number contacts per infection. function can defined anonymous. function must single argument form integer vector elements representing number contacts, return numeric vector element corresponds probability observing number contacts vector passed function. index numeric vector returned offset one corresponding probability observing number contacts, .e. first element output vector probability observing zero contacts, second element probability observing one contact, etc. <epiparameter> can provided. converted probability mass function internally. default anonymous function Poisson probability mass function (dpois()) mean (\\(\\lambda\\)) 2 contacts per infection. infectious_period function <epiparameter> object infectious period. defines duration becoming infectious longer infectious. simulation, individuals assumed become infectious immediately infected (latency period assumed zero). time intervals infected individual contacts assumed uniformly distributed within infectious period. Infectious periods must strictly positive. function can defined anonymous. function must return vector randomly generated real numbers representing sampled infectious periods. function must single argument, number random infectious periods generate. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 2 sdlog = 0.5. prob_infection single numeric probability secondary contact infected infected primary contact. outbreak_start_date date start outbreak. anonymise logical boolean whether case names anonymised. Default FALSE. outbreak_size numeric vector length 2 defining minimum maximum number infected individuals simulated outbreak. Default c(10, 1e4), minimum outbreak size 10 infected individuals, maximum outbreak size 10,000 infected individuals. Either number can changed increase decrease maximum minimum outbreak size allow simulating larger smaller outbreaks. minimum outbreak size reached running simulation many iterations (internally) function errors, whereas maximum outbreak size exceeded function returns data early warning stating many cases contacts returned. population_age Either numeric vector two elements <data.frame> age structure population. Use numeric vector specific age range population, first element lower bound age range, second upper bound age range (inclusive, .e. [lower, upper]). <data.frame> age groups proportion population group. See details examples information. contact_tracing_status_probs named numeric vector probability contact tracing status. names vector must \"under_followup\", \"lost_to_followup\", \"unknown\". Values contact tracing status must sum one. config list settings adjust randomly sampled delays Ct values. See create_config() information.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_contacts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate contacts for an infectious disease outbreak — sim_contacts","text":"contacts <data.frame>","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_contacts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate contacts for an infectious disease outbreak — sim_contacts","text":"Joshua W. Lambert, Carmen Tamayo","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_contacts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate contacts for an infectious disease outbreak — sim_contacts","text":"","code":"# quickly simulate contact tracing data using the function defaults contacts <- sim_contacts() head(contacts) #>                from             to age sex date_first_contact date_last_contact #> 1 Carissa Goldstein   Priya Nguyen  85   f         2022-12-29        2023-01-03 #> 2 Carissa Goldstein   Shamika Ward  32   f         2022-12-29        2023-01-01 #> 3 Carissa Goldstein      Dawn Dang  67   f         2022-12-31        2023-01-04 #> 4      Priya Nguyen Isaiah Wheaton  16   m         2023-01-05        2023-01-07 #> 5         Dawn Dang  Saif el-Hamid  71   m         2023-01-10        2023-01-11 #> 6         Dawn Dang     Ryan Rahat  10   m         2023-01-07        2023-01-09 #>   was_case  status #> 1        Y    case #> 2        N unknown #> 3        Y    case #> 4        Y    case #> 5        Y    case #> 6        Y    case  # to simulate more realistic contact tracing data load epiparameters from # {epiparameter} library(epiparameter) contact_distribution <- epiparameter(   disease = \"COVID-19\",   epi_name = \"contact distribution\",   prob_distribution = create_prob_distribution(     prob_distribution = \"pois\",     prob_distribution_params = c(mean = 2)   ) ) #> Citation cannot be created as author, year, journal or title is missing  infectious_period <- epiparameter(   disease = \"COVID-19\",   epi_name = \"infectious period\",   prob_distribution = create_prob_distribution(     prob_distribution = \"gamma\",     prob_distribution_params = c(shape = 1, scale = 1)   ) ) #> Citation cannot be created as author, year, journal or title is missing  contacts <- sim_contacts(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5 )"},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_linelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a line list — sim_linelist","title":"Simulate a line list — sim_linelist","text":"line list simulated using branching process parameterised epidemiological parameters.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_linelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a line list — sim_linelist","text":"","code":"sim_linelist(   contact_distribution = function(x) stats::dpois(x = x, lambda = 2),   infectious_period = function(x) stats::rlnorm(n = x, meanlog = 2, sdlog = 0.5),   prob_infection = 0.5,   onset_to_hosp = function(x) stats::rlnorm(n = x, meanlog = 1.5, sdlog = 0.5),   onset_to_death = function(x) stats::rlnorm(n = x, meanlog = 2.5, sdlog = 0.5),   onset_to_recovery = NULL,   hosp_risk = 0.2,   hosp_death_risk = 0.5,   non_hosp_death_risk = 0.05,   outbreak_start_date = as.Date(\"2023-01-01\"),   anonymise = FALSE,   outbreak_size = c(10, 10000),   population_age = c(1, 90),   case_type_probs = c(suspected = 0.2, probable = 0.3, confirmed = 0.5),   config = create_config() )"},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_linelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a line list — sim_linelist","text":"contact_distribution function <epiparameter> object generate number contacts per infection. function can defined anonymous. function must single argument form integer vector elements representing number contacts, return numeric vector element corresponds probability observing number contacts vector passed function. index numeric vector returned offset one corresponding probability observing number contacts, .e. first element output vector probability observing zero contacts, second element probability observing one contact, etc. <epiparameter> can provided. converted probability mass function internally. default anonymous function Poisson probability mass function (dpois()) mean (\\(\\lambda\\)) 2 contacts per infection. infectious_period function <epiparameter> object infectious period. defines duration becoming infectious longer infectious. simulation, individuals assumed become infectious immediately infected (latency period assumed zero). time intervals infected individual contacts assumed uniformly distributed within infectious period. Infectious periods must strictly positive. function can defined anonymous. function must return vector randomly generated real numbers representing sampled infectious periods. function must single argument, number random infectious periods generate. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 2 sdlog = 0.5. prob_infection single numeric probability secondary contact infected infected primary contact. onset_to_hosp function <epiparameter> object onset--hospitalisation delay distribution. onset_to_hosp can also set NULL simulate hospitalisation (admission) dates. function can defined anonymous. function must return vector numerics length onset--hospitalisation delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 1.5 sdlog = 0.5. onset_to_hosp set NULL hosp_risk hosp_death_risk automatically set NULL manually specified. onset_to_death function <epiparameter> object onset--death delay distribution. onset_to_death can also set NULL simulate dates individuals died. function can defined anonymous. function must return vector numerics length onset--death delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 2.5 sdlog = 0.5. onset_to_death set NULL non_hosp_death_risk hosp_death_risk automatically set NULL manually specified. onset_to_recovery function <epiparameter> object onset--recovery delay distribution. onset_to_recovery can also NULL simulate dates individuals recovered. function can defined anonymous. function must return vector numerics length onset--recovery delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default NULL default cases recover get NA $date_outcome line list column. hosp_risk Either single numeric hospitalisation risk everyone population, <data.frame> age specific hospitalisation risks. Default 20% hospitalisation (0.2) entire population. onset_to_hosp argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. hosp_death_risk Either single numeric death risk hospitalised individuals across population, <data.frame> age specific hospitalised death risks Default 50% death risk hospitals (0.5) entire population. onset_to_death argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. hosp_death_risk can vary time specified time_varying_death_risk element config, see vignette(\"time-varying-cfr\", package = \"simulist\") information. non_hosp_death_risk Either single numeric death risk outside hospitals across population, <data.frame> age specific death risks outside hospitals. Default 5% death risk outside hospitals  (0.05) entire population. onset_to_death argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. non_hosp_death_risk can vary time specified time_varying_death_risk element config, see vignette(\"time-varying-cfr\", package = \"simulist\") information. outbreak_start_date date start outbreak. anonymise logical boolean whether case names anonymised. Default FALSE. outbreak_size numeric vector length 2 defining minimum maximum number infected individuals simulated outbreak. Default c(10, 1e4), minimum outbreak size 10 infected individuals, maximum outbreak size 10,000 infected individuals. Either number can changed increase decrease maximum minimum outbreak size allow simulating larger smaller outbreaks. minimum outbreak size reached running simulation many iterations (internally) function errors, whereas maximum outbreak size exceeded function returns data early warning stating many cases contacts returned. population_age Either numeric vector two elements <data.frame> age structure population. Use numeric vector specific age range population, first element lower bound age range, second upper bound age range (inclusive, .e. [lower, upper]). <data.frame> age groups proportion population group. See details examples information. case_type_probs named numeric vector probability case type. names vector must \"suspected\", \"probable\", \"confirmed\". Values case type must sum one. config list settings adjust randomly sampled delays Ct values. See create_config() information.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_linelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a line list — sim_linelist","text":"line list <data.frame>","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_linelist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate a line list — sim_linelist","text":"age-stratified hospitalised death risks <data.frame> need passed hosp_risk /hosp_death_risk arguments. <data.frame> two columns: age_limit: column one numeric per cell lower bound (minimum) age age group (inclusive). risk: column one numeric per cell proportion (probability) hospitalisation age group. 0 1. age structured population, <data.frame> two columns: age_range: column characters specifying lower upper bound age group, separated hyphen (-). bounds inclusive (integers). example, age group one ten given \"1-10\". proportion: column proportion population age group. Proportions must sum one.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_linelist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate a line list — sim_linelist","text":"Joshua W. Lambert, Carmen Tamayo","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_linelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a line list — sim_linelist","text":"","code":"# quickly simulate a line list using the function defaults linelist <- sim_linelist() head(linelist) #>   id          case_name case_type sex age date_onset date_admission   outcome #> 1  1       Kelly Wesney  probable   f  45 2023-01-01           <NA> recovered #> 2  2       Milton Brown confirmed   m  84 2023-01-01           <NA> recovered #> 3  7      David Rodgers  probable   m  47 2023-01-02     2023-01-04 recovered #> 4  8    Rashaad el-Ozer  probable   m  34 2023-01-04           <NA> recovered #> 5  9 Layaali el-Mahfouz confirmed   f  71 2023-01-03           <NA> recovered #> 6 10    Aaron Goldstein  probable   m  90 2023-01-02           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2023-01-03        2023-01-06     22.5 #> 3         <NA>         2022-12-28        2023-01-02       NA #> 4         <NA>         2023-01-04        2023-01-07       NA #> 5         <NA>         2023-01-01        2023-01-03     22.9 #> 6         <NA>         2023-01-01        2023-01-05       NA  # to simulate a more realistic line list load epiparameters from # {epiparameter} library(epiparameter) contact_distribution <- epiparameter(   disease = \"COVID-19\",   epi_name = \"contact distribution\",   prob_distribution = create_prob_distribution(     prob_distribution = \"pois\",     prob_distribution_params = c(mean = 2)   ) ) #> Citation cannot be created as author, year, journal or title is missing  infectious_period <- epiparameter(   disease = \"COVID-19\",   epi_name = \"infectious period\",   prob_distribution = create_prob_distribution(     prob_distribution = \"gamma\",     prob_distribution_params = c(shape = 1, scale = 1)   ) ) #> Citation cannot be created as author, year, journal or title is missing  # get onset to hospital admission from {epiparameter} database onset_to_hosp <- epiparameter_db(   disease = \"COVID-19\",   epi_name = \"onset to hospitalisation\",   single_epiparameter = TRUE ) #> Using Linton N, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov A, Jung S, Yuan #> B, Kinoshita R, Nishiura H (2020). “Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.” _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the citation use the 'get_citation' function  # get onset to death from {epiparameter} database onset_to_death <- epiparameter_db(   disease = \"COVID-19\",   epi_name = \"onset to death\",   single_epiparameter = TRUE ) #> Using Linton N, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov A, Jung S, Yuan #> B, Kinoshita R, Nishiura H (2020). “Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.” _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the citation use the 'get_citation' function # example with single hospitalisation risk for entire population linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_risk = 0.5 ) head(linelist) #>   id           case_name case_type sex age date_onset date_admission   outcome #> 1  1      Henry Sumearll confirmed   m  39 2023-01-01           <NA> recovered #> 2  2           Warren Le confirmed   m  44 2023-01-01     2023-01-01      died #> 3  3      Iffat el-Qadir  probable   f  32 2023-01-01     2023-01-10 recovered #> 4  7    Simone Patterson confirmed   f  67 2023-01-02     2023-01-03 recovered #> 5  8 Lutfiyya al-Khalili suspected   f  59 2023-01-02     2023-01-06      died #> 6  9   Fakeeha el-Hashim  probable   f  49 2023-01-02           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>     26.5 #> 2   2023-01-12         2023-01-01        2023-01-06     20.6 #> 3         <NA>         2022-12-29        2023-01-01       NA #> 4         <NA>         2022-12-29        2023-01-05     26.4 #> 5   2023-01-26         2023-01-02        2023-01-06       NA #> 6         <NA>         2023-01-02        2023-01-04       NA  # example with age-stratified hospitalisation risk # 20% for over 80s # 10% for under 5s # 5% for the rest age_dep_hosp_risk <- data.frame(   age_limit = c(1, 5, 80),   risk = c(0.1, 0.05, 0.2) ) linelist <- sim_linelist(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_risk = age_dep_hosp_risk ) head(linelist) #>   id       case_name case_type sex age date_onset date_admission   outcome #> 1  1    Elizabeth Ko suspected   f  15 2023-01-01           <NA> recovered #> 2  2   Dekota Rector confirmed   m  56 2023-01-01           <NA> recovered #> 3  3   Nicklos Rough suspected   m  49 2023-01-01           <NA> recovered #> 4  4    Quartus Sufi confirmed   m  10 2023-01-03           <NA> recovered #> 5  5 William Madison  probable   m  15 2023-01-01           <NA> recovered #> 6  7   Seth Cretecos suspected   m  37 2023-01-03           <NA> recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2023-01-02        2023-01-05     22.1 #> 3         <NA>         2022-12-30        2023-01-02       NA #> 4         <NA>         2022-12-28        2023-01-01     23.8 #> 5         <NA>         2023-01-03        2023-01-05       NA #> 6         <NA>         2023-01-04        2023-01-07       NA"},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_outbreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a line list and a contacts table — sim_outbreak","title":"Simulate a line list and a contacts table — sim_outbreak","text":"line list contacts simulated using branching process parameterised epidemiological parameters.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_outbreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a line list and a contacts table — sim_outbreak","text":"","code":"sim_outbreak(   contact_distribution = function(x) stats::dpois(x = x, lambda = 2),   infectious_period = function(x) stats::rlnorm(n = x, meanlog = 2, sdlog = 0.5),   prob_infection = 0.5,   onset_to_hosp = function(x) stats::rlnorm(n = x, meanlog = 1.5, sdlog = 0.5),   onset_to_death = function(x) stats::rlnorm(n = x, meanlog = 2.5, sdlog = 0.5),   onset_to_recovery = NULL,   hosp_risk = 0.2,   hosp_death_risk = 0.5,   non_hosp_death_risk = 0.05,   outbreak_start_date = as.Date(\"2023-01-01\"),   anonymise = FALSE,   outbreak_size = c(10, 10000),   population_age = c(1, 90),   case_type_probs = c(suspected = 0.2, probable = 0.3, confirmed = 0.5),   contact_tracing_status_probs = c(under_followup = 0.7, lost_to_followup = 0.2, unknown     = 0.1),   config = create_config() )"},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_outbreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a line list and a contacts table — sim_outbreak","text":"contact_distribution function <epiparameter> object generate number contacts per infection. function can defined anonymous. function must single argument form integer vector elements representing number contacts, return numeric vector element corresponds probability observing number contacts vector passed function. index numeric vector returned offset one corresponding probability observing number contacts, .e. first element output vector probability observing zero contacts, second element probability observing one contact, etc. <epiparameter> can provided. converted probability mass function internally. default anonymous function Poisson probability mass function (dpois()) mean (\\(\\lambda\\)) 2 contacts per infection. infectious_period function <epiparameter> object infectious period. defines duration becoming infectious longer infectious. simulation, individuals assumed become infectious immediately infected (latency period assumed zero). time intervals infected individual contacts assumed uniformly distributed within infectious period. Infectious periods must strictly positive. function can defined anonymous. function must return vector randomly generated real numbers representing sampled infectious periods. function must single argument, number random infectious periods generate. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 2 sdlog = 0.5. prob_infection single numeric probability secondary contact infected infected primary contact. onset_to_hosp function <epiparameter> object onset--hospitalisation delay distribution. onset_to_hosp can also set NULL simulate hospitalisation (admission) dates. function can defined anonymous. function must return vector numerics length onset--hospitalisation delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 1.5 sdlog = 0.5. onset_to_hosp set NULL hosp_risk hosp_death_risk automatically set NULL manually specified. onset_to_death function <epiparameter> object onset--death delay distribution. onset_to_death can also set NULL simulate dates individuals died. function can defined anonymous. function must return vector numerics length onset--death delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default anonymous function lognormal distribution random number generator (rlnorm()) meanlog = 2.5 sdlog = 0.5. onset_to_death set NULL non_hosp_death_risk hosp_death_risk automatically set NULL manually specified. onset_to_recovery function <epiparameter> object onset--recovery delay distribution. onset_to_recovery can also NULL simulate dates individuals recovered. function can defined anonymous. function must return vector numerics length onset--recovery delay. function must single argument. <epiparameter> can provided. converted random number generator internally. default NULL default cases recover get NA $date_outcome line list column. hosp_risk Either single numeric hospitalisation risk everyone population, <data.frame> age specific hospitalisation risks. Default 20% hospitalisation (0.2) entire population. onset_to_hosp argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. hosp_death_risk Either single numeric death risk hospitalised individuals across population, <data.frame> age specific hospitalised death risks Default 50% death risk hospitals (0.5) entire population. onset_to_death argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. hosp_death_risk can vary time specified time_varying_death_risk element config, see vignette(\"time-varying-cfr\", package = \"simulist\") information. non_hosp_death_risk Either single numeric death risk outside hospitals across population, <data.frame> age specific death risks outside hospitals. Default 5% death risk outside hospitals  (0.05) entire population. onset_to_death argument set NULL argument automatically set NULL specified can manually set NULL. See details examples information. non_hosp_death_risk can vary time specified time_varying_death_risk element config, see vignette(\"time-varying-cfr\", package = \"simulist\") information. outbreak_start_date date start outbreak. anonymise logical boolean whether case names anonymised. Default FALSE. outbreak_size numeric vector length 2 defining minimum maximum number infected individuals simulated outbreak. Default c(10, 1e4), minimum outbreak size 10 infected individuals, maximum outbreak size 10,000 infected individuals. Either number can changed increase decrease maximum minimum outbreak size allow simulating larger smaller outbreaks. minimum outbreak size reached running simulation many iterations (internally) function errors, whereas maximum outbreak size exceeded function returns data early warning stating many cases contacts returned. population_age Either numeric vector two elements <data.frame> age structure population. Use numeric vector specific age range population, first element lower bound age range, second upper bound age range (inclusive, .e. [lower, upper]). <data.frame> age groups proportion population group. See details examples information. case_type_probs named numeric vector probability case type. names vector must \"suspected\", \"probable\", \"confirmed\". Values case type must sum one. contact_tracing_status_probs named numeric vector probability contact tracing status. names vector must \"under_followup\", \"lost_to_followup\", \"unknown\". Values contact tracing status must sum one. config list settings adjust randomly sampled delays Ct values. See create_config() information.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_outbreak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a line list and a contacts table — sim_outbreak","text":"list two elements: line list <data.frame> contacts <data.frame>","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_outbreak.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate a line list and a contacts table — sim_outbreak","text":"age-stratified hospitalised death risks <data.frame> need passed hosp_risk /hosp_death_risk arguments. <data.frame> two columns: age_limit: column one numeric per cell lower bound (minimum) age age group (inclusive). risk: column one numeric per cell proportion (probability) hospitalisation age group. 0 1. age structured population, <data.frame> two columns: age_range: column characters specifying lower upper bound age group, separated hyphen (-). bounds inclusive (integers). example, age group one ten given \"1-10\". proportion: column proportion population age group. Proportions must sum one.","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_outbreak.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate a line list and a contacts table — sim_outbreak","text":"Joshua W. Lambert","code":""},{"path":"https://epiverse-trace.github.io/simulist/reference/sim_outbreak.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a line list and a contacts table — sim_outbreak","text":"","code":"# quickly simulate an outbreak using the function defaults outbreak <- sim_outbreak() head(outbreak$linelist) #>   id          case_name case_type sex age date_onset date_admission   outcome #> 1  1  Christie Reynolds  probable   f  17 2023-01-01           <NA> recovered #> 2  2 Nooriyya al-Mourad  probable   f  46 2023-01-01     2023-01-03 recovered #> 3  3        Louis Munoz suspected   m  16 2023-01-01           <NA> recovered #> 4  7       Sean Lathrop  probable   m  12 2023-01-07           <NA> recovered #> 5  9    Yusri al-Saleem  probable   m  86 2023-01-02           <NA> recovered #> 6 10    Haifaaa al-Nasr confirmed   f  87 2023-01-04     2023-01-08 recovered #>   date_outcome date_first_contact date_last_contact ct_value #> 1         <NA>               <NA>              <NA>       NA #> 2         <NA>         2023-01-04        2023-01-05       NA #> 3         <NA>         2022-12-27        2023-01-02       NA #> 4         <NA>         2023-01-01        2023-01-04       NA #> 5         <NA>         2023-01-02        2023-01-04       NA #> 6         <NA>         2022-12-29        2023-01-03     28.2 head(outbreak$contacts) #>                 from                 to age sex date_first_contact #> 1  Christie Reynolds Nooriyya al-Mourad  46   f         2023-01-04 #> 2  Christie Reynolds        Louis Munoz  16   m         2022-12-27 #> 3  Christie Reynolds  Jared Chounlamany  77   m         2023-01-04 #> 4 Nooriyya al-Mourad         Maya Ortiz  34   f         2023-01-02 #> 5 Nooriyya al-Mourad     Nizhoni Salido  31   f         2023-01-01 #> 6 Nooriyya al-Mourad       Sean Lathrop  12   m         2023-01-01 #>   date_last_contact was_case         status #> 1        2023-01-05        Y           case #> 2        2023-01-02        Y           case #> 3        2023-01-07        N        unknown #> 4        2023-01-04        N under_followup #> 5        2023-01-04        N under_followup #> 6        2023-01-04        Y           case  # to simulate a more realistic outbreak load epiparameters from # {epiparameter} library(epiparameter) contact_distribution <- epiparameter(   disease = \"COVID-19\",   epi_name = \"contact distribution\",   prob_distribution = create_prob_distribution(     prob_distribution = \"pois\",     prob_distribution_params = c(mean = 2)   ) ) #> Citation cannot be created as author, year, journal or title is missing  infectious_period <- epiparameter(   disease = \"COVID-19\",   epi_name = \"infectious period\",   prob_distribution = create_prob_distribution(     prob_distribution = \"gamma\",     prob_distribution_params = c(shape = 1, scale = 1)   ) ) #> Citation cannot be created as author, year, journal or title is missing  # get onset to hospital admission from {epiparameter} database onset_to_hosp <- epiparameter_db(   disease = \"COVID-19\",   epi_name = \"onset to hospitalisation\",   single_epiparameter = TRUE ) #> Using Linton N, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov A, Jung S, Yuan #> B, Kinoshita R, Nishiura H (2020). “Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.” _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the citation use the 'get_citation' function  # get onset to death from {epiparameter} database onset_to_death <- epiparameter_db(   disease = \"COVID-19\",   epi_name = \"onset to death\",   single_epiparameter = TRUE ) #> Using Linton N, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov A, Jung S, Yuan #> B, Kinoshita R, Nishiura H (2020). “Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.” _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the citation use the 'get_citation' function  outbreak <- sim_outbreak(   contact_distribution = contact_distribution,   infectious_period = infectious_period,   prob_infection = 0.5,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death )"},{"path":"https://epiverse-trace.github.io/simulist/reference/simulist-package.html","id":null,"dir":"Reference","previous_headings":"","what":"simulist: Simulate Disease Outbreak Line List and Contacts Data — simulist-package","title":"simulist: Simulate Disease Outbreak Line List and Contacts Data — simulist-package","text":"Tools simulate realistic raw case data epidemic form line lists contacts using branching process. Simulated outbreaks parameterised epidemiological parameters can age structured populations, age-stratified hospitalisation death risk time-varying case fatality risk.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/simulist/reference/simulist-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"simulist: Simulate Disease Outbreak Line List and Contacts Data — simulist-package","text":"Maintainer: Joshua W. Lambert joshua.lambert@lshtm.ac.uk (ORCID) [copyright holder] Authors: Carmen Tamayo carmen.tamayo-cuartero@lshtm.ac.uk (ORCID) contributors: Hugo Gruson hugo@data.org (ORCID) [contributor, reviewer] Pratik R. Gupte pratik.gupte@lshtm.ac.uk (ORCID) [contributor, reviewer] Adam Kucharski adam.kucharski@lshtm.ac.uk (ORCID) [reviewer] Chris Hartgerink chris@data.org (ORCID) [reviewer]","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"simulist-030","dir":"Changelog","previous_headings":"","what":"simulist 0.3.0","title":"simulist 0.3.0","text":"third release simulist R package contains range new features, enhancements, documentation unit tests. headline changes package : simulation now parameterised infectious period rather contact interval. Line list data now date_outcome outcome columns can parameterised onset_to_death onset_to_recovery. Case fatality risk can vary time customisable user-defined function. Two new vignettes time-varying case fatality risk, wrangling line list contact tracing data.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"external-0-3-0","dir":"Changelog","previous_headings":"New features","what":"External","title":"simulist 0.3.0","text":"onset_to_hosp onset_to_death arguments can now take NA input return column NAs line list columns date_admission date_outcome (#98). onset_to_recovery argument added simulation functions, sim_linelist() sim_outbreak(), recovery date can explicitly given line list data (#99). line list simulation can now use time-varying case fatality risk. create_config() function now returns $time_varying_death_risk list element, NULL default can take R function enable fatality risk cases change epidemic (#101). new vignette, time-varying-cfr.Rmd, added package describe use time-varying case fatality risk functionality describe different time-varying functions can used (#101). new vignette, wrangling-linelist.Rmd, added go common post-processing steps might required simulating line list contact tracing data. vignette short currently contains single post-processing example, examples added time (#104). README now section related projects provide overview packages simulate line list data, related simulist. section contains disclosure widget containing feature table providing high-level description features development status related package (#110). Key features section Complimentary R packages section added README (#134). Updated package architecture diagram design-principles.Rmd vignette (#113).","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"internal-0-3-0","dir":"Changelog","previous_headings":"New features","what":"Internal","title":"simulist 0.3.0","text":".add_deaths() function replaced .add_outcome() function can simulate death recovery times (#99). .cross_check_sim_input() function added package ensure user input coherent across arguments (#98). .anonymise() function added convert individual’s names alphanumeric codes anonymise individuals line list contact tracing data (#106).","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"simulist 0.3.0","text":"simulation functions now parameterised infectious period (infect_period argument) instead contact interval (contact_interval argument). moves away parameterising simulation time delay person becoming infected contact susceptible individual, instead uses infectious period distribution within contacts uniformly distributed time (#96). simulation functions can now set maximum well minimum outbreak size. min_outbreak_size argument exported sim_*() functions renamed outbreak_size takes numeric vector two elements, minimum maximum outbreak size. maximum outbreak size soft limit due stochastic nature branching process model, epidemiological data returned can contain cases /contacts maximum outbreak_size case warning returned explaining user many cases/contacts returned (#93). add_ct argument sim_linelist() sim_outbreak() removed. functionality now equivalent add_ct = TRUE previous simulist version. add_ct argument removed move package always returning <data.frame>s number columns, consistency predictability (#104). add_names argument simulation functions renamed anonymise. new argument controls whether names given case (anonymise = FALSE, default behaviour) whether fixed length hexadecimal codes given case (anonymise = TRUE), ensures returned <data.frame> number columns (#106).","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"simulist 0.3.0","text":".sim_network_bp() now indexes time vector correctly. Previously vector indexing bug meant epidemic progress time (#95).","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"deprecated-and-defunct-0-3-0","dir":"Changelog","previous_headings":"","what":"Deprecated and defunct","title":"simulist 0.3.0","text":"None","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"simulist-020","dir":"Changelog","previous_headings":"","what":"simulist 0.2.0","title":"simulist 0.2.0","text":"Second release simulist, updates core simulation model , result, arguments sim_*() functions simulating line list data /contact table data exported simulist updated. internal package architecture also refactored.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"external-0-2-0","dir":"Changelog","previous_headings":"New features","what":"External","title":"simulist 0.2.0","text":"create_config() now returns new element list: $network. default create_config() returns network = \"adjusted\", assumes simulation random network samples contacts excess degree distribution (see Details ?create_config()). network effect can changed \"unadjusted\" switch network effect. $network checked internally (.sim_network_bp()) error valid (#60). Package architecture diagram added design-principles.Rmd (#66). lintr GitHub action workflow (lint-changed-files.yaml) added suite continuous integration workflows (#68). Transmission chain visualisation added vis-linelist.Rmd (#70).","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"internal-0-2-0","dir":"Changelog","previous_headings":"New features","what":"Internal","title":"simulist 0.2.0","text":".sim_network_bp() added internal function replaces bpmodels::chain_sim() core simulation model producing contacted infected individuals. {bpmodels} removed dependency result (#60). .sample_names() added internal function utilise randomNames::randomNames() produce unique names randomNames(..., sample..replacement = FALSE). Refactor internal simulation architecture replaced .sim_bp_linelist(), .sim_clinical_linelist() .sim_contacts_tbl() .sim_internal() (#66). sim_utils.R file renamed utils.R (#66) empty create_linelist.R file removed (#72). .add_date_contact() argument outbreak_start_date now NULL default instead missing (#82). Regression tests sim_*() functions now use snapshot testing detailed data checking (#65). Internal testing data (testdata) files updated, testdata/README.md instructions (#64).","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"simulist 0.2.0","text":"R serial_interval arguments removed sim_linelist(), sim_contacts() sim_outbreak() functions instead contact_distribution, contact_interval prob_infect used parameterise simulation. Documentation, functions vignettes, updated changes (#60). contact_distribution argument sim_*() functions requires density function supplied anonymous function. Information added simulist.Rmd explain . line list output sim_linelist() now uses column header sex instead gender. contacts table output sim_contacts() sim_outbreak() now uses column headers age sex instead cnt_age cnt_gender (#60, #79). contact_distribution redefined redocumented distribution contacts per individual, rather number contacts get infected v0.1.0. row.names <data.frame>s output sim_linelist(), sim_contacts() sim_outbreak() now sequential 1:nrows (#63).","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"simulist 0.2.0","text":"sim_contacts() now correctly runs age-structured population. previous version (v0.1.0), sim_contacts() call .check_age_df() result function errored, fixed PR #81.","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"deprecated-and-defunct-0-2-0","dir":"Changelog","previous_headings":"","what":"Deprecated and defunct","title":"simulist 0.2.0","text":"None","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"simulist-010","dir":"Changelog","previous_headings":"","what":"simulist 0.1.0","title":"simulist 0.1.0","text":"Initial release simulist, R package containing tools simulate epidemiological data line lists contact tables.","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"simulist 0.1.0","text":"sim_linelist(): simulate line list data sim_contacts(): simulate contacts data sim_outbreak(): simulate line list contacts data Get Started vignette (simulist.Rmd) Age-stratified hospitalisation death risks vignette (age-strat-risks.Rmd) Age structured population vignette (age-struct-pop.Rmd) Visualising simulated data (vis-linelist.Rmd) Design Principles {simulist} (design-principles.Rmd) Unit tests (100% code coverage) documentation files. Continuous integration workflows R package checks, rendering README.md, calculating test coverage, deploying pkgdown website, updating citation file, checking new package system dependencies.","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"breaking-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"simulist 0.1.0","text":"None","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"simulist 0.1.0","text":"None","code":""},{"path":"https://epiverse-trace.github.io/simulist/news/index.html","id":"deprecated-and-defunct-0-1-0","dir":"Changelog","previous_headings":"","what":"Deprecated and defunct","title":"simulist 0.1.0","text":"None","code":""}]
