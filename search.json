[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 readepi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/simulist.html","id":"case-type","dir":"Articles","previous_headings":"","what":"Case type","title":"Getting Started with {simulist}","text":"midst infectious disease outbreak may possible confirm every case. confirmed case usually done via diagnostic test may may need carried laboratory. several reasons case may confirmed, one example limited testing capacity, especially fast growing epidemics. categories cases : probable suspected. Probable cases show clinical evidence disease , , confirmed diagnostic test. Suspected cases possibly infected show clear clinical epidemiological evidence, diagnostic test performed. linelist output {simulist} simulation contains column (case_type) type case. {simulist} can simulate varying probabilities case suspected, probable confirmed. default sim_linelist() function uses probabilities suspected = 0.2, probable = 0.3 confirmed = 0.5. alter probabilities, supply named vector sim_linelist() argument case_type_probs. vector contain three numbers, names suspected, probable confirmed, numbers summing one. change values simulate outbreak proportion cases confirmed laboratory testing high. also possible set one categories 1, case every case type. way {simulist} assigns case types pasting case types onto existing case data. Thus, viewed true underlying data cases simulation confirmed, lack information cases. cases output linelist incorrectly attributed probable suspected infected. say, individuals linelist, whatever case type, infected outbreak.","code":"linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death ) head(linelist) #>   id          case_name case_type gender age onset_date hospitalisation_date #> 1  1      Sydny Hussein  probable      f  49 2023-01-01           2023-01-08 #> 2  2 Hilmiyya el-Ghanem suspected      f  53 2023-01-01                 <NA> #> 3  3     Hamda el-Mirza confirmed      f  70 2023-01-01                 <NA> #> 4  4     Matthew Nguyen suspected      m  46 2023-01-01                 <NA> #> 5  5     Tiffany Nguyen  probable      f  32 2023-01-03                 <NA> #> 6  6    Brandi Andersen suspected      f  22 2023-01-01                 <NA> #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2022-12-30        2023-01-01 #> 3         2022-12-28        2023-01-02 #> 4         2022-12-29        2023-01-02 #> 5         2023-01-01        2023-01-08 #> 6         2022-12-30        2023-01-03 linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   case_type_probs = c(suspected = 0.05, probable = 0.05, confirmed = 0.9) ) head(linelist) #>   id      case_name case_type gender age onset_date hospitalisation_date #> 1  1 Steven Soiland confirmed      m  47 2023-01-01                 <NA> #> 2  2  Karissa Laine confirmed      f  47 2023-01-01                 <NA> #> 3  3    Lee Swanson confirmed      m  21 2023-01-03                 <NA> #> 4  4   Qutb el-Saab confirmed      m  21 2023-01-02                 <NA> #> 5  5   Rylee Sloane suspected      f  41 2023-01-03           2023-01-05 #> 6  6      Eli Smith suspected      m  50 2023-01-04                 <NA> #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2022-12-28        2023-01-02 #> 3         2022-12-29        2023-01-02 #> 4         2023-01-03        2023-01-06 #> 5         2023-01-03        2023-01-05 #> 6         2023-01-08        2023-01-08"},{"path":"/articles/simulist.html","id":"conditioning-simulation-on-outbreak-size","dir":"Articles","previous_headings":"","what":"Conditioning simulation on outbreak size","title":"Getting Started with {simulist}","text":"reproduction number strong influence size outbreak. However, {simulist} package generates linelist data using stochastic algorithm, even \\(R < 1\\) can produce substantial outbreak chance, \\(R >> 1\\) sometimes produce vast epidemic one simulation (.e. one replicate) due stochasticity. requiring minimum outbreak size can specify min_chain_size argument sim_linelist(). default set 10. means simulation return linelist conditioning met. words, simulation resimulate branching process model outbreak infects least 10 people. requiring linelist represents large outbreak, COVID-19 outbreak, setting min_chain_size larger number guarantees linelist least size. simulate linelist requiring least 250 cases. amount time simulation takes can determined reproduction number (R) minimum outbreak size (min_chain_size). min_outbreak_size large, example hundreds thousands cases, reproduction number one, take many branching process simulations finding one produces sufficiently large epidemic.","code":"linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   min_chain_size = 250 ) head(linelist) #>   id             case_name case_type gender age onset_date hospitalisation_date #> 1  1          Adjoa Castle confirmed      f  84 2023-01-01           2023-01-05 #> 2  2     Armond Dronavalli confirmed      m   6 2023-01-01                 <NA> #> 3  3             Andrew Le confirmed      m  45 2023-01-01                 <NA> #> 4  4    Taquaysha Williams  probable      f  40 2023-01-02                 <NA> #> 5  5   Michael Johnson III suspected      m  89 2023-01-03                 <NA> #> 6  6 Tyree Niswender-Zenno  probable      m   7 2023-01-05           2023-01-06 #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2022-12-30        2023-01-03 #> 3         2023-01-02        2023-01-05 #> 4         2022-12-31        2023-01-01 #> 5         2023-01-02        2023-01-03 #> 6         2023-01-02        2023-01-07"},{"path":"/articles/simulist.html","id":"anonymous-linelist","dir":"Articles","previous_headings":"","what":"Anonymous linelist","title":"Getting Started with {simulist}","text":"default sim_linelist() provides name individual linelist. anonymised linelist required add_names argument sim_linelist() can set FALSE. names used linelist produced random {randomNames} R package. Therefore, even add_names = TRUE personal data real individuals produced shared.","code":"linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   add_names = FALSE ) head(linelist) #>   id case_type gender age onset_date hospitalisation_date date_first_contact #> 1  1 confirmed      f  70 2023-01-01           2023-01-06               <NA> #> 2  2 confirmed      m  21 2023-01-01           2023-01-02         2022-12-26 #> 3  3 confirmed      f  51 2023-01-01                 <NA>         2023-01-05 #> 4  4 confirmed      m  37 2023-01-01                 <NA>         2022-12-31 #> 5  5 confirmed      m  37 2023-01-02                 <NA>         2023-01-04 #> 6  6 confirmed      f  52 2023-01-02                 <NA>         2023-01-02 #>   date_last_contact #> 1              <NA> #> 2        2023-01-02 #> 3        2023-01-06 #> 4        2023-01-01 #> 5        2023-01-06 #> 6        2023-01-05"},{"path":"/articles/simulist.html","id":"population-age","dir":"Articles","previous_headings":"","what":"Population age","title":"Getting Started with {simulist}","text":"default sim_linelist() simulates individuals ages assuming uniform distribution 1 90. change age range, vector two numbers can supplied age_range argument. simulated outbreak population population ranging 5 75. currently possible simulate non-uniform population age structure {simulist}.","code":"linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   age_range = c(5, 75) ) head(linelist) #>   id        case_name case_type gender age onset_date hospitalisation_date #> 1  1   Ramza al-Sader confirmed      f  48 2023-01-01                 <NA> #> 2  2 Nusaiba el-Mitri  probable      f  20 2023-01-01                 <NA> #> 3  3  Zachary Spencer confirmed      m  45 2023-01-01                 <NA> #> 4  4    David Persaud  probable      m  32 2023-01-01                 <NA> #> 5  5    Kaitlin Mello confirmed      f  61 2023-01-01                 <NA> #> 6  6   Robert Johnson confirmed      m  13 2023-01-02           2023-01-09 #>   date_first_contact date_last_contact #> 1               <NA>              <NA> #> 2         2022-12-30        2023-01-02 #> 3         2022-12-31        2023-01-04 #> 4         2023-01-01        2023-01-03 #> 5         2022-12-27        2023-01-02 #> 6         2023-01-04        2023-01-06"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joshua W. Lambert. Author, maintainer, copyright holder. Carmen Tamayo. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lambert J, Tamayo C (2023). simulist: Tools Simulated Linelist Data. R package version 0.0.0.9000.","code":"@Manual{,   title = {simulist: Tools to Simulated Linelist Data},   author = {Joshua W. Lambert and Carmen Tamayo},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"simulist-simulate-linelist-data-","dir":"","previous_headings":"","what":"Tools to Simulated Linelist Data","title":"Tools to Simulated Linelist Data","text":"{simulist} R package simulate linelist infectious disease outbreak. {simulist} developed Centre Mathematical Modelling Infectious Diseases London School Hygiene Tropical Medicine part Epiverse-TRACE.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools to Simulated Linelist Data","text":"can install development version {simulist} GitHub :","code":"# check whether {pak} is installed if(!require(\"pak\")) install.packages(\"pak\") pak::pak(\"epiverse-trace/simulist\")"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Tools to Simulated Linelist Data","text":"linelist simulation requires serial interval, onset--hospitalisation delay, onset--death delay. can load load library epidemiological parameters epiparameter R package, available, serial interval COVID-19 can create . simulate linelist COVID-19 assumed reproduction number (R) 1.1 use sim_linelist() function. example, linelist simulated using default values (see ?sim_linelist). default hospitalisation rate 0.2 (20% individual infected become hospitalised) start date outbreak 1st January 2023. modify either make realistic can specify .","code":"library(simulist) library(epiparameter) # create COVID-19 serial interval serial_interval <- epiparameter::epidist(   disease = \"COVID-19\",   epi_dist = \"serial interval\",   prob_distribution = \"gamma\",   prob_distribution_params = c(shape = 1, scale = 1) ) #> Citation cannot be created as author, year, journal or title is missing  # get onset to hospital admission from {epiparameter} database onset_to_hosp <- epiparameter::epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset to hospitalisation\",   single_epidist = TRUE ) #> Using Linton NM, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov AR, Jung S, #> Yuan B, Kinoshita R, Nishiura H (2020). \"Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.\" _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the short citation use the 'get_citation' function  # get onset to death from {epiparameter} database onset_to_death <- epiparameter::epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset to death\",   single_epidist = TRUE ) #> Using Linton NM, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov AR, Jung S, #> Yuan B, Kinoshita R, Nishiura H (2020). \"Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.\" _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the short citation use the 'get_citation' function linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death ) head(linelist) #>   id gender age onset_date hospitalisation_date date_first_contact #> 1  1      m  66 2023-01-01                 <NA>               <NA> #> 2  2      f  37 2023-01-01                 <NA>         2023-01-07 #> 3  3      m  81 2023-01-01                 <NA>         2023-01-01 #> 4  4      m  33 2023-01-02                 <NA>         2023-01-01 #> 5  5      f  81 2023-01-02           2023-01-03         2023-01-06 #> 6  6      m   1 2023-01-04           2023-01-08         2023-01-03 #>   date_last_contact #> 1              <NA> #> 2        2023-01-09 #> 3        2023-01-04 #> 4        2023-01-02 #> 5        2023-01-07 #> 6        2023-01-06 linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_rate = 0.01,   outbreak_start_date = as.Date(\"2019-12-01\") ) head(linelist) #>   id gender age onset_date hospitalisation_date date_first_contact #> 1  1      f  60 2019-12-01                 <NA>               <NA> #> 2  2      f  11 2019-12-01                 <NA>         2019-11-27 #> 3  3      m  24 2019-12-02                 <NA>         2019-11-29 #> 4  4      f  39 2019-12-02                 <NA>         2019-11-30 #> 5  5      f  64 2019-12-01                 <NA>         2019-11-30 #> 6  6      f  87 2019-12-02                 <NA>         2019-12-05 #>   date_last_contact #> 1              <NA> #> 2        2019-12-01 #> 3        2019-12-03 #> 4        2019-12-04 #> 5        2019-12-02 #> 6        2019-12-06"},{"path":"/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"Tools to Simulated Linelist Data","text":"report bug please open issue","code":""},{"path":"/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Tools to Simulated Linelist Data","text":"Contributions {simulist} welcomed. Please follow package contributing guide.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Tools to Simulated Linelist Data","text":"Please note {simulist} project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/index.html","id":"citing-this-package","dir":"","previous_headings":"","what":"Citing this package","title":"Tools to Simulated Linelist Data","text":"","code":"citation(\"simulist\") #> To cite package 'simulist' in publications use: #>  #>   Lambert J, Tamayo C (2023). _simulist: Tools to Simulated Linelist #>   Data_. R package version 0.0.0.9000. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {simulist: Tools to Simulated Linelist Data}, #>     author = {Joshua W. Lambert and Carmen Tamayo}, #>     year = {2023}, #>     note = {R package version 0.0.0.9000}, #>   }"},{"path":"/reference/dot-add_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Add event date as column to infectious history <data.frame> — .add_date","title":"Add event date as column to infectious history <data.frame> — .add_date","text":"event date first contact, last contact .","code":""},{"path":"/reference/dot-add_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add event date as column to infectious history <data.frame> — .add_date","text":"","code":".add_date_first_contact(.data, distribution = \"pois\", ...)  .add_date_last_contact(.data, outbreak_start_date, distribution = \"pois\", ...)  .add_hospitalisation(.data, onset_to_hosp, hosp_rate)  .add_deaths(.data, onset_to_death, hosp_death_rate, non_hosp_death_rate)"},{"path":"/reference/dot-add_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add event date as column to infectious history <data.frame> — .add_date","text":".data <data.frame> containing infectious history branching process simulation distribution character name distribution, following base R convention distribution naming (e.g. Poisson pois). ... dots Extra arguments passed distribution function given distribution argument. outbreak_start_date date start outbreak. onset_to_hosp <epidist> object onset hospitalisation delay distribution. hosp_rate Either single numeric hospitalisation rate everyone population, <data.frame> age specific hospitalisation rates. Default 20% hospitalisation (0.2) entire population. See details examples information. onset_to_death <epidist> object onset death delay distribution. hosp_death_rate Either single numeric death rate hospitalised individuals across population, <data.frame> age specific hospitalised death rates. Default 50% death rate hospitals (0.5) entire population. See details examples information. non_hosp_death_rate Either single numeric death rate outside hospitals across population, <data.frame> age specific death rates outside hospitals. Default 5% death rate outside hospitals  (0.05) entire population. See details examples information.","code":""},{"path":"/reference/dot-add_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add event date as column to infectious history <data.frame> — .add_date","text":"<data.frame> one column input .data. Unless column heading already present data overwritten.","code":""},{"path":"/reference/dot-add_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Add linelist information as column to infectious history <data.frame> — .add_info","title":"Add linelist information as column to infectious history <data.frame> — .add_info","text":"Add linelist information column infectious history <data.frame>","code":""},{"path":"/reference/dot-add_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add linelist information as column to infectious history <data.frame> — .add_info","text":"","code":".add_names(.data)  .add_ct(.data, distribution = \"norm\", ...)"},{"path":"/reference/dot-add_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add linelist information as column to infectious history <data.frame> — .add_info","text":".data <data.frame> containing infectious history branching process simulation distribution character name distribution, following base R convention distribution naming (e.g. Poisson pois). ... dots Extra arguments passed distribution function given distribution argument. onset_to_hosp <epidist> object onset hospitalisation delay distribution. onset_to_death <epidist> object onset death delay distribution.","code":""},{"path":"/reference/dot-add_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add linelist information as column to infectious history <data.frame> — .add_info","text":"<data.frame> one column input .data. Unless column heading already present data overwritten.","code":""},{"path":"/reference/dot-check_rate_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if <data.frame> defining age-stratified hospitalisation or death rate\nis correct — .check_rate_df","title":"Check if <data.frame> defining age-stratified hospitalisation or death rate\nis correct — .check_rate_df","text":"Check <data.frame> defining age-stratified hospitalisation death rate correct","code":""},{"path":"/reference/dot-check_rate_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if <data.frame> defining age-stratified hospitalisation or death rate\nis correct — .check_rate_df","text":"","code":".check_rate_df(x, age_range)"},{"path":"/reference/dot-check_rate_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if <data.frame> defining age-stratified hospitalisation or death rate\nis correct — .check_rate_df","text":"x <data.frame>.","code":""},{"path":"/reference/dot-check_rate_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if <data.frame> defining age-stratified hospitalisation or death rate\nis correct — .check_rate_df","text":"<data.frame>, also called error side-effects input invalid.","code":""},{"path":"/reference/dot-create_linelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a mock linelist without simulating to test internal functions that\nrequire linelist data — .create_linelist","title":"Create a mock linelist without simulating to test internal functions that\nrequire linelist data — .create_linelist","text":"Create mock linelist without simulating test internal functions require linelist data","code":""},{"path":"/reference/dot-create_linelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a mock linelist without simulating to test internal functions that\nrequire linelist data — .create_linelist","text":"","code":".create_linelist(scenario)"},{"path":"/reference/dot-create_linelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a mock linelist without simulating to test internal functions that\nrequire linelist data — .create_linelist","text":"scenario character string state linelist. Options : \"pre_date_last_contact\" \"pre_date_first_contact\" \"pre_hospitalisation\" \"pre_deaths\" \"pre_names\" \"pre_ct\"","code":""},{"path":"/reference/dot-create_linelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a mock linelist without simulating to test internal functions that\nrequire linelist data — .create_linelist","text":"<data.frame>.","code":""},{"path":"/reference/dot-create_linelist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a mock linelist without simulating to test internal functions that\nrequire linelist data — .create_linelist","text":"scenarios created taking snapshot (.e copy)  linelist <data.frame> stage simulation (sim_linelist()) setting seed 1 (set.seed(1)). scenarios function call, example, \"pre_date_last_contact\" state linelist prior calling .add_date_last_contact(), \"pre_names\" state linelist prior calling .add_names().","code":""},{"path":"/reference/dot-create_linelist.html","id":"script-to-reproduce-data-","dir":"Reference","previous_headings":"","what":"Script to reproduce data:","title":"Create a mock linelist without simulating to test internal functions that\nrequire linelist data — .create_linelist","text":"set.seed(1) linelist <- sim_linelist( R = 1.1, serial_interval = serial_interval, onset_to_hosp = onset_to_hosp, onset_to_death = onset_to_death, hosp_rate = 0.5, add_ct = TRUE )","code":""},{"path":"/reference/sim_linelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a linelist — sim_linelist","title":"Simulate a linelist — sim_linelist","text":"linelist simulated using branching process parameterised previously published epidemiological parameters.","code":""},{"path":"/reference/sim_linelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a linelist — sim_linelist","text":"","code":"sim_linelist(   R,   serial_interval,   onset_to_hosp,   onset_to_death,   hosp_rate = 0.2,   hosp_death_rate = 0.5,   non_hosp_death_rate = 0.05,   outbreak_start_date = as.Date(\"2023-01-01\"),   add_names = TRUE,   add_ct = FALSE,   min_chain_size = 10,   age_range = c(1, 90),   case_type_probs = c(suspected = 0.2, probable = 0.3, confirmed = 0.5),   include_contacts = FALSE,   ... )"},{"path":"/reference/sim_linelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a linelist — sim_linelist","text":"R single numeric reproduction number. serial_interval <epidist> object serial interval. onset_to_hosp <epidist> object onset hospitalisation delay distribution. onset_to_death <epidist> object onset death delay distribution. hosp_rate Either single numeric hospitalisation rate everyone population, <data.frame> age specific hospitalisation rates. Default 20% hospitalisation (0.2) entire population. See details examples information. hosp_death_rate Either single numeric death rate hospitalised individuals across population, <data.frame> age specific hospitalised death rates. Default 50% death rate hospitals (0.5) entire population. See details examples information. non_hosp_death_rate Either single numeric death rate outside hospitals across population, <data.frame> age specific death rates outside hospitals. Default 5% death rate outside hospitals  (0.05) entire population. See details examples information. outbreak_start_date date start outbreak. add_names logical boolean whether add names row linelist. Default TRUE. add_ct logical boolean whether add Ct values row linelist. Default FALSE. min_chain_size single numeric defining minimum chain size simulated outbreak. Default 10. can increased function simulate larger outbreak. age_range numeric vector two elements. first lower bound age range, second upper bound age range (inclusive, .e. [lower, upper]). case_type_probs named numeric vector probability case type. names vector must \"suspected\", \"probable\", \"confirmed\". Values case type must sum one. include_contacts logical boolean determine whether contacts added linelist. Currently implmented. ... dots Extra arguments passed functions. Currently used return warning extra arguments supplied.","code":""},{"path":"/reference/sim_linelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a linelist — sim_linelist","text":"linelist <data.frame>","code":""},{"path":"/reference/sim_linelist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate a linelist — sim_linelist","text":"age-stratified hospitalised death rates <data.frame> need passed hosp_rate /hosp_death_rate arguments. <data.frame> three columns: min_age: column one numeric per cell minimum age age group (inclusive). max_age: column one numeric per cell maximum age age group (exclusive). rate: column one numeric per cell proportion (probability) hospitalisation age group. 0 1.","code":""},{"path":"/reference/sim_linelist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate a linelist — sim_linelist","text":"Joshua W. Lambert, Carmen Tamayo","code":""},{"path":"/reference/sim_linelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a linelist — sim_linelist","text":"","code":"# load data required to simulate linelist serial_interval <- epiparameter::epidist(   disease = \"COVID-19\",   epi_dist = \"serial interval\",   prob_distribution = \"gamma\",   prob_distribution_params = c(shape = 1, scale = 1) ) #> Citation cannot be created as author, year, journal or title is missing  # get onset to hospital admission from {epiparameter} database onset_to_hosp <- epiparameter::epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset to hospitalisation\",   single_epidist = TRUE ) #> Using Linton NM, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov AR, Jung S, #> Yuan B, Kinoshita R, Nishiura H (2020). “Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.” _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the short citation use the 'get_citation' function  # get onset to death from {epiparameter} database onset_to_death <- epiparameter::epidist_db(   disease = \"COVID-19\",   epi_dist = \"onset to death\",   single_epidist = TRUE ) #> Using Linton NM, Kobayashi T, Yang Y, Hayashi K, Akhmetzhanov AR, Jung S, #> Yuan B, Kinoshita R, Nishiura H (2020). “Incubation Period and Other #> Epidemiological Characteristics of 2019 Novel Coronavirus Infections #> with Right Truncation: A Statistical Analysis of Publicly Available #> Case Data.” _Journal of Clinical Medicine_. doi:10.3390/jcm9020538 #> <https://doi.org/10.3390/jcm9020538>..  #> To retrieve the short citation use the 'get_citation' function # example with single hospitalisation rate for entire population linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_rate = 0.5 )  # example with age-stratified hospitalisation rate # 20% for over 80s # 10% for under 5s # 5% for the rest age_dep_hosp_rate <- data.frame(   min_age = c(1, 5, 80),   max_age = c(5, 80, 90),   rate = c(0.1, 0.05, 0.2) ) linelist <- sim_linelist(   R = 1.1,   serial_interval = serial_interval,   onset_to_hosp = onset_to_hosp,   onset_to_death = onset_to_death,   hosp_rate = age_dep_hosp_rate )"}]
