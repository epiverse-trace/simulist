% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/truncation.R
\name{truncation}
\alias{truncation}
\title{Adjust or subset a line list to account for right-truncation}
\usage{
truncation(
  linelist,
  delay = function(x) stats::rlnorm(n = x, meanlog = 0.58, sdlog = 0.47),
  max_date = NULL,
  truncation_event = c("reporting", "onset", "admission", "outcome")
)
}
\arguments{
\item{linelist}{A \verb{<data.frame>} output from \code{\link[=sim_linelist]{sim_linelist()}}.}

\item{delay}{A \code{function} (either anonymous or predefined) that
has a single argument and generates random numbers given a probability
distribution. The function must return a vector of real numbers for
representing the reporting delay between the right-truncation point and the
cut off date (\code{max_date}).

Default is a random number generator that is lognormally
distributed (\code{\link[=rlnorm]{rlnorm()}}) delay with parameters \code{meanlog = 0.58} and
\code{sdlog = 0.47}, which corresponds to a mean of 2 and a standard deviation
of 1.}

\item{max_date}{A maximum date to cut off the outbreak and apply reporting
delays. Default is \code{NULL}, so the maximum date will be automatically
calculated as the date at the end of the outbreak (i.e. date of the last
outcome).}

\item{truncation_event}{A \code{character} string with which event in the line
list the right-truncation should apply to. The default is \code{"reporting"} for
the reporting delay, which is likely the most common form of right-truncation
in real-time outbreak data. When \code{truncation_event = "reporting"} if a date
of reporting (\verb{$date_reporting}) is more recent than the sampled truncation
time then the individual (row) is removed from the line list. If the date of
reporting is less recent than the sampled truncation time but either the
date of hospitalisation (\verb{$date_admission}) or date of outcome
(\verb{$date_outcome}) is more recent than the sampled truncation time then these
dates are converted from \code{Date}s to \code{NA}s.

The other options for \code{truncation_event} are \code{"onset"}, \code{"admission"}
or \code{"outcome"}.  If these are chosen then if the truncation point is more
recent than the date of symptom onset, date of hospital admission, or
date of outcome (death or recovery), respectively, then these individuals
(rows) will be removed from the line list (i.e. the \verb{<data.frame>} is
subset). If the event is less recent than the sampled truncation time then
any events after the truncation point will be set to \code{NA}.}
}
\value{
A line list \verb{<data.frame>}.
}
\description{
Adjust or subset the line list \verb{<data.frame>} by either changing dates that
are within the right-truncation window to \code{NA} or removing cases that have
occurred within a delay period. This occurs to recent cases or outcomes
that are not yet recorded in the line list and will be revised upwards. See
\code{truncation_event} argument documentation for different types of truncation.
}
\details{
The truncation window is sampled for each individual and is specified by a
(random) number generating function supplied to the \code{delay}
argument. Therefore, if this function has variability
(e.g. a probability distribution) it will not be a fixed time window for
all individuals. It is possible that someone with a more recent date of
onset is kept but someone with a less recent date of onset is removed due
to the variability in the reporting delays. See examples for variable or
fixed \code{delay} functions.
}
\examples{
set.seed(1)
linelist <- sim_linelist()
linelist_trunc <- truncation(linelist)

# set maximum date to apply truncation to 2023-01-01
linelist_trunc <- truncation(linelist, max_date = "2023-01-01")

# apply longer truncation to hospital admission
linelist_trunc <- truncation(
  linelist,
  delay = function(x) rlnorm(n = x, meanlog = 2, sdlog = 0.5),
  truncation_event = "admission"
)

# variable right-truncation with mean 2 and sd 1 (default behaviour)
linelist_trunc <- truncation(
  linelist,
  delay = function(x) rlnorm(n = x, meanlog = 0.58, sdlog = 0.47)
)

# fixed right-truncation of 5 days
linelist_trunc <- truncation(
  linelist,
  delay = function(x) rep(5, n = x)
)
}
